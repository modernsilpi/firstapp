[{"D:\\sekhar\\firstapp\\firstapp\\src\\index.js":"1","D:\\sekhar\\firstapp\\firstapp\\src\\App.js":"2","D:\\sekhar\\firstapp\\firstapp\\src\\reportWebVitals.js":"3","D:\\sekhar\\firstapp\\firstapp\\src\\scrolltotop.js":"4","D:\\sekhar\\firstapp\\firstapp\\src\\components\\slide1.jsx":"5","D:\\sekhar\\firstapp\\firstapp\\src\\components\\postview.jsx":"6","D:\\sekhar\\firstapp\\firstapp\\src\\components\\mybooks.jsx":"7","D:\\sekhar\\firstapp\\firstapp\\src\\components\\profile.jsx":"8","D:\\sekhar\\firstapp\\firstapp\\src\\components\\newpost2.jsx":"9","D:\\sekhar\\firstapp\\firstapp\\src\\components\\editpost2.jsx":"10","D:\\sekhar\\firstapp\\firstapp\\src\\components\\chat.jsx":"11","D:\\sekhar\\firstapp\\firstapp\\src\\components\\signup.jsx":"12","D:\\sekhar\\firstapp\\firstapp\\src\\components\\pdetails.jsx":"13","D:\\sekhar\\firstapp\\firstapp\\src\\components\\bikerental.jsx":"14","D:\\sekhar\\firstapp\\firstapp\\src\\components\\partnerRegistration.jsx":"15","D:\\sekhar\\firstapp\\firstapp\\src\\components\\scroll.jsx":"16","D:\\sekhar\\firstapp\\firstapp\\src\\components\\contact.jsx":"17","D:\\sekhar\\firstapp\\firstapp\\src\\components\\navbar.jsx":"18","D:\\sekhar\\firstapp\\firstapp\\src\\components\\chats-section.jsx":"19","D:\\sekhar\\firstapp\\firstapp\\src\\firebase.js":"20","D:\\sekhar\\firstapp\\firstapp\\src\\components\\usertext.js":"21","D:\\sekhar\\firstapp\\firstapp\\src\\mservices\\contactUs.js":"22","D:\\sekhar\\firstapp\\firstapp\\src\\components\\reusable\\categories.js":"23","D:\\sekhar\\firstapp\\firstapp\\src\\mservices\\dateconv.js":"24","D:\\sekhar\\firstapp\\firstapp\\src\\components\\reusable\\msgdot.js":"25","D:\\sekhar\\firstapp\\firstapp\\src\\mservices\\upldmedia.js":"26","D:\\sekhar\\firstapp\\firstapp\\src\\components\\partnerText.js":"27","D:\\sekhar\\firstapp\\firstapp\\src\\components\\reusable\\Modal.jsx":"28","D:\\sekhar\\firstapp\\firstapp\\src\\mservices\\userDB.js":"29","D:\\sekhar\\firstapp\\firstapp\\src\\components\\privacy.jsx":"30","D:\\sekhar\\firstapp\\firstapp\\src\\hooks\\useWindowsize.jsx":"31","D:\\sekhar\\firstapp\\firstapp\\src\\components\\txtRotate.js":"32"},{"size":892,"mtime":1620210724953,"results":"33","hashOfConfig":"34"},{"size":3116,"mtime":1619966578868,"results":"35","hashOfConfig":"34"},{"size":375,"mtime":1612167828513,"results":"36","hashOfConfig":"34"},{"size":335,"mtime":1617753881483,"results":"37","hashOfConfig":"34"},{"size":21480,"mtime":1620796832931,"results":"38","hashOfConfig":"34"},{"size":16703,"mtime":1619966840692,"results":"39","hashOfConfig":"34"},{"size":8681,"mtime":1619966498216,"results":"40","hashOfConfig":"34"},{"size":11606,"mtime":1619980656924,"results":"41","hashOfConfig":"34"},{"size":16387,"mtime":1619966755215,"results":"42","hashOfConfig":"34"},{"size":15882,"mtime":1619966393674,"results":"43","hashOfConfig":"34"},{"size":7633,"mtime":1619967249643,"results":"44","hashOfConfig":"34"},{"size":5955,"mtime":1619968587264,"results":"45","hashOfConfig":"34"},{"size":2906,"mtime":1619223405513,"results":"46","hashOfConfig":"34"},{"size":40696,"mtime":1620197258648,"results":"47","hashOfConfig":"34"},{"size":28579,"mtime":1620796928474,"results":"48","hashOfConfig":"34"},{"size":1687,"mtime":1619223405604,"results":"49","hashOfConfig":"34"},{"size":12080,"mtime":1620301787495,"results":"50","hashOfConfig":"34"},{"size":9047,"mtime":1620792938145,"results":"51","hashOfConfig":"34"},{"size":44827,"mtime":1620457794506,"results":"52","hashOfConfig":"34"},{"size":1101,"mtime":1612376965525,"results":"53","hashOfConfig":"34"},{"size":1360,"mtime":1620466307799,"results":"54","hashOfConfig":"34"},{"size":1241,"mtime":1620457794528,"results":"55","hashOfConfig":"34"},{"size":449,"mtime":1619172831223,"results":"56","hashOfConfig":"34"},{"size":3342,"mtime":1619964893099,"results":"57","hashOfConfig":"34"},{"size":162,"mtime":1619224436031,"results":"58","hashOfConfig":"34"},{"size":2050,"mtime":1617935585822,"results":"59","hashOfConfig":"34"},{"size":2007,"mtime":1620794957391,"results":"60","hashOfConfig":"34"},{"size":1145,"mtime":1619361329740,"results":"61","hashOfConfig":"34"},{"size":355,"mtime":1619707219679,"results":"62","hashOfConfig":"34"},{"size":17605,"mtime":1620032423623,"results":"63","hashOfConfig":"34"},{"size":532,"mtime":1620126838083,"results":"64","hashOfConfig":"34"},{"size":1575,"mtime":1620457924962,"results":"65","hashOfConfig":"34"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},"khxf9o",{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75","usedDeprecatedRules":"68"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":40,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"78","messages":"79","errorCount":0,"warningCount":21,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80","usedDeprecatedRules":"68"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":15,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83","usedDeprecatedRules":"68"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"86","usedDeprecatedRules":"68"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"89","usedDeprecatedRules":"68"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":17,"fixableErrorCount":0,"fixableWarningCount":0,"source":"92","usedDeprecatedRules":"68"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"97","usedDeprecatedRules":"68"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":22,"fixableErrorCount":0,"fixableWarningCount":0,"source":"100","usedDeprecatedRules":"68"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":52,"fixableErrorCount":0,"fixableWarningCount":0,"source":"103","usedDeprecatedRules":"68"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":17,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"106","messages":"107","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"108","usedDeprecatedRules":"68"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"111","usedDeprecatedRules":"68"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"114","messages":"115","errorCount":0,"warningCount":70,"fixableErrorCount":0,"fixableWarningCount":0,"source":"116","usedDeprecatedRules":"68"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"119","usedDeprecatedRules":"68"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":17,"fixableErrorCount":0,"fixableWarningCount":0,"source":"128","usedDeprecatedRules":"68"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"133","usedDeprecatedRules":"68"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"136","messages":"137","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"138","messages":"139","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"144"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},"D:\\sekhar\\firstapp\\firstapp\\src\\index.js",[],["147","148"],"D:\\sekhar\\firstapp\\firstapp\\src\\App.js",[],"D:\\sekhar\\firstapp\\firstapp\\src\\reportWebVitals.js",[],"D:\\sekhar\\firstapp\\firstapp\\src\\scrolltotop.js",["149"],"import { useEffect } from 'react';\r\nimport { withRouter } from 'react-router-dom';function ScrollToTop({ history }) {\r\n  useEffect(() => {\r\n    const unlisten = history.listen(() => {\r\n      window.scrollTo(0, 0);\r\n    });\r\n    return () => {\r\n      unlisten();\r\n    }\r\n  }, []);  return null;\r\n}export default withRouter(ScrollToTop);","D:\\sekhar\\firstapp\\firstapp\\src\\components\\slide1.jsx",["150","151","152","153","154","155","156","157","158","159","160","161","162","163","164","165","166","167","168","169","170","171","172","173","174","175","176","177","178","179","180","181","182","183","184","185","186","187","188","189"],"D:\\sekhar\\firstapp\\firstapp\\src\\components\\postview.jsx",["190","191","192","193","194","195","196","197","198","199","200","201","202","203","204","205","206","207","208","209","210"],"import React, { Component } from \"react\";\r\nimport firebase from \"../firebase\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport { Carousel } from \"react-bootstrap\";\r\nimport {\r\n  Card,\r\n  Icon,\r\n  Image,\r\n  Dropdown,\r\n  Label,\r\n  Step,\r\n  Button,\r\n  Rating,\r\n} from \"semantic-ui-react\";\r\nimport react, { useState, useEffect } from \"react\";\r\nimport { toast } from \"react-toastify\";\r\n\r\nimport {\r\n  MdDelete,\r\n  MdLocationOn,\r\n  MdAccessTime,\r\n  MdWatchLater,\r\n  MdCheckCircle,\r\n  MdAssignmentTurnedIn,\r\n  MdBuild,\r\n  MdThumbDown,\r\n  MdAccountCircle,\r\n  MdSmartphone,\r\n  MdPhone,\r\n  MdEmail,\r\n} from \"react-icons/md\";\r\nimport { AiFillEdit } from \"react-icons/ai\";\r\nimport { RiUserSettingsFill, RiTimeFill } from \"react-icons/ri\";\r\nimport { HiCurrencyRupee } from \"react-icons/hi\";\r\nimport { FaTools, FaAddressCard } from \"react-icons/fa\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport \"../assets/css/postView.css\";\r\nimport { categoryAssign } from \"./reusable/categories\";\r\nimport { gettbystamps } from \"../mservices/dateconv\";\r\n\r\nconst db = firebase.firestore();\r\n\r\nfunction useTimes() {\r\n  const [postdata, setdata] = useState([]);\r\n  const [posttime, setposttime] = useState([]);\r\n  useEffect(() => {\r\n    //\r\n    firebase.auth().onAuthStateChanged(function (user) {\r\n      if (user) {\r\n        let arr = [];\r\n\r\n        var personId;\r\n\r\n        personId = window.location.pathname;\r\n        personId = personId.replace(\"/mybookings/id/\", \"\");\r\n        db.collection(\"users\")\r\n          .doc(firebase.auth().currentUser.uid)\r\n          .collection(\"adpost\")\r\n          .doc(personId)\r\n          .onSnapshot((snap) => {\r\n            setdata(snap.data());\r\n            // arr.push(snap.data().posttime);\r\n            // arr.push(snap.data().schedule);\r\n            setposttime(arr);\r\n          });\r\n      }\r\n    });\r\n    //\r\n  }, []);\r\n  return { postdata, posttime };\r\n}\r\n\r\nconst Navbar3 = () => {\r\n  const history = useHistory();\r\n  const { postdata, posttime } = useTimes();\r\n\r\n  var media = [];\r\n  if (postdata.media) {\r\n    media = postdata.media;\r\n    console.log(\"times avail\");\r\n  } else console.log(\"time not\");\r\n  const click = (prop) => {\r\n    console.log(\"click\", prop);\r\n    history.push(`edit/${prop}`);\r\n  };\r\n  const delpost = (pro) => {\r\n    db.collection(\"users\")\r\n      .doc(firebase.auth().currentUser.uid)\r\n      .collection(\"adpost\")\r\n      .doc(pro)\r\n      .delete()\r\n      .then(() => {\r\n        // alert(\"ad deleted succefully\");\r\n        toast.success(\"ad deleted succefully\");\r\n      });\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <div>\r\n        <div style={{ paddingBottom: \"10px\" }}>\r\n          <Card\r\n            centered\r\n            color=\"blue\"\r\n            className=\"wholeCard\"\r\n            style={{\r\n              width: \"80%\",\r\n              marginBottom: \"50px\",\r\n              borderRadius: \"1rem\",\r\n            }}\r\n          >\r\n            <Card.Content>\r\n              <Card.Meta style={{ display: \"inline-flex\" }}>\r\n                <Icon name=\"time\" />{\" \"}\r\n                {gettbystamps(Number(postdata.posttime), \"fulldate\")}{\" \"}\r\n                &nbsp;@&nbsp;\r\n                <b> {gettbystamps(Number(postdata.posttime), \"time\")}</b>\r\n              </Card.Meta>\r\n              <Dropdown\r\n                item\r\n                icon=\"ellipsis horizontal\"\r\n                simple\r\n                style={{ float: \"right\" }}\r\n              >\r\n                <Dropdown.Menu>\r\n                  <Dropdown.Item onClick={(e) => click(postdata.orderid)}>\r\n                    <Icon name=\"edit\" />\r\n                    Edit post\r\n                  </Dropdown.Item>\r\n                  <Dropdown.Item onClick={(e) => delpost(postdata.orderid)}>\r\n                    <Icon name=\"trash\" /> Delete\r\n                  </Dropdown.Item>\r\n                </Dropdown.Menu>\r\n              </Dropdown>\r\n            </Card.Content>\r\n            <Card.Content>\r\n              <Carousel className=\"postImg\">\r\n                {media.map((nap) => (\r\n                  <Carousel.Item>\r\n                    <video\r\n                      centered\r\n                      className=\"postImg\"\r\n                      src={nap}\r\n                      poster={nap}\r\n                      autoPlay\r\n                      loop\r\n                      // style={{ borderRadius: \"1rem\" }}\r\n                    />\r\n                    <Carousel.Caption></Carousel.Caption>\r\n                  </Carousel.Item>\r\n                ))}\r\n              </Carousel>\r\n            </Card.Content>\r\n            <Card.Content>\r\n              <Card.Header textAlign=\"center\">\r\n                Title: <u>{postdata.problem}</u>\r\n              </Card.Header>\r\n            </Card.Content>\r\n\r\n            <div style={{ marginBottom: \"20px\" }}>\r\n              <Card.Group\r\n                className=\"cardHolder\"\r\n                style={{\r\n                  margin: \"0 auto\",\r\n                  width: \"fit-content\",\r\n                  justifyContent: \"center\",\r\n                }}\r\n              >\r\n                <Card\r\n                  className=\"postCard\"\r\n                  style={{ borderRadius: \"1rem\" }}\r\n                  color=\"blue\"\r\n                >\r\n                  <Card.Content>\r\n                    <Card.Meta>\r\n                      <Icon name=\"sticky note\" /> Description\r\n                    </Card.Meta>\r\n                    <Card.Description>\r\n                      <h3>{postdata.description}</h3>\r\n                    </Card.Description>\r\n                  </Card.Content>\r\n                </Card>\r\n\r\n                <Card\r\n                  className=\"postCard\"\r\n                  style={{ borderRadius: \"1rem\" }}\r\n                  color=\"green\"\r\n                >\r\n                  <Card.Content>\r\n                    <Card.Meta>\r\n                      <Icon name=\"rupee sign\" />\r\n                      Price\r\n                    </Card.Meta>\r\n                    {String(postdata.money) != \"NaN\" ? (\r\n                      <h2 style={{ textAlign: \"center\" }}>\r\n                        <Icon name=\"rupee sign\" />\r\n                        {postdata.money}\r\n                      </h2>\r\n                    ) : (\r\n                      <h2 style={{ textAlign: \"center\" }}>\r\n                        <Icon name=\"rupee sign\" />-\r\n                      </h2>\r\n                    )}\r\n                  </Card.Content>\r\n                  <Card.Content>\r\n                    {postdata.orderstate == 2 ? (\r\n                      <Label\r\n                        color=\"green\"\r\n                        attached=\"bottom right\"\r\n                        size=\"mini\"\r\n                        style={{\r\n                          marginRight: \"10px\",\r\n                          marginBottom: \"2%\",\r\n                          borderRadius: \"0.5rem\",\r\n                        }}\r\n                      >\r\n                        <MdCheckCircle /> Paid\r\n                      </Label>\r\n                    ) : (\r\n                      <Label\r\n                        color=\"blue\"\r\n                        attached=\"bottom right\"\r\n                        size=\"mini\"\r\n                        style={{\r\n                          marginRight: \"10px\",\r\n                          marginBottom: \"2%\",\r\n                          borderRadius: \"0.5rem\",\r\n                        }}\r\n                      >\r\n                        <MdWatchLater /> Not paid\r\n                      </Label>\r\n                    )}\r\n                  </Card.Content>\r\n                </Card>\r\n\r\n                <Card\r\n                  className=\"postCard\"\r\n                  style={{ borderRadius: \"1rem\", float: \"right\" }}\r\n                  color=\"orange\"\r\n                >\r\n                  <Card.Content>\r\n                    <Card.Meta>\r\n                      <Icon name=\"info circle\" /> Details\r\n                    </Card.Meta>\r\n                  </Card.Content>\r\n                  <Card.Content>\r\n                    <Card.Description>\r\n                      <h4>\r\n                        {\" \"}\r\n                        <MdLocationOn /> Location: {postdata.location}\r\n                      </h4>\r\n                      <h4>\r\n                        <RiUserSettingsFill /> category :\r\n                        {categoryAssign(postdata.job)}\r\n                      </h4>\r\n                      <h4>\r\n                        <RiTimeFill />\r\n                        posted time:\r\n                        {gettbystamps(\r\n                          Number(postdata.posttime),\r\n                          \"fulldate\"\r\n                        )}{\" \"}\r\n                        &nbsp;@&nbsp;\r\n                        <b>\r\n                          {\" \"}\r\n                          {gettbystamps(Number(postdata.posttime), \"time\")}\r\n                        </b>\r\n                      </h4>\r\n                    </Card.Description>\r\n                  </Card.Content>\r\n                </Card>\r\n              </Card.Group>\r\n            </div>\r\n\r\n            <Step.Group centered>\r\n              <Step>\r\n                <MdAssignmentTurnedIn size=\"2.8rem\" />\r\n                <Step.Content>\r\n                  <Step.Title> Adpost</Step.Title>\r\n                  <Step.Description>\r\n                    @ {gettbystamps(Number(postdata.posttime), \"fulldate\")}{\" \"}\r\n                    &nbsp;@&nbsp;\r\n                    <b> {gettbystamps(Number(postdata.posttime), \"time\")}</b>\r\n                  </Step.Description>\r\n                </Step.Content>\r\n              </Step>\r\n              {postdata.orderstate == 2 ? (\r\n                <Step>\r\n                  <MdBuild size=\"2.8rem\" />\r\n                  <Step.Content>\r\n                    <Step.Title> Service completed</Step.Title>\r\n                    <Step.Description>{postdata.servcmpld}</Step.Description>\r\n                  </Step.Content>\r\n                </Step>\r\n              ) : (\r\n                <Step>\r\n                  <MdBuild size=\"2.8rem\" />\r\n                  <Step.Content>\r\n                    <Step.Title> Service pending</Step.Title>\r\n                    <Step.Description>\r\n                      please confirm when service completed\r\n                    </Step.Description>\r\n                  </Step.Content>\r\n                </Step>\r\n              )}\r\n\r\n              {postdata.orderstate == 2 ? (\r\n                <Step completed>\r\n                  <Icon name=\"info\" />\r\n                  <Step.Content>\r\n                    <Step.Title>Order completed</Step.Title>\r\n                  </Step.Content>\r\n                </Step>\r\n              ) : (\r\n                <Step>\r\n                  <Icon name=\"info\" />\r\n                  <Step.Content>\r\n                    <Step.Title>Order pending</Step.Title>\r\n                  </Step.Content>\r\n                </Step>\r\n              )}\r\n            </Step.Group>\r\n            {postdata.orderstate != 2 ? (\r\n              <Cnfbtn id={postdata.orderid} />\r\n            ) : (\r\n              <span></span>\r\n            )}\r\n\r\n            {postdata.fback == 0 ? <Fback /> : <span></span>}\r\n            {postdata.partnerid ? (\r\n              <Partdetail id={postdata.partnerid} />\r\n            ) : (\r\n              <span></span>\r\n            )}\r\n\r\n            <Card.Content extra>\r\n              <a onClick={(e) => click(postdata.orderid)}>\r\n                <Icon name=\"edit\" />\r\n              </a>\r\n              &nbsp;\r\n              <a onClick={(e) => delpost(postdata.orderid)}>\r\n                <Icon name=\"trash\" />\r\n              </a>\r\n              {postdata.orderstate == 2 ? (\r\n                <Label\r\n                  color=\"green\"\r\n                  attached=\"bottom right\"\r\n                  style={{\r\n                    marginRight: \"10px\",\r\n                    marginBottom: \"5px\",\r\n                    borderRadius: \"0.5rem\",\r\n                  }}\r\n                >\r\n                  <MdCheckCircle /> Completed\r\n                </Label>\r\n              ) : (\r\n                <Label\r\n                  color=\"blue\"\r\n                  attached=\"bottom right\"\r\n                  style={{\r\n                    marginRight: \"10px\",\r\n                    marginBottom: \"5px\",\r\n                    borderRadius: \"0.5rem\",\r\n                  }}\r\n                >\r\n                  <MdWatchLater /> Pending\r\n                </Label>\r\n              )}\r\n            </Card.Content>\r\n          </Card>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Navbar3;\r\n\r\nclass Cnfbtn extends React.Component {\r\n  pending = (e) => {\r\n    console.log(e.target.parentElement.parentElement.id);\r\n    document.getElementById(\r\n      e.target.parentElement.parentElement.id\r\n    ).style.display = \"none\";\r\n  };\r\n  completed = (e) => {\r\n    console.log(this.props.id);\r\n    db.collection(\"users\")\r\n      .doc(firebase.auth().currentUser.uid)\r\n      .collection(\"adpost\")\r\n      .doc(this.props.id)\r\n      .update({\r\n        orderstate: 2,\r\n        fback: 0,\r\n      });\r\n  };\r\n  render() {\r\n    return (\r\n      <div id=\"cnfbutton\" className=\"cnfButton\">\r\n        <Button.Group\r\n          style={{\r\n            width: \"70%\",\r\n            display: \"flex\",\r\n            justifyContent: \"center\",\r\n            alignItems: \"center\",\r\n          }}\r\n        >\r\n          <Button onClick={this.pending}>\r\n            <MdThumbDown size=\"1.6rem\" /> Pending\r\n          </Button>\r\n          <Button.Or />\r\n          <Button color=\"blue\" onClick={this.completed}>\r\n            <MdCheckCircle size=\"1.6rem\" /> Completed\r\n          </Button>\r\n        </Button.Group>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nclass Fback extends React.Component {\r\n  state = {};\r\n\r\n  handleRate = (e, { rating, maxRating }) => {\r\n    this.setState({ rating, maxRating });\r\n    console.log(this.state.rating);\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div style={{ alignContent: \"center\", textAlign: \"center\" }}>\r\n        <h3>Please rate the service</h3>\r\n        <Rating\r\n          maxRating={5}\r\n          clearable\r\n          size=\"massive\"\r\n          style={{ width: \"30%\" }}\r\n          onRate={this.handleRate}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nfunction Partdetail(props) {\r\n  const [pdata, setpdata] = useState([]);\r\n  console.log(props.id);\r\n  useEffect(() => {\r\n    db.collection(\"partner\")\r\n      .doc(props.id)\r\n      .collection(\"ProfileInfo\")\r\n      .doc(props.id)\r\n      .get()\r\n      .then((snap) => {\r\n        setpdata(snap.data());\r\n      })\r\n      .then(() => {\r\n        console.log(pdata);\r\n      });\r\n  }, []);\r\n\r\n  var dhref = \"tel: +91 \" + pdata.phone;\r\n\r\n  return (\r\n    <div style={{ paddingBottom: \"50px\", paddingTop: \"40px\" }}>\r\n      <Card\r\n        centered\r\n        color=\"blue\"\r\n        style={{ borderRadius: \"1rem\", width: \"80%\" }}\r\n      >\r\n        <Card.Content>\r\n          <Card.Header style={{ textAlign: \"center\" }}>\r\n            <Card.Meta>\r\n              <MdAccountCircle size=\"2rem\" /> Technician Details\r\n            </Card.Meta>\r\n          </Card.Header>\r\n        </Card.Content>\r\n        <Card.Content>\r\n          <img\r\n            src={pdata.profilepic}\r\n            style={{ width: \"100%\", borderRadius: \"1rem\", height: \"100%\" }}\r\n          />\r\n        </Card.Content>\r\n        <Card.Content style={{ textAlign: \"center\" }}>\r\n          <Card.Header>\r\n            <h2>\r\n              <MdAccountCircle /> {pdata.name}\r\n            </h2>\r\n          </Card.Header>\r\n          <Card.Meta>\r\n            <span>\r\n              <small>\r\n                <MdSmartphone /> {pdata.phone}\r\n              </small>\r\n            </span>\r\n            <span>\r\n              <small>\r\n                <MdPhone /> {pdata.altNum}\r\n              </small>\r\n            </span>\r\n            <span>\r\n              <small>\r\n                <MdEmail /> {pdata.email}\r\n              </small>\r\n            </span>\r\n          </Card.Meta>\r\n          <Card.Description>{pdata.desc}</Card.Description>\r\n        </Card.Content>\r\n\r\n        <Card centered color=\"orange\" style={{ borderRadius: \"1rem\" }}>\r\n          <Card.Content>\r\n            <Card.Header>\r\n              <FaAddressCard /> Technician address\r\n            </Card.Header>\r\n          </Card.Content>\r\n          <Card.Content>\r\n            <Card.Description>{pdata.addrs}</Card.Description>\r\n          </Card.Content>\r\n        </Card>\r\n        <Card.Content extra>\r\n          <a href={dhref}>\r\n            <MdPhone size=\"1.3rem\" />\r\n            Call\r\n          </a>\r\n          <a style={{ float: \"right\" }}>\r\n            <Icon name=\"setting\" />\r\n            <Dropdown text=\"more\">\r\n              <Dropdown.Menu>\r\n                <Dropdown.Item text=\"Raise complaint\" />\r\n                <Dropdown.Item text=\"Report\" />\r\n              </Dropdown.Menu>\r\n            </Dropdown>\r\n          </a>\r\n        </Card.Content>\r\n      </Card>\r\n    </div>\r\n  );\r\n}\r\n","D:\\sekhar\\firstapp\\firstapp\\src\\components\\mybooks.jsx",["211","212","213","214","215","216","217","218","219","220","221","222","223","224","225"],"import React, { Component } from \"react\";\r\nimport firebase from \"../firebase\";\r\nimport react, { useState, useEffect } from \"react\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport { Col, Row } from \"react-bootstrap\";\r\nimport {\r\n  Card,\r\n  Image,\r\n  Label,\r\n  Dropdown,\r\n  Icon,\r\n  Segment,\r\n  Dimmer,\r\n  Loader,\r\n} from \"semantic-ui-react\";\r\nimport \"../index.css\";\r\nimport \"../post.css\";\r\nimport { gettbystamps } from \"../mservices/dateconv\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { toast } from \"react-toastify\";\r\n\r\nimport \"semantic-ui-css/semantic.min.css\";\r\n//import { Card, Icon,Button,Header, Image, Modal,Step,Menu,Dropdown } from 'semantic-ui-react'\r\n\r\n//import icons\r\nimport { IconContext } from \"react-icons\";\r\nimport { BsEyeFill } from \"react-icons/bs\";\r\nimport { BiTimeFive } from \"react-icons/bi\";\r\nimport { RiPinDistanceFill } from \"react-icons/ri\";\r\nimport { HiOutlineCurrencyRupee } from \"react-icons/hi\";\r\nimport { MdDelete, MdCheckCircle, MdRemoveRedEye } from \"react-icons/md\";\r\nimport { AiFillEdit } from \"react-icons/ai\";\r\nimport { FiMoreHorizontal } from \"react-icons/fi\";\r\n\r\nconst db = firebase.firestore();\r\n\r\nfunction useTimes() {\r\n  const [times, setTimes] = useState([]);\r\n  useEffect(() => {\r\n    firebase.auth().onAuthStateChanged(function (user) {\r\n      if (user) {\r\n        db.collection(\"users\")\r\n          .doc(firebase.auth().currentUser.uid)\r\n          .collection(\"adpost\")\r\n          .onSnapshot((snap) => {\r\n            const newtimes = snap.docs.map((doc) => ({\r\n              id: doc.id,\r\n              ...doc.data(),\r\n            }));\r\n            setTimes(newtimes);\r\n          });\r\n      }\r\n    });\r\n  }, []);\r\n  return times;\r\n}\r\nconst Sekhar = () => {\r\n  const times = useTimes();\r\n  // console.log(times[0].media)\r\n  return (\r\n    <div className=\"responses\">\r\n      {/* <div className=\"comingSoon\">\r\n        <h1 className=\"soonText\">Coming Soon ...</h1>\r\n        </div> */}\r\n      <Mybookings data={times} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Sekhar;\r\n\r\nfunction Mybookings(props) {\r\n  const history = useHistory();\r\n\r\n  const click = (prop) => {\r\n    console.log(\"click\", prop);\r\n    history.push(`mybookings/id/${prop}`);\r\n  };\r\n\r\n  const edit = (prop) => {\r\n    console.log(\"click\", prop);\r\n    history.push(`mybookings/id/edit/${prop}`);\r\n  };\r\n  const delpost = (pro) => {\r\n    db.collection(\"users\")\r\n      .doc(firebase.auth().currentUser.uid)\r\n      .collection(\"adpost\")\r\n      .doc(pro)\r\n      .delete()\r\n      .then(() => {\r\n        //  alert(\"ad deleted succefully\");\r\n        toast.success(\"ad deleted succefully\");\r\n      });\r\n  };\r\n  return (\r\n    <div>\r\n      {props.data.length == 0 ? (\r\n        // <Col xs={12} lg={12}> <Segment className=\"rentcard\">\r\n        //           <Dimmer active inverted>\r\n        //             <Loader size='large'>Loading</Loader>\r\n        //           </Dimmer>\r\n\r\n        //           <Image src='/images/wireframe/paragraph.png' />\r\n        //          </Segment></Col>\r\n\r\n        <Card.Group>\r\n          <Card centered fluid id=\"book-card\">\r\n            <Card.Content>\r\n              <Card.Meta style={{ display: \"inline-flex\" }}>\r\n                <Icon name=\"time\" />{\" \"}\r\n              </Card.Meta>\r\n              <Dropdown\r\n                item\r\n                icon=\"ellipsis horizontal\"\r\n                simple\r\n                style={{ float: \"right\" }}\r\n              ></Dropdown>\r\n            </Card.Content>\r\n            <Card.Content\r\n              extra\r\n              style={{ display: \"inline-block\", cursor: \"pointer\" }}\r\n            >\r\n              {/* <Image\r\n      className=\"post-img\" \r\n      style={{width:\"100px\",height:\"80px\",borderRadius:\"1rem\",cursor:\"pointer\"}}\r\n      \r\n          floated='left'\r\n           />   */}\r\n              <Segment className=\"post-img\">\r\n                <Dimmer active inverted>\r\n                  <Loader size=\"large\">Loading</Loader>\r\n                </Dimmer>\r\n\r\n                <Image src=\"/images/wireframe/paragraph.png\" />\r\n              </Segment>\r\n            </Card.Content>\r\n          </Card>\r\n        </Card.Group>\r\n      ) : (\r\n        <Sematiccard data={props.data} />\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction Sematiccard(props) {\r\n  const history = useHistory();\r\n  const click = (prop) => {\r\n    console.log(\"click\", prop);\r\n    history.push(`mybookings/id/${prop}`);\r\n  };\r\n\r\n  const edit = (prop) => {\r\n    console.log(\"click\", prop);\r\n    history.push(`mybookings/id/edit/${prop}`);\r\n  };\r\n  const delpost = (pro) => {\r\n    db.collection(\"users\")\r\n      .doc(firebase.auth().currentUser.uid)\r\n      .collection(\"adpost\")\r\n      .doc(pro)\r\n      .delete()\r\n      .then(() => {\r\n        alert(\"ad deleted succefully\");\r\n        toast.success(\"ad deleted succefully\");\r\n      });\r\n  };\r\n\r\n  return (\r\n    <div style={{ paddingTop: \"30px\" }}>\r\n      {props.data.map((cap, key) => (\r\n        <Card.Group>\r\n          <Card centered fluid id=\"book-card\">\r\n            <Card.Content>\r\n              <Card.Meta style={{ display: \"inline-flex\" }}>\r\n                <Icon name=\"time\" />{\" \"}\r\n                {gettbystamps(Number(cap.posttime), \"fulldate\")} &nbsp;@&nbsp;\r\n                <b> {gettbystamps(Number(cap.posttime), \"time\")}</b>\r\n              </Card.Meta>\r\n              <Dropdown\r\n                item\r\n                icon=\"ellipsis horizontal\"\r\n                simple\r\n                style={{ float: \"right\" }}\r\n              >\r\n                <Dropdown.Menu>\r\n                  <Dropdown.Item onClick={(e) => click(cap.id)}>\r\n                    View post\r\n                  </Dropdown.Item>\r\n                  <Dropdown.Item onClick={(e) => edit(cap.orderid)}>\r\n                    Edit post\r\n                  </Dropdown.Item>\r\n                  <Dropdown.Item onClick={(e) => delpost(cap.orderid)}>\r\n                    Delete\r\n                  </Dropdown.Item>\r\n                </Dropdown.Menu>\r\n              </Dropdown>\r\n            </Card.Content>\r\n            <Card.Content\r\n              extra\r\n              style={{ display: \"inline-block\", cursor: \"pointer\" }}\r\n              onClick={(e) => click(cap.id)}\r\n            >\r\n              <Image\r\n                className=\"post-img\"\r\n                style={{ borderRadius: \"1rem\", cursor: \"pointer\" }}\r\n                floated=\"left\"\r\n                src={cap.media[0]}\r\n              />\r\n\r\n              <Card.Header style={{ paddingBottom: \"10px\", cursor: \"pointer\" }}>\r\n                {cap.problem}\r\n              </Card.Header>\r\n              <div style={{ display: \"inline-flex\" }}>\r\n                <div style={{ paddingRight: \"30px\" }}>\r\n                  <p>\r\n                    <BsEyeFill /> Views: {cap.views}\r\n                  </p>\r\n                  <p>\r\n                    <RiPinDistanceFill /> Distance: 1km\r\n                  </p>\r\n                </div>\r\n                <div>\r\n                  {String(cap.money) != \"NaN\" ? (\r\n                    <p>\r\n                      <HiOutlineCurrencyRupee /> Money: &#8377;{cap.money}\r\n                    </p>\r\n                  ) : (\r\n                    <p>\r\n                      <HiOutlineCurrencyRupee /> Money: &#8377;--\r\n                    </p>\r\n                  )}\r\n\r\n                  <p>\r\n                    <BiTimeFive /> Time: 1hr\r\n                  </p>\r\n                </div>\r\n              </div>\r\n            </Card.Content>\r\n            <Card.Content style={{ display: \"inline-flex\" }}>\r\n              <p onClick={(e) => click(cap.id)} style={{ cursor: \"pointer\" }}>\r\n                <BsEyeFill size=\"1.5rem\" />\r\n                <u>\r\n                  {\" \"}\r\n                  <b>View post</b>\r\n                </u>\r\n              </p>\r\n              {cap.orderstate == 2 ? (\r\n                <Label\r\n                  color=\"green\"\r\n                  attached=\"bottom right\"\r\n                  style={{\r\n                    marginRight: \"10px\",\r\n                    marginBottom: \"10px\",\r\n                    borderRadius: \"0.7rem\",\r\n                  }}\r\n                >\r\n                  <MdCheckCircle /> Completed\r\n                </Label>\r\n              ) : (\r\n                <Label\r\n                  color=\"blue\"\r\n                  attached=\"bottom right\"\r\n                  style={{\r\n                    marginRight: \"10px\",\r\n                    marginBottom: \"10px\",\r\n                    borderRadius: \"0.7rem\",\r\n                  }}\r\n                >\r\n                  Active\r\n                </Label>\r\n              )}\r\n            </Card.Content>\r\n          </Card>\r\n        </Card.Group>\r\n      ))}\r\n    </div>\r\n  );\r\n}\r\n\r\nfirebase.auth().onAuthStateChanged(function (user) {\r\n  if (user) {\r\n  }\r\n});\r\n","D:\\sekhar\\firstapp\\firstapp\\src\\components\\profile.jsx",["226","227","228","229","230","231","232","233","234","235"],"import React, { Component } from \"react\";\r\nimport pic from \"../images/logo192.png\";\r\nimport firebase from \"../firebase\";\r\nimport { useState, useEffect } from \"react\";\r\nimport { Button, Form, InputGroup, FormControl } from \"react-bootstrap\";\r\nimport { Card, Icon, Image, Dropdown } from \"semantic-ui-react\";\r\nimport { toast } from \"react-toastify\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { sharemydetails } from \"../mservices/userDB\";\r\n\r\nimport \"../index.css\";\r\nimport \"../assets/css/profile.css\";\r\n\r\nimport imageCompression from \"browser-image-compression\";\r\n\r\nimport {\r\n  MdAccountCircle,\r\n  MdPhone,\r\n  MdEmail,\r\n  MdSmartphone,\r\n} from \"react-icons/md\";\r\n\r\nconst db = firebase.firestore();\r\nconst storage = firebase.storage();\r\n\r\nclass Profile extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      profile: {},\r\n    };\r\n    this.handlechange = this.handlechange.bind(this);\r\n    this.editpro = this.editpro.bind(this);\r\n  }\r\n\r\n  async componentDidMount() {\r\n    if (firebase.auth().currentUser.uid) {\r\n      let details = await sharemydetails(firebase.auth().currentUser.uid);\r\n      this.setState({ profile: details });\r\n    }\r\n  }\r\n\r\n  async componentDidUpdate() {\r\n    if (this.state.profile.name == \"\") {\r\n      let details = await sharemydetails(firebase.auth().currentUser.uid);\r\n      this.setState({ profile: details });\r\n    }\r\n  }\r\n\r\n  userlogout() {\r\n    firebase\r\n      .auth()\r\n      .signOut()\r\n      .then(function () {\r\n        //  alert(\"logout successfully\");\r\n        toast.success(\"Logout Successfully\");\r\n        this.props.history.push(\"/\");\r\n        setTimeout(() => {}, 1000);\r\n        window.location.reload();\r\n      });\r\n  }\r\n\r\n  editpro(e) {\r\n    toast.info(\"Details Updating...\");\r\n    e.preventDefault();\r\n    db.collection(\"users\")\r\n      .doc(firebase.auth().currentUser.uid)\r\n      .update({\r\n        name: this.state.profile.name,\r\n        email: this.state.profile.email,\r\n        pic: document.getElementById(\"editpic\").src,\r\n        altnum: this.state.profile.altnum,\r\n      })\r\n      .then(() => {\r\n        // alert(\"details updated...\");\r\n        toast.success(\"Details Updated\");\r\n        document.querySelector(\".editpro\").style.display = \"none\";\r\n        let temp = this.state.profile;\r\n        temp[\"pic\"] = document.getElementById(\"editpic\").src;\r\n        this.setState({ profile: temp });\r\n\r\n        // window.location.reload();\r\n      });\r\n  }\r\n\r\n  async upldimg(e) {\r\n    const options = {\r\n      maxSizeMB: 0.2,\r\n      maxWidthOrHeight: 800,\r\n      useWebWorker: true,\r\n    };\r\n    let cfile;\r\n\r\n    var file = e.target.files[0];\r\n\r\n    await imageCompression(file, options)\r\n      .then((x) => {\r\n        cfile = x;\r\n      })\r\n      .catch(function (error) {\r\n        console.log(error.message);\r\n      });\r\n\r\n    console.log(\"fileis\", file.name);\r\n    var uploaderb = document.querySelector(\"#uploaderb\");\r\n    uploaderb.style.display = \"block\";\r\n    // crate storage ref\r\n    var storageref = storage.ref(\r\n      `users/${firebase.auth().currentUser.uid}/profile/` + cfile.name\r\n    );\r\n\r\n    //upload file\r\n    var task = storageref.put(cfile);\r\n\r\n    //update progress bar\r\n    task.on(\r\n      \"state_changed\",\r\n      function progress(snapshot) {\r\n        var percentage =\r\n          (snapshot.bytesTransferred / snapshot.totalBytes) * 100;\r\n        uploaderb.value = percentage;\r\n      },\r\n      function error(err) {\r\n        console.log(err);\r\n      },\r\n      function complete() {\r\n        console.log(\"adhar back uploaded successfully \");\r\n        task.snapshot.ref.getDownloadURL().then(function (downloadURL) {\r\n          console.log(\"File available at\", downloadURL);\r\n          document.getElementById(\"editpic\").setAttribute(\"src\", downloadURL);\r\n          uploaderb.style.display = \"none\";\r\n        });\r\n      }\r\n    );\r\n  }\r\n  handlechange(e) {\r\n    let value = e.target.value;\r\n    let id = e.target.id;\r\n    console.log(id, value);\r\n    let temp = this.state.profile;\r\n\r\n    temp[id] = value;\r\n    this.setState({ profile: temp });\r\n  }\r\n  render() {\r\n    // document.getElementById(\"name\").value = this.state.profile.name;\r\n    // document.getElementById(\"email\").value = this.state.profile.email;\r\n    // document.getElementById(\"altnum\").value = this.state.profile.altnum;\r\n    // document.getElementById(\"editpic\").src = this.state.profile.pic;\r\n    return (\r\n      <div>\r\n        <div style={{ paddingBottom: \"50px\" }}>\r\n          <Card\r\n            centered\r\n            color=\"blue\"\r\n            // style={{ width: wWidth > 625 ? \"50%\" : \"85%\" }}\r\n            className=\"detailsContainer\"\r\n          >\r\n            <Card.Content>\r\n              <Card.Header style={{ textAlign: \"center\" }}>\r\n                <Card.Meta>\r\n                  <MdAccountCircle size=\"2rem\" /> Account Details\r\n                </Card.Meta>\r\n              </Card.Header>\r\n\r\n              <Dropdown\r\n                item\r\n                icon=\"ellipsis horizontal\"\r\n                simple\r\n                style={{ float: \"right\" }}\r\n              >\r\n                <Dropdown.Menu>\r\n                  <Dropdown.Item>\r\n                    <Icon name=\"edit\" />\r\n                    Edit post\r\n                  </Dropdown.Item>\r\n                  <Dropdown.Item>\r\n                    <Icon name=\"trash\" /> Delete\r\n                  </Dropdown.Item>\r\n                </Dropdown.Menu>\r\n              </Dropdown>\r\n            </Card.Content>\r\n            <Card.Content>\r\n              <img src={this.state.profile.pic} className=\"postImg\" />\r\n            </Card.Content>\r\n            <Card.Content style={{ textAlign: \"center\" }}>\r\n              <Card.Header>\r\n                <h2>\r\n                  <MdAccountCircle /> {this.state.profile.name}\r\n                </h2>\r\n              </Card.Header>\r\n              <Card.Meta>\r\n                <span className=\"accInfo\">\r\n                  <small>\r\n                    <MdSmartphone className=\"Icons\" />{\" \"}\r\n                    {this.state.profile.phone}\r\n                  </small>\r\n                </span>\r\n                <span className=\"accInfo\">\r\n                  <small>\r\n                    <MdPhone className=\"Icons\" /> {this.state.profile.altnum}\r\n                  </small>\r\n                </span>\r\n                <span className=\"accInfo\">\r\n                  <small>\r\n                    <MdEmail className=\"Icons\" /> {this.state.profile.email}\r\n                  </small>\r\n                </span>\r\n              </Card.Meta>\r\n              <Card.Description>{this.state.profile.desc}</Card.Description>\r\n            </Card.Content>\r\n            <Card.Content extra>\r\n              <a>\r\n                <Icon name=\"setting\" />\r\n                <Dropdown text=\"Settings\">\r\n                  <Dropdown.Menu>\r\n                    <Dropdown.Item\r\n                      text=\"Edit my profile\"\r\n                      onClick={this.editdet}\r\n                    />\r\n                    <Dropdown.Item\r\n                      text=\"Delete my account\"\r\n                      onClick={this.delmyac}\r\n                    />\r\n                  </Dropdown.Menu>\r\n                </Dropdown>\r\n              </a>\r\n              <a onClick={this.userlogout} style={{ float: \"right\" }}>\r\n                <Icon name=\"sign-out\" />\r\n                Logout\r\n              </a>\r\n            </Card.Content>\r\n          </Card>\r\n        </div>\r\n\r\n        <div>\r\n          <div className=\"editpro\">\r\n            <Form className=\"EditForm\" onSubmit={this.editpro}>\r\n              <Form.Group controlId=\"formBasicEmail\">\r\n                <p\r\n                  className=\"crossBtn\"\r\n                  onClick={(e) =>\r\n                    (document.querySelector(\".editpro\").style.display = \"none\")\r\n                  }\r\n                >\r\n                  X\r\n                </p>\r\n\r\n                <InputGroup className=\"mb-2 mr-sm-2\">\r\n                  <input\r\n                    id=\"fileid\"\r\n                    type=\"file\"\r\n                    onChange={this.upldimg}\r\n                    hidden\r\n                  />\r\n                  <img\r\n                    className=\"post-img\"\r\n                    id=\"editpic\"\r\n                    style={{ cursor: \"pointer\", border: \"none\" }}\r\n                    itemType=\"file\"\r\n                    onClick={this.uploadpic}\r\n                    src={this.state.profile.pic}\r\n                    alt=\"\"\r\n                  />\r\n                  <div\r\n                    className=\"post-img imageOverlay\"\r\n                    id=\"editpic\"\r\n                    style={{ cursor: \"pointer\" }}\r\n                    itemType=\"file\"\r\n                    onClick={this.uploadpic}\r\n                  >\r\n                    +\r\n                  </div>\r\n                  <progress value=\"0\" max=\"100\" id=\"uploaderb\">\r\n                    0%\r\n                  </progress>\r\n                </InputGroup>\r\n\r\n                <Form.Label htmlFor=\"inlineFormInputGroupUsername2\" srOnly>\r\n                  Username\r\n                </Form.Label>\r\n                <InputGroup className=\"mb-2 mr-sm-2\">\r\n                  <InputGroup.Prepend>\r\n                    <InputGroup.Text>@</InputGroup.Text>\r\n                  </InputGroup.Prepend>\r\n                  <FormControl\r\n                    id=\"name\"\r\n                    placeholder=\"Enter your name\"\r\n                    required\r\n                    value={this.state.profile.name}\r\n                    onChange={this.handlechange}\r\n                  />\r\n                </InputGroup>\r\n              </Form.Group>\r\n\r\n              <Form.Group controlId=\"formBasicPassword\">\r\n                <InputGroup className=\"mb-2 mr-sm-2\">\r\n                  <InputGroup.Prepend>\r\n                    <InputGroup.Text>@</InputGroup.Text>\r\n                  </InputGroup.Prepend>\r\n                  <FormControl\r\n                    id=\"email\"\r\n                    placeholder=\"Enter your email \"\r\n                    value={this.state.profile.email}\r\n                    onChange={this.handlechange}\r\n                  />\r\n                </InputGroup>\r\n              </Form.Group>\r\n\r\n              <Form.Group controlId=\"formBasicPassword\">\r\n                <InputGroup className=\"mb-2 mr-sm-2\">\r\n                  <InputGroup.Prepend>\r\n                    <InputGroup.Text>@</InputGroup.Text>\r\n                  </InputGroup.Prepend>\r\n                  <FormControl\r\n                    id=\"altnum\"\r\n                    placeholder=\"Enter your alternative phone number\"\r\n                    value={this.state.profile.altnum}\r\n                    onChange={this.handlechange}\r\n                  />\r\n                </InputGroup>\r\n              </Form.Group>\r\n\r\n              <Button variant=\"primary\" type=\"submit\">\r\n                Submit\r\n              </Button>\r\n            </Form>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n  delmyac() {\r\n    var r = window.confirm(\r\n      \"you can't recover to do this all data about you deleted\"\r\n    );\r\n    if (r == true) {\r\n      db.collection(\"users\")\r\n        .doc(firebase.auth().currentUser.uid)\r\n        .delete()\r\n        .then(() => {\r\n          firebase\r\n            .auth()\r\n            .signOut()\r\n            .then(function () {\r\n              window.location.href = \"http://localhost:3000/\";\r\n            });\r\n        });\r\n    }\r\n  }\r\n  uploadpic(e) {\r\n    e.preventDefault();\r\n    document.getElementById(\"fileid\").click();\r\n  }\r\n\r\n  editdet(e) {\r\n    document.querySelector(\".editpro\").style.display = \"block\";\r\n  }\r\n}\r\n\r\nexport default withRouter(Profile);\r\n","D:\\sekhar\\firstapp\\firstapp\\src\\components\\newpost2.jsx",["236","237","238","239","240","241","242","243","244","245"],"import React, { Component } from \"react\";\r\n\r\nimport {\r\n  Button,\r\n  Form,\r\n  Input,\r\n  TextArea,\r\n  Card,\r\n  Label,\r\n  Image,\r\n  Modal,\r\n  Menu,\r\n} from \"semantic-ui-react\";\r\n\r\nimport { InputGroup } from \"react-bootstrap\";\r\nimport DatePicker from \"react-datepicker\";\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\nimport { toast } from \"react-toastify\";\r\n\r\nimport { BsCalendar } from \"react-icons/bs\";\r\nimport { Link } from \"react-router-dom\";\r\nimport imageCompression from \"browser-image-compression\";\r\nimport \"./rental.css\";\r\n\r\nimport {\r\n  MdLaptopMac,\r\n  MdTv,\r\n  MdEventNote,\r\n  MdDriveEta,\r\n  MdFace,\r\n  MdCheckCircle,\r\n  MdFileUpload,\r\n} from \"react-icons/md\";\r\nimport { BiCodeBlock } from \"react-icons/bi\";\r\nimport { FaChalkboardTeacher, FaTools } from \"react-icons/fa\";\r\nimport { IoCameraSharp } from \"react-icons/io5\";\r\n\r\nimport firebase from \"../firebase\";\r\nimport \"firebase/storage\";\r\nimport { createHashHistory } from \"history\";\r\n\r\nimport \"../post.css\";\r\n\r\nconst history = createHashHistory();\r\n\r\nconst db = firebase.firestore();\r\nconst storage = firebase.storage();\r\n\r\n//var imgarr=['https://www.w3schools.com/howto/img_snow.jpg','https://www.w3schools.com/howto/img_snow.jpg'];\r\n\r\nvar imgarr = [];\r\nvar jobcate;\r\n\r\nexport default function newpost2() {\r\n  return (\r\n    <div>\r\n      {/* <div className=\"comingSoon\">\r\n        <h1 className=\"soonText\">Coming Soon ...</h1>\r\n        </div> */}\r\n      <Postnew />\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction Postnew() {\r\n  return (\r\n    <div style={{ paddingTop: \"20px\" }}>\r\n      <Card centered id=\"formcard\" className=\"postjobb1\">\r\n        <Card.Content>\r\n          <Card.Header style={{ textAlign: \"center\" }}>New Post</Card.Header>\r\n        </Card.Content>\r\n        <Card.Content>\r\n          <Postform />\r\n        </Card.Content>\r\n      </Card>\r\n      <ModalExampleModal />\r\n    </div>\r\n  );\r\n}\r\nvar src = \"https://www.w3schools.com/howto/img_snow.jpg\";\r\n\r\nclass Postform extends Component {\r\n  state = {};\r\n\r\n  handleChange = (e, { value }) => this.setState({ value });\r\n\r\n  //from old\r\n\r\n  //date picker code here\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      startDate: \"\",\r\n      sekcate: \"\",\r\n      arrayvar: [],\r\n      mopen: false,\r\n      image: [],\r\n      imgurl: \"\",\r\n      valprogress: 0,\r\n      addsubmit: false,\r\n      pflag: false,\r\n    };\r\n    this.handleChange2 = this.handleChange2.bind(this);\r\n  }\r\n\r\n  handleChange2(date) {\r\n    console.log(this.state.arrayvar);\r\n\r\n    this.setState({\r\n      startDate: date,\r\n    });\r\n  }\r\n\r\n  componentDidUpdate() {\r\n    if (this.state.image.length > 0) {\r\n      if (this.state.image.length == this.state.arrayvar.length) {\r\n        this.handleSubmit();\r\n      }\r\n    }\r\n  }\r\n\r\n  handleSubmit = async () => {\r\n    // event.preventDefault();\r\n    console.log(this.state.arrayvar);\r\n    let schedule = this.state.startDate;\r\n    let name = document.querySelector(\"#nameofserv\").value;\r\n    let desc = document.querySelector(\"#sdesc\").value;\r\n\r\n    let cat = jobcate;\r\n    let price = document.querySelector(\"#sprice\").value;\r\n    if (desc == NaN) desc = \"\";\r\n    if (cat == \"true\") {\r\n      alert(\"please select category\");\r\n      toast.warning(\"please select category\");\r\n    } else {\r\n      cat = parseInt(cat);\r\n      price = parseInt(price);\r\n      console.log(name, desc, cat, price, imgarr, schedule);\r\n      const newpost = db\r\n        .collection(\"users\")\r\n        .doc(firebase.auth().currentUser.uid)\r\n        .collection(\"adpost\")\r\n        .doc();\r\n      var d = new Date();\r\n      console.log(d);\r\n      newpost\r\n        .set({\r\n          job: cat,\r\n          problem: name,\r\n          description: desc,\r\n          money: price,\r\n          userid: firebase.auth().currentUser.uid,\r\n          orderid: newpost.id,\r\n          media: this.state.arrayvar,\r\n          request: \"nothing\",\r\n          posttime: d,\r\n          views: 0,\r\n          location: \"seethammadhara\",\r\n          schedule: schedule,\r\n          orderstate: null,\r\n          fback: null,\r\n        })\r\n        .then(() => {\r\n          return db.collection(\"allads\").doc(newpost.id).set({\r\n            job: cat,\r\n            problem: name,\r\n            description: desc,\r\n            money: price,\r\n            userid: firebase.auth().currentUser.uid,\r\n            orderid: newpost.id,\r\n            media: this.state.arrayvar,\r\n            request: \"nothing\",\r\n            posttime: d,\r\n            views: 0,\r\n            location: \"seethammadhara\",\r\n            schedule: schedule,\r\n            orderstate: null,\r\n            fback: null,\r\n          });\r\n        })\r\n        .then(() => {\r\n          // alert(\"post added successfully\");\r\n          toast.success(\"post added successfully\");\r\n          history.go(-1);\r\n          imgarr = [];\r\n          this.setState({ image: [], addsubmit: false, arrayvar: [] });\r\n        });\r\n    }\r\n  };\r\n\r\n  handleChangeg = (e) => {\r\n    const options = {\r\n      maxSizeMB: 0.15,\r\n      maxWidthOrHeight: 800,\r\n      useWebWorker: true,\r\n    };\r\n    let cfile;\r\n\r\n    // this.setState({image:[]})\r\n    for (var i = 0; i < e.target.files.length; i++) {\r\n      let k = Number(i);\r\n\r\n      imageCompression(e.target.files[k], options)\r\n        .then((x) => {\r\n          cfile = x;\r\n          this.setState({\r\n            image: this.state.image.concat([cfile]),\r\n          });\r\n          console.log(cfile);\r\n          document.getElementById(\"upldbtn\").style.display = \"block\";\r\n        })\r\n        .catch(function (error) {\r\n          console.log(error.message);\r\n        });\r\n    }\r\n  };\r\n\r\n  handleUpload = async (e) => {\r\n    e.preventDefault();\r\n    document.getElementById(\"uploaderb\").style.display = \"block\";\r\n    document.getElementById(\"upldbtn\").style.display = \"none\";\r\n\r\n    console.log(this.state.image);\r\n    console.log(this.state.image.length);\r\n    for (var i = 0; i < this.state.image.length; i++) {\r\n      console.log(`img no ${i}`);\r\n      let k = Number(i);\r\n      const uploadTask = storage\r\n        .ref(\r\n          `users/${firebase.auth().currentUser.uid}/adpost/${\r\n            this.state.image[k].name\r\n          }`\r\n        )\r\n        .put(this.state.image[k]);\r\n      uploadTask.on(\r\n        \"state_changed\",\r\n        (snapshot) => {\r\n          const progress = Math.round(\r\n            (snapshot.bytesTransferred / snapshot.totalBytes) * 100\r\n          );\r\n          // setProgress(progress);\r\n          this.setState({ valprogress: progress });\r\n        },\r\n        (error) => {\r\n          console.log(error);\r\n        },\r\n        () => {\r\n          storage\r\n            .ref(`users/${firebase.auth().currentUser.uid}/adpost/`)\r\n            .child(this.state.image[k].name)\r\n            .getDownloadURL()\r\n            .then((url) => {\r\n              //setUrl(url);\r\n              console.log(url);\r\n\r\n              this.setState({\r\n                arrayvar: this.state.arrayvar.concat([url]),\r\n              });\r\n            });\r\n        }\r\n      );\r\n    }\r\n    if (this.state.image.length < 1) this.handleSubmit();\r\n  };\r\n\r\n  newfunk = (e) => {\r\n    console.log(e.target.id);\r\n    this.setState({ jobcate: e.target.id });\r\n    this.setState({ mopen: true });\r\n  };\r\n\r\n  sekhararr = (e) => {\r\n    console.log(e.target.parentElement.parentElement.id);\r\n    let ritem = this.state.image[e.target.parentElement.parentElement.id];\r\n    this.setState({\r\n      image: this.state.image.filter((e) => e !== ritem),\r\n    });\r\n    console.log(this.state.image);\r\n    //setimage(image.filter((e)=>(e !== ritem)))\r\n  };\r\n  pricetag = (flag) => {\r\n    if (flag == \"yes\") this.setState({ pflag: true });\r\n    else this.setState({ pflag: false });\r\n  };\r\n\r\n  render() {\r\n    const { value } = this.state;\r\n    return (\r\n      <Form className=\"postjobb\" onSubmit={this.handleUpload}>\r\n        <Form.Group widths=\"equal\">\r\n          <Form.Field\r\n            required\r\n            control={Input}\r\n            label=\"Name of Service\"\r\n            placeholder=\"enter name of service\"\r\n            id=\"nameofserv\"\r\n            className=\"nameofser\"\r\n          />\r\n        </Form.Group>\r\n\r\n        <Form.Field\r\n          control={TextArea}\r\n          label=\"Description\"\r\n          id=\"sdesc\"\r\n          placeholder=\"Tell us more about your problem or any note here...\"\r\n        />\r\n        <Form.Field>\r\n          <Form.Field>\r\n            <b>Select Date</b>\r\n          </Form.Field>\r\n          <Form.Field>\r\n            <InputGroup className=\"mb-2\">\r\n              <InputGroup.Prepend className=\"nameofser\">\r\n                <InputGroup.Text>\r\n                  {\" \"}\r\n                  <BsCalendar size=\"1.3em\" />\r\n                </InputGroup.Text>\r\n              </InputGroup.Prepend>\r\n\r\n              <DatePicker\r\n                // className=\"datepicker\"\r\n                selected={this.state.startDate}\r\n                placeholderText=\"when you want service\"\r\n                onChange={this.handleChange2}\r\n                minDate={new Date()}\r\n                name=\"startDate\"\r\n                showTimeSelect\r\n                timeFormat=\"HH:mm\"\r\n                todayButton=\"Today\"\r\n                timeIntervals={60}\r\n                timeCaption=\"time\"\r\n                // dateFormat=\"dd/MM/yyyy\"\r\n                dateFormat=\"MMMM d, yyyy h:mm aa\"\r\n                withPortal\r\n                required\r\n              />\r\n            </InputGroup>\r\n          </Form.Field>\r\n\r\n          <b style={{ fontWeight: \"800\" }}> Enter Amount </b>\r\n          <Button.Group size=\"tiny\">\r\n            <Button\r\n              type=\"button\"\r\n              onClick={() => {\r\n                this.pricetag(\"yes\");\r\n              }}\r\n            >\r\n              Yes\r\n            </Button>\r\n            <Button.Or />\r\n            <Button\r\n              type=\"button\"\r\n              onClick={() => {\r\n                this.pricetag(\"no\");\r\n              }}\r\n            >\r\n              No\r\n            </Button>\r\n          </Button.Group>\r\n          {this.state.pflag ? <Pricefield /> : null}\r\n        </Form.Field>\r\n\r\n        <div style={{ display: \"inline-block\" }}>\r\n          <Form.Field>\r\n            <Input\r\n              icon=\"photo\"\r\n              iconPosition=\"Right\"\r\n              type=\"file\"\r\n              placeholder=\"Enter tags\"\r\n              // onChange={this.upldimg}\r\n              accept=\".gif,.jpg,.jpeg,.png\"\r\n              onChange={this.handleChangeg}\r\n              multiple\r\n            />\r\n          </Form.Field>\r\n        </div>\r\n        <progress value={this.state.valprogress} max=\"100\" id=\"uploaderb\">\r\n          progress\r\n        </progress>\r\n\r\n        <div>\r\n          <Image.Group size=\"small\">\r\n            {this.state.image.map((nap, key) => (\r\n              <Image\r\n                fluid\r\n                key={key}\r\n                id={key}\r\n                label={{\r\n                  as: \"a\",\r\n                  corner: \"right\",\r\n                  icon: \"trash\",\r\n                  onClick: this.sekhararr,\r\n                }}\r\n                src={URL.createObjectURL(nap)}\r\n              />\r\n            ))}\r\n          </Image.Group>\r\n        </div>\r\n\r\n        <Form.Field control={Button} type=\"submit\" centered color=\"primary\">\r\n          <MdCheckCircle size=\"1.3rem\" style={{ textAlign: \"left\" }} />\r\n          Submit\r\n        </Form.Field>\r\n      </Form>\r\n    );\r\n  }\r\n}\r\n\r\nfunction Pricefield() {\r\n  return (\r\n    <Input\r\n      labelPosition=\"right\"\r\n      type=\"number\"\r\n      id=\"sprice\"\r\n      placeholder=\"Amount\"\r\n      style={{ width: \"60%\" }}\r\n    >\r\n      <Label basic>₹</Label>\r\n      <input />\r\n      <Label>.00</Label>\r\n    </Input>\r\n  );\r\n}\r\n\r\nfunction ModalExampleModal() {\r\n  firebase.auth().onAuthStateChanged(function (user) {\r\n    if (!user) {\r\n      //  history.go('/login')\r\n      console.log(\"user login\");\r\n      document.getElementById(\"redirectsignup\").click();\r\n    }\r\n  });\r\n\r\n  var imgsrc =\r\n    \"https://www.google.com/url?sa=i&url=https%3A%2F%2Fwww.vectorgraphit.com%2Ffree-svg-illustrations-for-your-next-website-or-blog%2Famp&psig=AOvVaw28FMPvsnbckOWg5KwrbFDM&ust=1614586813687000&source=images&cd=vfe&ved=0CAIQjRxqFwoTCLDUruGSjO8CFQAAAAAdAAAAABAJ\";\r\n  const [open, setOpen] = React.useState(true);\r\n\r\n  function click(e) {\r\n    console.log(e.target.dataset.txt);\r\n    jobcate = e.target.dataset.txt;\r\n    setOpen(false);\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <div>\r\n        <Modal\r\n          size=\"small\"\r\n          centered\r\n          // style={{marginLeft:\"auto\",marginRight:\"auto\",display:\"block\",width:\"70%\"}}\r\n          className=\"categoryModal\"\r\n          onOpen={() => setOpen(true)}\r\n          open={open}\r\n        >\r\n          <Modal.Header className=\"categoryMheader\">\r\n            Select Job Category\r\n          </Modal.Header>\r\n          <Modal.Content></Modal.Content>\r\n          <Card centered id=\"jobcate\">\r\n            <Card.Content>\r\n              <Card.Header>Select Category here</Card.Header>\r\n            </Card.Content>\r\n            <Card.Content>\r\n              <Menu vertical centered style={{ width: \"auto\" }}>\r\n                <Menu.Item link data-txt=\"0\" onClick={click}>\r\n                  <FaTools size=\"1.5rem\" />\r\n                  &nbsp;&nbsp;&nbsp;&nbsp; Ac/Refrigirator Service\r\n                </Menu.Item>\r\n                <Menu.Item link data-txt=\"1\" onClick={click}>\r\n                  <MdLaptopMac size=\"1.5rem\" />\r\n                  &nbsp;&nbsp;&nbsp;&nbsp; Computer/Laptop Service\r\n                </Menu.Item>\r\n                <Menu.Item link data-txt=\"2\" onClick={click}>\r\n                  <MdTv size=\"1.5rem\" />\r\n                  &nbsp;&nbsp;&nbsp;&nbsp; Tv Repair\r\n                </Menu.Item>\r\n                <Menu.Item link data-txt=\"9\" onClick={click}>\r\n                  <MdEventNote size=\"1.5rem\" />\r\n                  &nbsp;&nbsp;&nbsp;&nbsp; Electrician\r\n                </Menu.Item>\r\n                <Menu.Item link data-txt=\"12\" onClick={click}>\r\n                  <MdEventNote size=\"1.5rem\" />\r\n                  &nbsp;&nbsp;&nbsp;&nbsp; Interior Design\r\n                </Menu.Item>\r\n                <Menu.Item link data-txt=\"13\" onClick={click}>\r\n                  <MdEventNote size=\"1.5rem\" />\r\n                  &nbsp;&nbsp;&nbsp;&nbsp; Design\r\n                </Menu.Item>\r\n                <Menu.Item link data-txt=\"3\" onClick={click}>\r\n                  <BiCodeBlock size=\"1.5rem\" />\r\n                  &nbsp;&nbsp;&nbsp;&nbsp; Development\r\n                </Menu.Item>\r\n                <Menu.Item link data-txt=\"8\" onClick={click}>\r\n                  <MdEventNote size=\"1.5rem\" />\r\n                  &nbsp;&nbsp;&nbsp;&nbsp; Events\r\n                </Menu.Item>\r\n                <Menu.Item link data-txt=\"5\" onClick={click}>\r\n                  <MdFace size=\"1.5rem\" />\r\n                  &nbsp;&nbsp;&nbsp;&nbsp; Beauty\r\n                </Menu.Item>\r\n                <Menu.Item link data-txt=\"4\" onClick={click}>\r\n                  <FaChalkboardTeacher size=\"1.5rem\" />\r\n                  &nbsp;&nbsp;&nbsp;&nbsp; Tutor\r\n                </Menu.Item>\r\n                <Menu.Item link data-txt=\"6\" onClick={click}>\r\n                  <IoCameraSharp size=\"1.5rem\" />\r\n                  &nbsp;&nbsp;&nbsp;&nbsp; Photographer\r\n                </Menu.Item>\r\n                <Menu.Item link data-txt=\"7\" onClick={click}>\r\n                  <MdDriveEta size=\"1.5rem\" />\r\n                  &nbsp;&nbsp;&nbsp;&nbsp; Driver\r\n                </Menu.Item>\r\n                <Menu.Item link data-txt=\"10\" onClick={click}>\r\n                  <MdEventNote size=\"1.5rem\" />\r\n                  &nbsp;&nbsp;&nbsp;&nbsp; Carpenter\r\n                </Menu.Item>\r\n                <Menu.Item link data-txt=\"11\" onClick={click}>\r\n                  <MdEventNote size=\"1.5rem\" />\r\n                  &nbsp;&nbsp;&nbsp;&nbsp; Plumber\r\n                </Menu.Item>\r\n                <Menu.Item link data-txt=\"14\" onClick={click}>\r\n                  <MdEventNote size=\"1.5rem\" />\r\n                  &nbsp;&nbsp;&nbsp;&nbsp; CC Tv Installation\r\n                </Menu.Item>\r\n                <Menu.Item link data-txt=\"15\" onClick={click}>\r\n                  <MdEventNote size=\"1.5rem\" />\r\n                  &nbsp;&nbsp;&nbsp;&nbsp; Catering\r\n                </Menu.Item>\r\n              </Menu>\r\n              <Link to=\"/signup\" style={{ display: \"none\" }}>\r\n                <p id=\"redirectsignup\">signup</p>\r\n              </Link>\r\n            </Card.Content>\r\n          </Card>\r\n        </Modal>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n","D:\\sekhar\\firstapp\\firstapp\\src\\components\\editpost2.jsx",["246","247","248","249","250","251","252","253","254","255","256","257","258","259","260","261","262"],"import React, { Component, useRef } from \"react\";\r\n\r\nimport {\r\n  Button,\r\n  Form,\r\n  Input,\r\n  TextArea,\r\n  Card,\r\n  Label,\r\n  Image,\r\n  Modal,\r\n  Header,\r\n  Menu,\r\n} from \"semantic-ui-react\";\r\n\r\nimport { InputGroup } from \"react-bootstrap\";\r\nimport DatePicker from \"react-datepicker\";\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\n\r\nimport imageCompression from \"browser-image-compression\";\r\n\r\nimport {\r\n  MdLaptopMac,\r\n  MdTv,\r\n  MdEventNote,\r\n  MdEvent,\r\n  MdDriveEta,\r\n  MdFace,\r\n} from \"react-icons/md\";\r\nimport { BiCodeBlock } from \"react-icons/bi\";\r\nimport { FaChalkboardTeacher, FaTools } from \"react-icons/fa\";\r\nimport { IoCameraSharp } from \"react-icons/io5\";\r\nimport { MdPhotoCamera } from \"react-icons/md\";\r\nimport firebase from \"../firebase\";\r\nimport \"firebase/storage\";\r\nimport { createHashHistory } from \"history\";\r\nimport { useState, useEffect } from \"react\";\r\nimport { toast } from \"react-toastify\";\r\n\r\nimport \"../post.css\";\r\n\r\nconst history = createHashHistory();\r\n\r\nconst db = firebase.firestore();\r\nconst storage = firebase.storage();\r\n\r\nvar imgarr = [];\r\nvar jobcate = 1;\r\nlet avoid = 0;\r\nlet avoid2 = 0;\r\n\r\nfunction useTimes() {\r\n  const [postdata, setdata] = useState([]);\r\n  const [posttime, setposttime] = useState([]);\r\n  const [madia, setmadia] = useState([]);\r\n  useEffect(() => {\r\n    //\r\n    firebase.auth().onAuthStateChanged(function (user) {\r\n      if (user) {\r\n        let arr = [];\r\n        let inj = [];\r\n        avoid = 0;\r\n        avoid2 = 0;\r\n        console.log(\"usetime\");\r\n        var personId;\r\n\r\n        personId = window.location.pathname;\r\n        personId = personId.replace(\"/mybookings/id/edit/\", \"\");\r\n        console.log(personId);\r\n        db.collection(\"users\")\r\n          .doc(firebase.auth().currentUser.uid)\r\n          .collection(\"adpost\")\r\n          .doc(personId)\r\n          .get()\r\n          .then((snap) => {\r\n            console.log(snap.data().posttime.toDate());\r\n            setdata(snap.data());\r\n            arr.push(String(snap.data().posttime.toDate()));\r\n            arr.push(snap.data().schedule.toDate());\r\n            setposttime(arr);\r\n            inj.push(snap.data().media);\r\n            setmadia(inj);\r\n            document.querySelector(\"#nameofserv\").value = snap.data().problem;\r\n            document.querySelector(\"#sdesc\").value = snap.data().description;\r\n            //  document.querySelector('.cate').value=snap.data().job;\r\n            document.querySelector(\"#sprice\").value = snap.data().money;\r\n            snap.data().media.map((nap) => src.push(nap));\r\n          })\r\n          .then(() => {});\r\n      }\r\n    });\r\n    //\r\n  }, []);\r\n  return { postdata, posttime };\r\n}\r\n\r\nexport default function newpost2() {\r\n  return (\r\n    <div>\r\n      <Postnew />\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction Postnew() {\r\n  const { postdata, posttime } = useTimes();\r\n\r\n  return (\r\n    <div style={{ paddingTop: \"20px\" }}>\r\n      <Card centered id=\"formcard\">\r\n        <Card.Content>\r\n          <Card.Header style={{ textAlign: \"center\" }}>New Post</Card.Header>\r\n        </Card.Content>\r\n        <Card.Content>\r\n          {/* <Postform data={src}/> */}\r\n          <Postform2 />\r\n        </Card.Content>\r\n      </Card>\r\n      <ModalExampleModal />\r\n    </div>\r\n  );\r\n}\r\n// var src=['https://www.w3schools.com/howto/img_snow.jpg']\r\nvar src = [];\r\n\r\nfunction Postform2() {\r\n  const { postdata, posttime } = useTimes();\r\n  console.log(postdata);\r\n  const [startDate, setState] = useState(\"\");\r\n  const [arrayvar, setarrayvar] = useState([]);\r\n  const [arrayvar2, setarrayvar2] = useState([]);\r\n  const [image, setimage] = useState([]);\r\n  const [progress, setprogress] = useState(0);\r\n  const photoUpload = useRef(null);\r\n\r\n  //console.log(postdata)\r\n\r\n  if (posttime[1] && avoid2 == 0) {\r\n    console.log(posttime[1]);\r\n    setState(posttime[1]);\r\n    setarrayvar2(postdata.media);\r\n    console.log(\"setstate\");\r\n    avoid2 = 1;\r\n  }\r\n  function handleChange(date) {\r\n    setState(date);\r\n    console.log(date);\r\n  }\r\n\r\n  const handleSubmit = (newar) => {\r\n    // event.preventDefault();\r\n    console.log(arrayvar);\r\n    let schedule = startDate;\r\n    let name = document.querySelector(\"#nameofserv\").value;\r\n    let desc = document.querySelector(\"#sdesc\").value;\r\n    // let cat=document.querySelector('#scate').value\r\n    let cat = jobcate;\r\n    let price = document.querySelector(\"#sprice\").value;\r\n    if (desc == NaN) desc = \"\";\r\n    if (cat == \"true\") {\r\n      //alert(\"please select category\");\r\n      toast.warning(\"please select category\");\r\n    } else {\r\n      cat = parseInt(cat);\r\n      price = parseInt(price);\r\n      console.log(name, desc, cat, price, imgarr, schedule);\r\n      const newpost = db\r\n        .collection(\"users\")\r\n        .doc(firebase.auth().currentUser.uid)\r\n        .collection(\"adpost\")\r\n        .doc(postdata.orderid);\r\n      var d = new Date();\r\n      console.log(d);\r\n      newpost\r\n        .update({\r\n          job: cat,\r\n          problem: name,\r\n          description: desc,\r\n          money: price,\r\n          media: newar,\r\n          request: \"nothing\",\r\n          utime: d,\r\n          schedule: schedule,\r\n        })\r\n        .then(() => {\r\n          return db.collection(\"allads\").doc(newpost.id).update({\r\n            job: cat,\r\n            problem: name,\r\n            description: desc,\r\n            money: price,\r\n            media: arrayvar,\r\n            utime: d,\r\n            schedule: schedule,\r\n          });\r\n        })\r\n        .then(() => {\r\n          //  alert(\"post added successfully\");\r\n          toast.success(\"post added successfully\");\r\n          history.go(-1);\r\n          imgarr = [];\r\n        });\r\n    }\r\n  };\r\n\r\n  const handleChangeg = (e) => {\r\n    console.log(\"console handle change\");\r\n    const options = {\r\n      maxSizeMB: 0.15,\r\n      maxWidthOrHeight: 800,\r\n      useWebWorker: true,\r\n    };\r\n    let cfile;\r\n\r\n    // setimage([]);\r\n    for (var i = 0; i < e.target.files.length; i++) {\r\n      let k = Number(i);\r\n\r\n      imageCompression(e.target.files[k], options)\r\n        .then((x) => {\r\n          cfile = x;\r\n\r\n          //     setimage(image.concat([cfile]))\r\n          setimage((nap) => [...nap, cfile]);\r\n          document.getElementById(\"upldbtn\").style.display = \"block\";\r\n        })\r\n        .catch(function (error) {\r\n          console.log(error.message);\r\n        });\r\n    }\r\n  };\r\n  useEffect(() => {\r\n    if (arrayvar.length > 0) {\r\n      if (arrayvar.length == image.length) {\r\n        let newar = arrayvar2.concat(arrayvar);\r\n        setarrayvar(newar);\r\n        handleSubmit(newar);\r\n      }\r\n    }\r\n  }, [arrayvar]);\r\n\r\n  const handleUpload = (e) => {\r\n    e.preventDefault();\r\n    //  document.getElementById(\"uploaderb\").style.display=\"block\"\r\n    // document.getElementById('upldbtn').style.display=\"none\"\r\n\r\n    if (image.length > 0) {\r\n      for (var i = 0; i < image.length; i++) {\r\n        let k = Number(i);\r\n        const uploadTask = storage\r\n          .ref(\r\n            `users/${firebase.auth().currentUser.uid}/adpost/${image[k].name}`\r\n          )\r\n          .put(image[k]);\r\n        uploadTask.on(\r\n          \"state_changed\",\r\n          (snapshot) => {\r\n            const progress = Math.round(\r\n              (snapshot.bytesTransferred / snapshot.totalBytes) * 100\r\n            );\r\n            setprogress(progress);\r\n          },\r\n          (error) => {\r\n            console.log(error);\r\n          },\r\n          () => {\r\n            storage\r\n              .ref(`users/${firebase.auth().currentUser.uid}/adpost/`)\r\n              .child(image[k].name)\r\n              .getDownloadURL()\r\n              .then((url) => {\r\n                console.log(url);\r\n                setarrayvar((nap) => [...nap, url]);\r\n              })\r\n              .catch((err) => console.log(err));\r\n          }\r\n        );\r\n      }\r\n    } else {\r\n      setarrayvar([]);\r\n      let newar = arrayvar2.concat(arrayvar);\r\n      setarrayvar(newar);\r\n      handleSubmit(newar);\r\n    }\r\n    //document.getElementById(\"uploaderb\").style.display=\"none\"\r\n  };\r\n\r\n  const sekhararr = (e) => {\r\n    console.log(e.target.parentElement.parentElement.id);\r\n    var array = [...image]; // make a separate copy of the array\r\n    // var index = array.indexOf(e.target.parentElement.parentElement.id)\r\n    let index2 = Number(e.target.parentElement.parentElement.id);\r\n    console.log(e);\r\n    if (index2 !== -1) {\r\n      array.splice(index2, 1);\r\n      setimage(array);\r\n    }\r\n  };\r\n\r\n  const sekhararr2 = (e) => {\r\n    console.log(e.target.parentElement.parentElement.id);\r\n    var array = [...arrayvar2]; // make a separate copy of the array\r\n    // var index = array.indexOf(e.target.parentElement.parentElement.id)\r\n    let index2 = Number(e.target.parentElement.parentElement.id);\r\n    console.log(e);\r\n    if (index2 !== -1) {\r\n      array.splice(index2, 1);\r\n      setarrayvar2(array);\r\n    }\r\n  };\r\n\r\n  const photoHandle = (e) => {\r\n    // photoUpload.current.click();\r\n    document.querySelector(\".photoUploads\").click();\r\n    console.log(\"photoClicked\");\r\n  };\r\n\r\n  return (\r\n    <div className=\"postjobdiv\">\r\n      <Form className=\"postjobb\" onSubmit={handleUpload}>\r\n        <Form.Group widths=\"equal\">\r\n          <Form.Field\r\n            required\r\n            control={Input}\r\n            label=\"First name\"\r\n            placeholder=\"enter name of service\"\r\n            id=\"nameofserv\"\r\n            className=\"nameofser\"\r\n          />\r\n        </Form.Group>\r\n\r\n        <Form.Field\r\n          control={TextArea}\r\n          label=\"Description\"\r\n          id=\"sdesc\"\r\n          placeholder=\"Tell us more about your problem or any note here...\"\r\n        />\r\n        <Form.Field>\r\n          Enter Amount\r\n          <Input\r\n            labelPosition=\"right\"\r\n            type=\"number\"\r\n            id=\"sprice\"\r\n            placeholder=\"Amount\"\r\n          >\r\n            <Label basic>₹</Label>\r\n            <input />\r\n            <Label>.00</Label>\r\n          </Input>\r\n        </Form.Field>\r\n\r\n        <Form.Field>\r\n          <InputGroup className=\"mb-2\">\r\n            <InputGroup.Prepend className=\"nameofser\">\r\n              <InputGroup.Text>\r\n                {\" \"}\r\n                <MdEvent size=\"1.3em\" />\r\n              </InputGroup.Text>\r\n            </InputGroup.Prepend>\r\n            <DatePicker\r\n              className=\"datepicker\"\r\n              selected={startDate}\r\n              placeholderText=\"when you want service\"\r\n              minDate={new Date()}\r\n              name=\"startDate\"\r\n              showTimeSelect\r\n              timeFormat=\"HH:mm\"\r\n              todayButton=\"Today\"\r\n              timeIntervals={60}\r\n              timeCaption=\"time\"\r\n              // dateFormat=\"dd/MM/yyyy\"\r\n              dateFormat=\"MMMM d, yyyy h:mm aa\"\r\n              withPortal\r\n              required\r\n            />\r\n          </InputGroup>\r\n        </Form.Field>\r\n\r\n        {/* <MdPhotoCamera\r\n          style={{ height: \"150px\", width: \"100px\" }}\r\n          onClick={photoHandle}\r\n        /> */}\r\n\r\n        <Form.Field>\r\n          <Input\r\n            icon=\"photo\"\r\n            iconPosition=\"Right\"\r\n            type=\"file\"\r\n            placeholder=\"Enter tags\"\r\n            //   onChange={upldimg}\r\n            ref={photoUpload}\r\n            accept=\".gif,.jpg,.jpeg,.png\"\r\n            onChange={handleChangeg}\r\n            style={{ display: \"block\" }}\r\n            className=\"photoUploads\"\r\n            multiple\r\n          />\r\n        </Form.Field>\r\n        {/* <Form.Field control={Button} color=\"green\" id=\"upldbtn\" type=\"button\" onClick={handleUpload}>\r\n              upload images\r\n            </Form.Field> */}\r\n        <progress value={progress} max=\"100\" id=\"uploaderb\">\r\n          progress\r\n        </progress>\r\n\r\n        <div className=\"imgdiv\">\r\n          <div className=\"gallery\"></div>\r\n        </div>\r\n\r\n        <div>\r\n          <Image.Group size=\"small\">\r\n            {arrayvar2.map((nap, key) => (\r\n              <Image\r\n                fluid\r\n                key={key}\r\n                id={key}\r\n                label={{\r\n                  as: \"a\",\r\n                  corner: \"right\",\r\n                  icon: \"trash\",\r\n                  onClick: sekhararr2,\r\n                }}\r\n                src={nap}\r\n              />\r\n            ))}\r\n          </Image.Group>\r\n\r\n          <Image.Group size=\"small\">\r\n            {image.map((nap, key) => (\r\n              <Image\r\n                fluid\r\n                key={key}\r\n                id={key}\r\n                label={{\r\n                  as: \"a\",\r\n                  corner: \"right\",\r\n                  icon: \"trash\",\r\n                  onClick: sekhararr,\r\n                }}\r\n                src={URL.createObjectURL(nap)}\r\n              />\r\n            ))}\r\n          </Image.Group>\r\n        </div>\r\n\r\n        <Form.Field\r\n          control={Button}\r\n          style={{ textAlign: \"Center\" }}\r\n          type=\"submit\"\r\n          centered\r\n        >\r\n          Submit\r\n        </Form.Field>\r\n      </Form>\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction ModalExampleModal() {\r\n  var imgsrc =\r\n    \"https://www.google.com/url?sa=i&url=https%3A%2F%2Fwww.vectorgraphit.com%2Ffree-svg-illustrations-for-your-next-website-or-blog%2Famp&psig=AOvVaw28FMPvsnbckOWg5KwrbFDM&ust=1614586813687000&source=images&cd=vfe&ved=0CAIQjRxqFwoTCLDUruGSjO8CFQAAAAAdAAAAABAJ\";\r\n  const [open, setOpen] = React.useState(true);\r\n\r\n  function click(e) {\r\n    console.log(e.target.dataset.txt);\r\n    jobcate = e.target.dataset.txt;\r\n    setOpen(false);\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Modal\r\n        size=\"small\"\r\n        className=\"ModalEdit\"\r\n        style={{\r\n          marginLeft: \"auto\",\r\n          marginRight: \"auto\",\r\n          display: \"block\",\r\n          width: \"70%\",\r\n        }}\r\n        onOpen={() => setOpen(true)}\r\n        open={open}\r\n      >\r\n        <Modal.Header>Select Job Category</Modal.Header>\r\n        <Modal.Content></Modal.Content>\r\n        <Card centered id=\"jobcate\">\r\n          <Card.Content>\r\n            <Card.Header>Select Category here</Card.Header>\r\n          </Card.Content>\r\n          <Card.Content>\r\n            <Menu vertical centered style={{ width: \"auto\" }}>\r\n              <Menu.Item link data-txt=\"0\" onClick={click}>\r\n                <FaTools size=\"1.5rem\" />\r\n                &nbsp;&nbsp;&nbsp;&nbsp; Ac Service\r\n              </Menu.Item>\r\n              <Menu.Item link data-txt=\"1\" onClick={click}>\r\n                <MdLaptopMac size=\"1.5rem\" />\r\n                &nbsp;&nbsp;&nbsp;&nbsp; Computer/Laptop Service\r\n              </Menu.Item>\r\n              <Menu.Item link data-txt=\"2\" onClick={click}>\r\n                <MdTv size=\"1.5rem\" />\r\n                &nbsp;&nbsp;&nbsp;&nbsp; Tv Repair\r\n              </Menu.Item>\r\n              <Menu.Item link data-txt=\"3\" onClick={click}>\r\n                <BiCodeBlock size=\"1.5rem\" />\r\n                &nbsp;&nbsp;&nbsp;&nbsp; Development\r\n              </Menu.Item>\r\n              <Menu.Item link data-txt=\"4\" onClick={click}>\r\n                <FaChalkboardTeacher size=\"1.5rem\" />\r\n                &nbsp;&nbsp;&nbsp;&nbsp; Tutor\r\n              </Menu.Item>\r\n              <Menu.Item link data-txt=\"5\" onClick={click}>\r\n                <MdFace size=\"1.5rem\" />\r\n                &nbsp;&nbsp;&nbsp;&nbsp; Beuty\r\n              </Menu.Item>\r\n              <Menu.Item link data-txt=\"6\" onClick={click}>\r\n                <IoCameraSharp size=\"1.5rem\" />\r\n                &nbsp;&nbsp;&nbsp;&nbsp; Photographer\r\n              </Menu.Item>\r\n              <Menu.Item link data-txt=\"7\" onClick={click}>\r\n                <MdDriveEta size=\"1.5rem\" />\r\n                &nbsp;&nbsp;&nbsp;&nbsp; Driver\r\n              </Menu.Item>\r\n              <Menu.Item link data-txt=\"8\" onClick={click}>\r\n                <MdEventNote size=\"1.5rem\" />\r\n                &nbsp;&nbsp;&nbsp;&nbsp; Events\r\n              </Menu.Item>\r\n            </Menu>\r\n          </Card.Content>\r\n        </Card>\r\n      </Modal>\r\n    </>\r\n  );\r\n}\r\n","D:\\sekhar\\firstapp\\firstapp\\src\\components\\chat.jsx",[],"D:\\sekhar\\firstapp\\firstapp\\src\\components\\signup.jsx",["263","264","265"],"import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Button, Form } from \"react-bootstrap\";\r\nimport { Card } from \"semantic-ui-react\";\r\nimport firebase from \"../firebase\";\r\nimport { createHashHistory } from \"history\";\r\nimport \"../index.css\";\r\nimport { toast } from \"react-toastify\";\r\n\r\n//import icons\r\nimport {\r\n  MdAccountCircle,\r\n  MdSmartphone,\r\n  MdHttps,\r\n  MdTagFaces,\r\n} from \"react-icons/md\";\r\nimport { RiLockPasswordFill } from \"react-icons/ri\";\r\n\r\nconst db = firebase.firestore();\r\nvar usrno;\r\nconst history = createHashHistory();\r\n\r\nexport default class signup extends Component {\r\n  render() {\r\n    return (\r\n      <div className=\"signupform\">\r\n        <Card centered color=\"blue\" style={{ width: \"400px\" }}>\r\n          <Card.Content>\r\n            <Card.Header>\r\n              <MdAccountCircle size=\"2rem\" />\r\n              <u>Signup or Login</u>\r\n            </Card.Header>\r\n          </Card.Content>\r\n          <Card.Content extra>\r\n            <Form>\r\n              <Form.Group controlId=\"formBasicEmail\">\r\n                <Form.Label>\r\n                  <MdSmartphone />\r\n                  <b>Enter your Mobile number</b>\r\n                </Form.Label>\r\n                <Form.Control\r\n                  type=\"phone\"\r\n                  placeholder=\"phone number\"\r\n                  id=\"phno\"\r\n                  required\r\n                />\r\n              </Form.Group>\r\n              <Button variant=\"outline-info\" type=\"button\" onClick={genotp}>\r\n                Get Otp\r\n              </Button>\r\n              <div id=\"recaptcha-container\" style={{ marginTop: \"10px\" }}></div>\r\n\r\n              <Form.Group\r\n                controlId=\"formBasicPassword\"\r\n                id=\"otpdiv\"\r\n                style={{ marginTop: \"10px\", display: \"none\" }}\r\n              >\r\n                <Form.Label>\r\n                  <MdHttps />\r\n                  <b>Enter otp here</b>\r\n                </Form.Label>\r\n                <Form.Control\r\n                  type=\"number\"\r\n                  placeholder=\"OTP\"\r\n                  id=\"otp\"\r\n                  required\r\n                />\r\n                <br />\r\n                <Button variant=\"outline-info\" type=\"button\" onClick={vrfyotp}>\r\n                  Verify\r\n                </Button>\r\n              </Form.Group>\r\n\r\n              <Form.Group\r\n                controlId=\"username\"\r\n                style={{ display: \"none\" }}\r\n                className=\"username\"\r\n              >\r\n                <Form.Label>\r\n                  <MdTagFaces />\r\n                  <b>Enter your name here</b>\r\n                </Form.Label>\r\n                <Form.Control\r\n                  type=\"text\"\r\n                  placeholder=\"sweetname here\"\r\n                  id=\"username\"\r\n                  required\r\n                />\r\n              </Form.Group>\r\n\r\n              <Button\r\n                variant=\"outline-info\"\r\n                type=\"button\"\r\n                onClick={rgstusr}\r\n                style={{ display: \"none\" }}\r\n                className=\"signsub\"\r\n              >\r\n                Submit\r\n              </Button>\r\n            </Form>\r\n          </Card.Content>\r\n        </Card>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nfunction genotp(e) {\r\n  window.recaptchaVerifier = new firebase.auth.RecaptchaVerifier(\r\n    \"recaptcha-container\"\r\n  );\r\n  const phno = \"+91\" + document.getElementById(\"phno\").value;\r\n  console.log(phno);\r\n  firebase\r\n    .auth()\r\n    .signInWithPhoneNumber(phno, window.recaptchaVerifier)\r\n    .then(function (confirmationResult) {\r\n      window.confirmationResult = confirmationResult;\r\n      console.log(confirmationResult);\r\n      document.querySelector(\"#recaptcha-container\").style.display = \"none\";\r\n      document.querySelector(\"#otpdiv\").style.display = \"block\";\r\n    })\r\n    .catch(function (error) {\r\n      // alert(error)\r\n      toast.error(error);\r\n    });\r\n}\r\n\r\nfunction vrfyotp(e) {\r\n  const otp = document.getElementById(\"otp\");\r\n  if (otp.value == \"\") toast.error(\"Please enter valid OTP\");\r\n  window.confirmationResult\r\n    .confirm(otp.value)\r\n    .then(function (result) {\r\n      usrno = document.getElementById(\"phno\").value;\r\n      console.log(result);\r\n      var doc = db.collection(\"users\").doc(firebase.auth().currentUser.uid);\r\n      doc\r\n        .get()\r\n        .then((docData) => {\r\n          if (docData.exists) {\r\n            // document exists (online/offline)\r\n            console.log(\"document exist\");\r\n            history.go(-1);\r\n          } else {\r\n            // document does not exist (only on online)\r\n            console.log(\"document not exist\");\r\n            document.querySelector(\".username\").style.display = \"block\";\r\n            document.querySelector(\".signsub\").style.display = \"block\";\r\n          }\r\n        })\r\n        .catch((fail) => {\r\n          console.log(\"error while reading document\");\r\n        });\r\n    })\r\n    .catch((err) => {\r\n      //  alert(err)\r\n      toast.error(err);\r\n    });\r\n}\r\n\r\n// firebase.auth().onAuthStateChanged(function(user) {\r\n\r\n//   if (user) {\r\n//     console.log(\"user login\")\r\n//   }\r\n//   else console.log(\"user not login\")\r\n// })\r\n\r\n//   function userlogout(){\r\n//     firebase.auth().signOut().then(function() {\r\n//       alert(\"logout successfully\")\r\n//     })\r\n//   }\r\n\r\nfunction rgstusr(e) {\r\n  e.preventDefault();\r\n\r\n  let name = document.getElementById(\"username\").value;\r\n  let userid = firebase.auth().currentUser.uid;\r\n  if (name) {\r\n    db.collection(\"users\")\r\n      .doc(userid)\r\n      .set({\r\n        name: name,\r\n        phone: usrno,\r\n        email: \"\",\r\n        pic:\r\n          \"https://www.sunsetlearning.com/wp-content/uploads/2019/09/User-Icon-Grey-300x300.png\",\r\n        altnum: \"\",\r\n      })\r\n      .then(() => {\r\n        // alert(\"data added\")\r\n\r\n        window.location.href = \"http://localhost:3000/\";\r\n      });\r\n  } else {\r\n    //alert(\"please enter your name\");\r\n    toast.warning(\"Please enter your name\");\r\n  }\r\n}\r\n","D:\\sekhar\\firstapp\\firstapp\\src\\components\\pdetails.jsx",["266","267","268","269","270","271","272","273","274","275","276","277","278","279","280","281","282","283","284","285","286","287"],"import React ,{Component} from 'react'\r\nimport firebase from '../firebase';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport {Carousel } from 'react-bootstrap';\r\nimport { Card, Icon, Image,Dropdown,Label,Step,Button,Rating } from 'semantic-ui-react'\r\nimport react,{useState,useEffect} from \"react\";\r\nimport {MdDelete,MdLocationOn,MdAccessTime,MdWatchLater,MdCheckCircle,MdAssignmentTurnedIn,MdBuild,MdThumbDown,MdAccountCircle,MdSmartphone,MdPhone,MdEmail} from 'react-icons/md';\r\nimport {AiFillEdit} from 'react-icons/ai';\r\nimport {FaTools,FaAddressCard} from 'react-icons/fa'\r\nimport { useHistory } from 'react-router-dom'\r\n\r\nconst db=firebase.firestore();\r\n\r\nexport default function pdetails() {\r\n   var personId=window.location.pathname;\r\n    personId=personId.replace('/pdetails/','');\r\n    return (\r\n        <div>\r\n            < Partdetail id={personId}/>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\n\r\nfunction Partdetail(props){\r\n    const[pdata,setpdata]=useState([])\r\n    console.log(props.id)\r\n    useEffect(() => {\r\n    db.collection(\"partner\").doc(props.id).collection(\"ProfileInfo\").doc(props.id).get().then(snap=>{\r\n    setpdata(snap.data())\r\n    }).then(()=>{console.log(pdata)})\r\n    }, [])\r\n    \r\n    var dhref=\"tel: +91 \"+pdata.phone; \r\n    \r\n    return  <div style={{paddingBottom:\"50px\",paddingTop:\"40px\"}}>\r\n    \r\n     <Card centered color=\"blue\" style={{borderRadius:\"1rem\",width:\"80%\"}}>\r\n      <Card.Content>\r\n        <Card.Header style={{textAlign:\"center\"}}><Card.Meta><MdAccountCircle size=\"2rem\"/> Technician Details</Card.Meta></Card.Header>\r\n      </Card.Content>\r\n      <Card.Content>\r\n    <img src={pdata.profilepic} style={{width:\"100%\",borderRadius:\"1rem\",height:\"100%\"}}/>\r\n    </Card.Content>\r\n    <Card.Content style={{textAlign:\"center\"}}>\r\n     <Card.Header><h2><MdAccountCircle />  {pdata.name}</h2></Card.Header>\r\n     <Card.Meta>\r\n       <span ><small><MdSmartphone /> {pdata.phone}</small></span>\r\n       <span ><small><MdPhone /> {pdata.altNum}</small></span>\r\n       <span ><small><MdEmail /> {pdata.email}</small></span>\r\n     </Card.Meta>\r\n     <Card.Description>\r\n       {pdata.desc}\r\n     </Card.Description>\r\n    </Card.Content>\r\n    \r\n    <Card centered color=\"orange\" style={{borderRadius:\"1rem\"}}>\r\n      <Card.Content>\r\n      <Card.Header>\r\n       <FaAddressCard /> Technician address\r\n      </Card.Header>\r\n      </Card.Content>\r\n      <Card.Content>\r\n        <Card.Description>{pdata.addrs}</Card.Description>\r\n      </Card.Content>\r\n    </Card>\r\n    <Card.Content extra>\r\n     <a href={dhref}>\r\n     <MdPhone size=\"1.3rem\"/>\r\n       Call\r\n      \r\n     </a>\r\n    <a style={{float:\"right\"}}><Icon name='setting'/><Dropdown text='more' >\r\n    <Dropdown.Menu>\r\n     <Dropdown.Item text='Raise complaint' />\r\n     <Dropdown.Item text='Report' />\r\n    \r\n    </Dropdown.Menu>\r\n    </Dropdown>\r\n    </a>\r\n    </Card.Content>\r\n    </Card> \r\n    </div>\r\n    \r\n    }","D:\\sekhar\\firstapp\\firstapp\\src\\components\\bikerental.jsx",["288","289","290","291","292","293","294","295","296","297","298","299","300","301","302","303","304","305","306","307","308","309","310","311","312","313","314","315","316","317","318","319","320","321","322","323","324","325","326","327","328","329","330","331","332","333","334","335","336","337","338","339"],"import React from \"react\";\r\nimport \"semantic-ui-css/semantic.min.css\";\r\nimport {\r\n  Card,\r\n  Icon,\r\n  Button,\r\n  Header,\r\n  Image,\r\n  Modal,\r\n  Step,\r\n  Menu,\r\n  Dropdown,\r\n  Checkbox,\r\n  Segment,\r\n  Dimmer,\r\n  Loader,\r\n} from \"semantic-ui-react\";\r\nimport \"./rental.css\";\r\nimport { Row, Col } from \"react-bootstrap\";\r\nimport { SiCoronaengine } from \"react-icons/si\";\r\nimport { BsFillGearFill } from \"react-icons/bs\";\r\nimport { IoSpeedometerOutline } from \"react-icons/io5\";\r\nimport { FaPeopleCarry } from \"react-icons/fa\";\r\nimport { useState, useEffect } from \"react\";\r\nimport firebase from \"../firebase\";\r\nimport ScrollEvent from \"react-onscroll\";\r\nimport { toast } from \"react-toastify\";\r\n\r\nconst db = firebase.firestore();\r\n\r\nfunction Rentals() {\r\n  //  var times=useTimes()\r\n  const [times, setTimes] = useState([]);\r\n\r\n  function useWindowSize() {\r\n    const [size, setSize] = useState([window.innerHeight, window.innerWidth]);\r\n    useEffect(() => {\r\n      const handleResize = () => {\r\n        setSize([window.innerHeight, window.innerWidth]);\r\n      };\r\n      window.addEventListener(\"resize\", handleResize);\r\n      return () => {\r\n        window.removeEventListener(\"resize\", handleResize);\r\n      };\r\n    }, []);\r\n    return size;\r\n  }\r\n\r\n  //cartype filter\r\n  const [count, setcount] = useState(\"true\");\r\n  const [ftype, settype] = useState(\"status\");\r\n\r\n  //fuel filter\r\n  const [count2, setcount2] = useState(\"true\");\r\n  const [ftype2, settype2] = useState(\"status\");\r\n\r\n  //seats filter\r\n  const [count3, setcount3] = useState(\"true\");\r\n  const [ftype3, settype3] = useState(\"status\");\r\n\r\n  //gear type\r\n  const [count4, setcount4] = useState(\"true\");\r\n  const [ftype4, settype4] = useState(\"status\");\r\n\r\n  //toc filter typ of car petrol or diesel\r\n  const [count5, setcount5] = useState(\"true\");\r\n  const [ftype5, settype5] = useState(\"status\");\r\n\r\n  const [checkt, setcheck] = useState(true);\r\n\r\n  const [scr, setscr] = useState(true);\r\n\r\n  // filter function\r\n\r\n  function uncheckall(data) {\r\n    setTimes([]);\r\n    if (data == \"ctype\") settype(\"cartype\");\r\n    else {\r\n      settype(\"status\");\r\n      setcount(\"true\");\r\n    }\r\n    settype2(\"status\");\r\n    setcount2(\"true\");\r\n    settype3(\"status\");\r\n    setcount3(\"true\");\r\n    settype4(\"status\");\r\n    setcount4(\"true\");\r\n    settype5(\"status\");\r\n    setcount5(\"true\");\r\n\r\n    var box = document.querySelector(\".check1\");\r\n    box.isChecked = true;\r\n    setcheck(false);\r\n    // for(var i=0;i<=2;i++){\r\n    //   let box=document.querySelector(`.check${i}`)\r\n    //   box.checked=false;\r\n    // }\r\n  }\r\n\r\n  function newfunk(e) {\r\n    //if(ftype==\"status\") setTimes([]);\r\n\r\n    uncheckall(\"ctype\");\r\n    // setcount(e.target.innerText)\r\n    // settype(\"cartype\")\r\n    setcount(e.target.innerText);\r\n\r\n    // for(var i=0;i<=2;i++){\r\n    //   let ctype=document.getElementById(`type${i}`)\r\n    //   if(ctype.checked){\r\n    //     console.log(ctype.value,\"is checked\")\r\n    //     //  setTimes([]);\r\n    //       settype(\"cartype\")\r\n    //        setcount(ctype.value)\r\n    //        console.log(count)\r\n    //   }\r\n    //   else{\r\n    //     console.log(ctype.value,\"nocheck\")\r\n    //   }\r\n    // }\r\n  }\r\n\r\n  //fuel filter\r\n  function fuelf(e) {\r\n    setTimes([]);\r\n    if (e.target.checked) {\r\n      settype2(\"fuelincl\");\r\n      setcount2(\"true\");\r\n    } else {\r\n      settype2(\"fuelincl\");\r\n      setcount2(\"false\");\r\n    }\r\n  }\r\n\r\n  //tranmission filter\r\n  function transfilt(e) {\r\n    setTimes([]);\r\n    settype4(\"geartype\");\r\n    //if(e.target.checked)console.log(\"checkd\",e.target.value)\r\n    if (\r\n      (document.getElementById(\"trans1\").checked &&\r\n        document.getElementById(\"trans2\").checked) ||\r\n      (!document.getElementById(\"trans1\").checked &&\r\n        !document.getElementById(\"trans2\").checked)\r\n    ) {\r\n      settype4(\"status\");\r\n      setcount4(\"true\");\r\n    } else {\r\n      if (document.getElementById(\"trans1\").checked) setcount4(\"automatic\");\r\n      else if (document.getElementById(\"trans2\").checked) setcount4(\"manual\");\r\n    }\r\n  }\r\n\r\n  //type of car filter petrol or diesel fitelr\r\n  function toc(e) {\r\n    setTimes([]);\r\n    settype5(\"toc\");\r\n    //if(e.target.checked)console.log(\"checkd\",e.target.value)\r\n    if (\r\n      (document.getElementById(\"toc1\").checked &&\r\n        document.getElementById(\"toc2\").checked) ||\r\n      (!document.getElementById(\"toc1\").checked &&\r\n        !document.getElementById(\"toc2\").checked)\r\n    ) {\r\n      settype5(\"status\");\r\n      setcount5(\"true\");\r\n    } else {\r\n      if (document.getElementById(\"toc1\").checked) {\r\n        setcount5(\"petrol\");\r\n        console.log(\"petr\");\r\n      } else if (document.getElementById(\"toc2\").checked) setcount5(\"diesel\");\r\n    }\r\n  }\r\n\r\n  function satish(e) {\r\n    if (!e.target.checked) {\r\n      setTimes([]);\r\n    } else {\r\n    }\r\n    console.log(\"stish\");\r\n  }\r\n\r\n  function seatfil(e) {\r\n    setTimes([]);\r\n    settype3(\"seats\");\r\n    if (e.target.checked) console.log(\"checkd\", e.target.value);\r\n    if (\r\n      (document.getElementById(\"seat0\").checked &&\r\n        document.getElementById(\"seat1\").checked) ||\r\n      (!document.getElementById(\"seat0\").checked &&\r\n        !document.getElementById(\"seat1\").checked)\r\n    ) {\r\n      settype3(\"status\");\r\n      setcount3(\"true\");\r\n    } else {\r\n      if (e.target.checked) {\r\n        settype3(\"seats\");\r\n        setcount3(e.target.value);\r\n      } else {\r\n        if (document.getElementById(\"seat0\").checked) setcount3(\"5\");\r\n        else if (document.getElementById(\"seat1\").checked) setcount3(\"7\");\r\n      }\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    let newtimes;\r\n    db.collection(\"rentals\")\r\n      .get()\r\n      .then((snap) => {\r\n        snap.docs.forEach((nap) => {\r\n          if (nap.data().permission) {\r\n            // if(keys==0){\r\n            db.collection(\"rentals\")\r\n              .doc(nap.id)\r\n              .collection(\"products\")\r\n              .where(ftype, \"==\", count)\r\n              .where(ftype2, \"==\", count2)\r\n              .where(ftype3, \"==\", count3)\r\n              .where(ftype4, \"==\", count4)\r\n              .where(ftype5, \"==\", count5)\r\n              // .orderBy(\"price\")\r\n              .get()\r\n              .then((snap) => {\r\n                newtimes = snap.docs.map((doc) => ({\r\n                  id: doc.id,\r\n                  ...doc.data(),\r\n                }));\r\n                setTimes((cap) => [...cap, ...newtimes]);\r\n                // console.log(times)\r\n              });\r\n          }\r\n        });\r\n      });\r\n  }, [\r\n    count,\r\n    ftype,\r\n    count2,\r\n    ftype2,\r\n    count3,\r\n    ftype3,\r\n    count4,\r\n    ftype4,\r\n    count5,\r\n    ftype5,\r\n  ]);\r\n\r\n  //console.log(times)\r\n\r\n  var arr = [];\r\n  for (var i = 0; i <= 100; i++) {\r\n    arr.push(false);\r\n  }\r\n  const [open, setOpen] = useState(arr);\r\n  const [menu, setMenu] = useState(false);\r\n\r\n  function settrue() {\r\n    setMenu(!menu);\r\n  }\r\n  const scrollevent = () => {\r\n    // console.log(\"scroll\")\r\n    setscr(false);\r\n    setTimeout(() => {\r\n      console.log(\"scroll\");\r\n      setscr(true);\r\n    }, 500);\r\n  };\r\n\r\n  const [heights, widths] = useWindowSize();\r\n  return (\r\n    <div>\r\n      {/* <div className=\"comingSoon\">\r\n        <h1 className=\"soonText\">Coming Soon ...</h1>\r\n        </div> */}\r\n\r\n      <div>\r\n        {/* <  car Filtering /> */}\r\n        {scr ? (\r\n          <Button\r\n            primary\r\n            onClick={() => {\r\n              settrue();\r\n            }}\r\n            style={{\r\n              position: \"fixed\",\r\n              zIndex: \"200\",\r\n              margin: \"10px 0 0 17px\",\r\n            }}\r\n          >\r\n            Filters\r\n          </Button>\r\n        ) : null}\r\n        {menu ? (\r\n          <div className=\"filter-div\">\r\n            <Dropdown\r\n              text=\"Filter\"\r\n              icon=\"filter\"\r\n              labeled\r\n              button\r\n              className=\"icon\"\r\n              style={{ marginTop: \"40px\" }}\r\n            >\r\n              <Dropdown.Menu id=\"filtmenu\" onClick={newfunk}>\r\n                <Dropdown.Item>\r\n                  <Icon name=\"attention\" className=\"right floated\" />\r\n                  sport\r\n                </Dropdown.Item>\r\n                <Dropdown.Item>\r\n                  <Icon name=\"comment\" className=\"right floated\" />\r\n                  suv\r\n                </Dropdown.Item>\r\n                <Dropdown.Item>\r\n                  <Icon name=\"conversation\" className=\"right floated\" />\r\n                  sedan\r\n                </Dropdown.Item>\r\n              </Dropdown.Menu>\r\n            </Dropdown>\r\n            <br />\r\n            <Button\r\n              onClick={(e) => uncheckall(\"all\")}\r\n              style={{ marginTop: \"20px\" }}\r\n            >\r\n              Show me all cars\r\n            </Button>\r\n            <br />\r\n\r\n            {/* <Segment compact \r\n    onClick={newfunk} \r\n    id=\"segmttype\">\r\n      <Checkbox label=\"sport\" id=\"type0\" value=\"sport\" onClick={satish}/><br/>\r\n      <Checkbox label=\"sedan\" id=\"type1\" value=\"sedan\" onClick={satish}/><br/>\r\n      <Checkbox label=\"suv\" id=\"type2\" value=\"suv\" onClick={satish}/><br/>\r\n    </Segment> */}\r\n\r\n            <Checkbox\r\n              toggle\r\n              style={{ marginTop: \"20px\" }}\r\n              onChange={fuelf}\r\n              id=\"fuelid\"\r\n              label=\"petrol\"\r\n              className=\"check0\"\r\n            />\r\n\r\n            <Segment compact onClick={seatfil} id=\"segmttype\">\r\n              <Checkbox\r\n                label=\"5seats\"\r\n                id=\"seat0\"\r\n                value=\"5\"\r\n                className=\"check1\"\r\n              />\r\n              <br />\r\n              <Checkbox\r\n                label=\"7seats\"\r\n                id=\"seat1\"\r\n                value=\"7\"\r\n                className=\"check2\"\r\n              />\r\n              <br />\r\n            </Segment>\r\n\r\n            <Segment compact onClick={transfilt} id=\"segmttype2\">\r\n              <Checkbox label=\"Automatic\" id=\"trans1\" value=\"automatic\" />\r\n              <br />\r\n              <Checkbox label=\"Manual\" id=\"trans2\" value=\"manual\" />\r\n              <br />\r\n            </Segment>\r\n\r\n            <Segment compact onClick={toc} id=\"segmttype3\">\r\n              <Checkbox label=\"Petrol\" id=\"toc1\" value=\"petrol\" />\r\n              <br />\r\n              <Checkbox label=\"Diesel\" id=\"toc2\" value=\"diesel\" />\r\n              <br />\r\n            </Segment>\r\n          </div>\r\n        ) : null}\r\n\r\n        {/* car display cards */}\r\n        <div className=\"newdiv\">\r\n          <div\r\n            style={{ padding: \"10px\", marginLeft: \"auto\", marginRight: \"auto\" }}\r\n            className=\"maindiv\"\r\n            id=\"scrollcard\"\r\n          >\r\n            {widths <= 420 ? (\r\n              <ScrollEvent handleScrollCallback={scrollevent} />\r\n            ) : null}\r\n            {times.length == 0 ? (\r\n              //            <Row>\r\n              //    <Col xs={12} lg={4}> <Segment className=\"rentcard\">\r\n              //       <Dimmer active inverted>\r\n              //         <Loader size='large'>Loading</Loader>\r\n              //       </Dimmer>\r\n\r\n              //       <Image src='/images/wireframe/paragraph.png' />\r\n              //     </Segment></Col>\r\n\r\n              //    <Col xs={12} lg={4}> <Segment className=\"rentcard\">\r\n              //     <Dimmer active inverted>\r\n              //       <Loader size='large'>Loading</Loader>\r\n              //     </Dimmer>\r\n\r\n              //     <Image src='/images/wireframe/paragraph.png' />\r\n              //   </Segment></Col>\r\n\r\n              //        <Col xs={12} lg={4}>  <Segment className=\"rentcard\">\r\n              //          <Dimmer active inverted>\r\n              //           <Loader size='large'>Loading</Loader>\r\n              //          </Dimmer>\r\n\r\n              //   <Image src='/images/wireframe/paragraph.png' />\r\n              // </Segment></Col>\r\n\r\n              //         <Col xs={12} lg={4}> <Segment className=\"rentcard\">\r\n              //            <Dimmer active inverted>\r\n              //                <Loader size='large'>Loading</Loader>\r\n              //            </Dimmer>\r\n\r\n              //              <Image src='/images/wireframe/paragraph.png' />\r\n              //           </Segment></Col>\r\n\r\n              //           <Col xs={12} lg={4}> <Segment className=\"rentcard\">\r\n              //             <Dimmer active inverted>\r\n              //               <Loader size='large'>Loading</Loader>\r\n              //             </Dimmer>\r\n\r\n              //             <Image src='/images/wireframe/paragraph.png' />\r\n              //            </Segment></Col></Row>\r\n              <Card.Group>\r\n                <Card className=\"rentcard\">\r\n                  <Segment className=\"loaderSegment\">\r\n                    <Dimmer active inverted>\r\n                      <Loader size=\"large\">Loading</Loader>\r\n                    </Dimmer>\r\n\r\n                    <Image\r\n                      className=\"loaderImg\"\r\n                      src=\"/images/wireframe/paragraph.png\"\r\n                    />\r\n                  </Segment>\r\n                  <Card.Content>\r\n                    <Card.Header\r\n                      style={{ textAlign: \"center\", height: \"fit-content\" }}\r\n                    ></Card.Header>\r\n                  </Card.Content>\r\n\r\n                  <Card.Content className=\"carBtn\" extra>\r\n                    <div style={{ display: \"inline-flex\" }}>\r\n                      <p className=\"carContent\">\r\n                        <a>\r\n                          <BsFillGearFill />\r\n                          -- &nbsp;\r\n                        </a>\r\n                      </p>\r\n                      <p className=\"carContent\">\r\n                        <a>\r\n                          <SiCoronaengine />\r\n                          --&nbsp;\r\n                        </a>\r\n                      </p>\r\n                      <p className=\"carContent\">\r\n                        {\" \"}\r\n                        <a>\r\n                          <Icon name=\"wheelchair\" />\r\n                          --&nbsp;seats\r\n                        </a>\r\n                      </p>\r\n\r\n                      <p className=\"carContent\">\r\n                        <a>\r\n                          <IoSpeedometerOutline />\r\n                          <br />\r\n                          --&nbsp;km\r\n                        </a>\r\n                      </p>\r\n                    </div>\r\n                    <div>\r\n                      <Button.Group className=\"priceBar\">\r\n                        <Button>\r\n                          {\" \"}\r\n                          &#8377; <br /> <small> 50km </small>\r\n                        </Button>\r\n\r\n                        <Button>\r\n                          {\" \"}\r\n                          &#8377;\r\n                          <br /> <small> 100km </small>\r\n                        </Button>\r\n                        <Button>\r\n                          &#8377; <br /> <small> 150km </small>\r\n                        </Button>\r\n                      </Button.Group>\r\n                    </div>\r\n                  </Card.Content>\r\n\r\n                  <Button color=\"blue\">Book now</Button>\r\n                </Card>\r\n\r\n                <Card className=\"rentcard\">\r\n                  <Segment className=\"loaderSegment\">\r\n                    <Dimmer active inverted>\r\n                      <Loader size=\"large\">Loading</Loader>\r\n                    </Dimmer>\r\n\r\n                    <Image\r\n                      className=\"loaderImg\"\r\n                      src=\"/images/wireframe/paragraph.png\"\r\n                    />\r\n                  </Segment>\r\n                  <Card.Content>\r\n                    <Card.Header\r\n                      style={{ textAlign: \"center\", height: \"fit-content\" }}\r\n                    ></Card.Header>\r\n                  </Card.Content>\r\n\r\n                  <Card.Content className=\"carBtn\" extra>\r\n                    <div style={{ display: \"inline-flex\" }}>\r\n                      <p className=\"carContent\">\r\n                        <a>\r\n                          <BsFillGearFill />\r\n                          -- &nbsp;\r\n                        </a>\r\n                      </p>\r\n                      <p className=\"carContent\">\r\n                        <a>\r\n                          <SiCoronaengine />\r\n                          --&nbsp;\r\n                        </a>\r\n                      </p>\r\n                      <p className=\"carContent\">\r\n                        {\" \"}\r\n                        <a>\r\n                          <Icon name=\"wheelchair\" />\r\n                          --&nbsp;seats\r\n                        </a>\r\n                      </p>\r\n\r\n                      <p className=\"carContent\">\r\n                        <a>\r\n                          <IoSpeedometerOutline />\r\n                          <br />\r\n                          --&nbsp;km\r\n                        </a>\r\n                      </p>\r\n                    </div>\r\n                    <div>\r\n                      <Button.Group className=\"priceBar\">\r\n                        <Button>\r\n                          {\" \"}\r\n                          &#8377; <br /> <small> 50km </small>\r\n                        </Button>\r\n\r\n                        <Button>\r\n                          {\" \"}\r\n                          &#8377;\r\n                          <br /> <small> 100km </small>\r\n                        </Button>\r\n                        <Button>\r\n                          &#8377; <br /> <small> 150km </small>\r\n                        </Button>\r\n                      </Button.Group>\r\n                    </div>\r\n                  </Card.Content>\r\n\r\n                  <Button color=\"blue\">Book now</Button>\r\n                </Card>\r\n\r\n                <Card className=\"rentcard\">\r\n                  <Segment className=\"loaderSegment\">\r\n                    <Dimmer active inverted>\r\n                      <Loader size=\"large\">Loading</Loader>\r\n                    </Dimmer>\r\n\r\n                    <Image\r\n                      className=\"loaderImg\"\r\n                      src=\"/images/wireframe/paragraph.png\"\r\n                    />\r\n                  </Segment>\r\n                  <Card.Content>\r\n                    <Card.Header\r\n                      style={{ textAlign: \"center\", height: \"fit-content\" }}\r\n                    ></Card.Header>\r\n                  </Card.Content>\r\n\r\n                  <Card.Content className=\"carBtn\" extra>\r\n                    <div style={{ display: \"inline-flex\" }}>\r\n                      <p className=\"carContent\">\r\n                        <a>\r\n                          <BsFillGearFill />\r\n                          -- &nbsp;\r\n                        </a>\r\n                      </p>\r\n                      <p className=\"carContent\">\r\n                        <a>\r\n                          <SiCoronaengine />\r\n                          --&nbsp;\r\n                        </a>\r\n                      </p>\r\n                      <p className=\"carContent\">\r\n                        {\" \"}\r\n                        <a>\r\n                          <Icon name=\"wheelchair\" />\r\n                          --&nbsp;seats\r\n                        </a>\r\n                      </p>\r\n\r\n                      <p className=\"carContent\">\r\n                        <a>\r\n                          <IoSpeedometerOutline />\r\n                          <br />\r\n                          --&nbsp;km\r\n                        </a>\r\n                      </p>\r\n                    </div>\r\n                    <div>\r\n                      <Button.Group className=\"priceBar\">\r\n                        <Button>\r\n                          {\" \"}\r\n                          &#8377; <br /> <small> 50km </small>\r\n                        </Button>\r\n\r\n                        <Button>\r\n                          {\" \"}\r\n                          &#8377;\r\n                          <br /> <small> 100km </small>\r\n                        </Button>\r\n                        <Button>\r\n                          &#8377; <br /> <small> 150km </small>\r\n                        </Button>\r\n                      </Button.Group>\r\n                    </div>\r\n                  </Card.Content>\r\n\r\n                  <Button color=\"blue\">Book now</Button>\r\n                </Card>\r\n\r\n                <Card className=\"rentcard\">\r\n                  <Segment className=\"loaderSegment\">\r\n                    <Dimmer active inverted>\r\n                      <Loader size=\"large\">Loading</Loader>\r\n                    </Dimmer>\r\n\r\n                    <Image\r\n                      className=\"loaderImg\"\r\n                      src=\"/images/wireframe/paragraph.png\"\r\n                    />\r\n                  </Segment>\r\n                  <Card.Content>\r\n                    <Card.Header\r\n                      style={{ textAlign: \"center\", height: \"fit-content\" }}\r\n                    ></Card.Header>\r\n                  </Card.Content>\r\n\r\n                  <Card.Content className=\"carBtn\" extra>\r\n                    <div style={{ display: \"inline-flex\" }}>\r\n                      <p className=\"carContent\">\r\n                        <a>\r\n                          <BsFillGearFill />\r\n                          -- &nbsp;\r\n                        </a>\r\n                      </p>\r\n                      <p className=\"carContent\">\r\n                        <a>\r\n                          <SiCoronaengine />\r\n                          --&nbsp;\r\n                        </a>\r\n                      </p>\r\n                      <p className=\"carContent\">\r\n                        {\" \"}\r\n                        <a>\r\n                          <Icon name=\"wheelchair\" />\r\n                          --&nbsp;seats\r\n                        </a>\r\n                      </p>\r\n\r\n                      <p className=\"carContent\">\r\n                        <a>\r\n                          <IoSpeedometerOutline />\r\n                          <br />\r\n                          --&nbsp;km\r\n                        </a>\r\n                      </p>\r\n                    </div>\r\n                    <div>\r\n                      <Button.Group className=\"priceBar\">\r\n                        <Button>\r\n                          {\" \"}\r\n                          &#8377; <br /> <small> 50km </small>\r\n                        </Button>\r\n\r\n                        <Button>\r\n                          {\" \"}\r\n                          &#8377;\r\n                          <br /> <small> 100km </small>\r\n                        </Button>\r\n                        <Button>\r\n                          &#8377; <br /> <small> 150km </small>\r\n                        </Button>\r\n                      </Button.Group>\r\n                    </div>\r\n                  </Card.Content>\r\n\r\n                  <Button color=\"blue\">Book now</Button>\r\n                </Card>\r\n\r\n                <Card className=\"rentcard\">\r\n                  <Segment className=\"loaderSegment\">\r\n                    <Dimmer active inverted>\r\n                      <Loader size=\"large\">Loading</Loader>\r\n                    </Dimmer>\r\n\r\n                    <Image\r\n                      className=\"loaderImg\"\r\n                      src=\"/images/wireframe/paragraph.png\"\r\n                    />\r\n                  </Segment>\r\n                  <Card.Content>\r\n                    <Card.Header\r\n                      style={{ textAlign: \"center\", height: \"fit-content\" }}\r\n                    ></Card.Header>\r\n                  </Card.Content>\r\n\r\n                  <Card.Content className=\"carBtn\" extra>\r\n                    <div style={{ display: \"inline-flex\" }}>\r\n                      <p className=\"carContent\">\r\n                        <a>\r\n                          <BsFillGearFill />\r\n                          -- &nbsp;\r\n                        </a>\r\n                      </p>\r\n                      <p className=\"carContent\">\r\n                        <a>\r\n                          <SiCoronaengine />\r\n                          --&nbsp;\r\n                        </a>\r\n                      </p>\r\n                      <p className=\"carContent\">\r\n                        {\" \"}\r\n                        <a>\r\n                          <Icon name=\"wheelchair\" />\r\n                          --&nbsp;seats\r\n                        </a>\r\n                      </p>\r\n\r\n                      <p className=\"carContent\">\r\n                        <a>\r\n                          <IoSpeedometerOutline />\r\n                          <br />\r\n                          --&nbsp;km\r\n                        </a>\r\n                      </p>\r\n                    </div>\r\n                    <div>\r\n                      <Button.Group className=\"priceBar\">\r\n                        <Button>\r\n                          {\" \"}\r\n                          &#8377; <br /> <small> 50km </small>\r\n                        </Button>\r\n\r\n                        <Button>\r\n                          {\" \"}\r\n                          &#8377;\r\n                          <br /> <small> 100km </small>\r\n                        </Button>\r\n                        <Button>\r\n                          &#8377; <br /> <small> 150km </small>\r\n                        </Button>\r\n                      </Button.Group>\r\n                    </div>\r\n                  </Card.Content>\r\n\r\n                  <Button color=\"blue\">Book now</Button>\r\n                </Card>\r\n\r\n                <Card className=\"rentcard\">\r\n                  <Segment className=\"loaderSegment\">\r\n                    <Dimmer active inverted>\r\n                      <Loader size=\"large\">Loading</Loader>\r\n                    </Dimmer>\r\n\r\n                    <Image\r\n                      className=\"loaderImg\"\r\n                      src=\"/images/wireframe/paragraph.png\"\r\n                    />\r\n                  </Segment>\r\n                  <Card.Content>\r\n                    <Card.Header\r\n                      style={{ textAlign: \"center\", height: \"fit-content\" }}\r\n                    ></Card.Header>\r\n                  </Card.Content>\r\n\r\n                  <Card.Content className=\"carBtn\" extra>\r\n                    <div style={{ display: \"inline-flex\" }}>\r\n                      <p className=\"carContent\">\r\n                        <a>\r\n                          <BsFillGearFill />\r\n                          -- &nbsp;\r\n                        </a>\r\n                      </p>\r\n                      <p className=\"carContent\">\r\n                        <a>\r\n                          <SiCoronaengine />\r\n                          --&nbsp;\r\n                        </a>\r\n                      </p>\r\n                      <p className=\"carContent\">\r\n                        {\" \"}\r\n                        <a>\r\n                          <Icon name=\"wheelchair\" />\r\n                          --&nbsp;seats\r\n                        </a>\r\n                      </p>\r\n\r\n                      <p className=\"carContent\">\r\n                        <a>\r\n                          <IoSpeedometerOutline />\r\n                          <br />\r\n                          --&nbsp;km\r\n                        </a>\r\n                      </p>\r\n                    </div>\r\n                    <div>\r\n                      <Button.Group className=\"priceBar\">\r\n                        <Button>\r\n                          {\" \"}\r\n                          &#8377; <br /> <small> 50km </small>\r\n                        </Button>\r\n\r\n                        <Button>\r\n                          {\" \"}\r\n                          &#8377;\r\n                          <br /> <small> 100km </small>\r\n                        </Button>\r\n                        <Button>\r\n                          &#8377; <br /> <small> 150km </small>\r\n                        </Button>\r\n                      </Button.Group>\r\n                    </div>\r\n                  </Card.Content>\r\n\r\n                  <Button color=\"blue\">Book now</Button>\r\n                </Card>\r\n\r\n                <Card className=\"rentcard\">\r\n                  <Segment className=\"loaderSegment\">\r\n                    <Dimmer active inverted>\r\n                      <Loader size=\"large\">Loading</Loader>\r\n                    </Dimmer>\r\n\r\n                    <Image\r\n                      className=\"loaderImg\"\r\n                      src=\"/images/wireframe/paragraph.png\"\r\n                    />\r\n                  </Segment>\r\n                  <Card.Content>\r\n                    <Card.Header\r\n                      style={{ textAlign: \"center\", height: \"fit-content\" }}\r\n                    ></Card.Header>\r\n                  </Card.Content>\r\n\r\n                  <Card.Content className=\"carBtn\" extra>\r\n                    <div style={{ display: \"inline-flex\" }}>\r\n                      <p className=\"carContent\">\r\n                        <a>\r\n                          74\r\n                          <BsFillGearFill />\r\n                          -- &nbsp;\r\n                        </a>\r\n                      </p>\r\n                      <p className=\"carContent\">\r\n                        <a>\r\n                          <SiCoronaengine />\r\n                          --&nbsp;\r\n                        </a>\r\n                      </p>\r\n                      <p className=\"carContent\">\r\n                        {\" \"}\r\n                        <a>\r\n                          <Icon name=\"wheelchair\" />\r\n                          --&nbsp;seats\r\n                        </a>\r\n                      </p>\r\n\r\n                      <p className=\"carContent\">\r\n                        <a>\r\n                          <IoSpeedometerOutline />\r\n                          <br />\r\n                          --&nbsp;km\r\n                        </a>\r\n                      </p>\r\n                    </div>\r\n                    <div>\r\n                      <Button.Group className=\"priceBar\">\r\n                        <Button>\r\n                          {\" \"}\r\n                          &#8377; <br /> <small> 50km </small>\r\n                        </Button>\r\n\r\n                        <Button>\r\n                          {\" \"}\r\n                          &#8377;\r\n                          <br /> <small> 100km </small>\r\n                        </Button>\r\n                        <Button>\r\n                          &#8377; <br /> <small> 150km </small>\r\n                        </Button>\r\n                      </Button.Group>\r\n                    </div>\r\n                  </Card.Content>\r\n\r\n                  <Button color=\"blue\">Book now</Button>\r\n                </Card>\r\n              </Card.Group>\r\n            ) : (\r\n              //  real cars card appearance\r\n              <Card.Group>\r\n                {times.map((nap, key) => (\r\n                  <Card className=\"rentcard\" id={nap.id} key={key}>\r\n                    <Image\r\n                      className=\"carPic\"\r\n                      src={nap.photo}\r\n                      wrapped\r\n                      ui={true}\r\n                    />\r\n                    <Card.Content>\r\n                      <Card.Header\r\n                        style={{ textAlign: \"center\", height: \"fit-content\" }}\r\n                      >\r\n                        {nap.model}\r\n                      </Card.Header>\r\n\r\n                      {/* <Card.Description>\r\n     <b> &#8377; {nap.price}/Day</b>\r\n      </Card.Description> */}\r\n                    </Card.Content>\r\n                    {/* loader images */}\r\n\r\n                    <Card.Content className=\"carBtn\" extra>\r\n                      <div style={{ display: \"inline-flex\" }}>\r\n                        <p className=\"carContent\">\r\n                          <a>\r\n                            <BsFillGearFill />\r\n                            &nbsp; {nap.geartype}\r\n                          </a>\r\n                        </p>\r\n                        <p className=\"carContent\">\r\n                          <a>\r\n                            <SiCoronaengine />\r\n                            &nbsp; {nap.toc}\r\n                          </a>\r\n                        </p>\r\n                        <p className=\"carContent\">\r\n                          {\" \"}\r\n                          <a>\r\n                            <Icon name=\"wheelchair\" />\r\n                            {nap.seats}&nbsp;seats\r\n                          </a>\r\n                        </p>\r\n\r\n                        <p className=\"carContent\">\r\n                          <a>\r\n                            <IoSpeedometerOutline />\r\n                            <br />\r\n                            {nap.kmslimit}&nbsp;km\r\n                          </a>\r\n                        </p>\r\n                      </div>\r\n                      <div>\r\n                        <Button.Group className=\"priceBar\">\r\n                          <Button>\r\n                            {\" \"}\r\n                            &#8377;{nap.price * 50} <br /> <small> 50km </small>\r\n                          </Button>\r\n\r\n                          <Button>\r\n                            {\" \"}\r\n                            &#8377;{nap.price * 100}\r\n                            <br /> <small> 100km </small>\r\n                          </Button>\r\n                          <Button>\r\n                            &#8377;{nap.price * 150} <br />{\" \"}\r\n                            <small> 150km </small>\r\n                          </Button>\r\n                        </Button.Group>\r\n                      </div>\r\n                    </Card.Content>\r\n                    {nap.status ? (\r\n                      <Button\r\n                        id={nap.id}\r\n                        color=\"blue\"\r\n                        onClick={(e) => blynk(key, true)}\r\n                      >\r\n                        Book now\r\n                      </Button>\r\n                    ) : (\r\n                      <Button\r\n                        disabled\r\n                        id={nap.id}\r\n                        color=\"brown\"\r\n                        onClick={(e) => setOpen(true)}\r\n                      >\r\n                        Sold out\r\n                      </Button>\r\n                    )}\r\n\r\n                    <div>\r\n                      <Modal\r\n                        onClose={() => setOpen({ key: false })}\r\n                        onOpen={() => setOpen({ key: true })}\r\n                        open={open[key]}\r\n                        className=\"categoryModal\"\r\n                      >\r\n                        <Modal.Header>{nap.model}</Modal.Header>\r\n                        <Modal.Content image>\r\n                          <Image size=\"medium\" src={nap.photo} wrapped />\r\n                          <Modal.Description>\r\n                            <Header>\r\n                              <h1>{nap.model}</h1>\r\n                            </Header>\r\n                            <p>{/* <b> &#8377; {nap.price}/Day</b> */}</p>\r\n                            <div style={{ display: \"inline-flex\" }}>\r\n                              <p>\r\n                                <a>\r\n                                  <SiCoronaengine />\r\n                                  &nbsp; {nap.toc}\r\n                                </a>\r\n                              </p>\r\n\r\n                              <p style={{ marginLeft: \"20px\" }}>\r\n                                <a>\r\n                                  <BsFillGearFill />\r\n                                  &nbsp; {nap.geartype}\r\n                                </a>\r\n                              </p>\r\n\r\n                              <p style={{ marginLeft: \"20px\" }}>\r\n                                {\" \"}\r\n                                <a>\r\n                                  <Icon name=\"wheelchair\" />\r\n                                  {nap.seats}seats\r\n                                </a>\r\n                              </p>\r\n\r\n                              <p style={{ marginLeft: \"20px\" }}>\r\n                                <a>\r\n                                  <IoSpeedometerOutline />\r\n                                  &nbsp;{nap.kmslimit} km\r\n                                </a>\r\n                              </p>\r\n\r\n                              {nap.fuelincl == \"true\" ? (\r\n                                <p style={{ marginLeft: \"20px\" }}>\r\n                                  {\" \"}\r\n                                  <Icon name=\"tint\" />\r\n                                  fuel: include\r\n                                </p>\r\n                              ) : (\r\n                                <p style={{ marginLeft: \"20px\" }}>\r\n                                  {\" \"}\r\n                                  <Icon name=\"tint\" />\r\n                                  fuel: exclude\r\n                                </p>\r\n                              )}\r\n                            </div>\r\n                            <div style={{ display: \"inline-flex\" }}>\r\n                              {nap.delivery ? (\r\n                                <p>\r\n                                  <FaPeopleCarry />\r\n                                  &nbsp;door delivery: yes\r\n                                </p>\r\n                              ) : (\r\n                                <p style={{ marginLeft: \"20px\" }}>\r\n                                  <FaPeopleCarry />\r\n                                  delivery: no\r\n                                </p>\r\n                              )}\r\n                              <p style={{ marginLeft: \"20px\" }}>\r\n                                <a>\r\n                                  <IoSpeedometerOutline />\r\n                                  &nbsp;{nap.maxspeed} kmph\r\n                                </a>\r\n                              </p>\r\n\r\n                              <p style={{ marginLeft: \"20px\" }}>\r\n                                <a>\r\n                                  <IoSpeedometerOutline />\r\n                                  &nbsp;Model by: {nap.carcomp}\r\n                                </a>\r\n                              </p>\r\n                            </div>\r\n                            <p>{nap.descr}</p>\r\n                            <div>\r\n                              <Button.Group className=\"priceBar\">\r\n                                <Button>\r\n                                  {\" \"}\r\n                                  &#8377;{nap.price * 50} <br />{\" \"}\r\n                                  <small> 50km </small>\r\n                                </Button>\r\n\r\n                                <Button>\r\n                                  {\" \"}\r\n                                  &#8377;{nap.price * 100}\r\n                                  <br /> <small> 100km </small>\r\n                                </Button>\r\n                                <Button>\r\n                                  &#8377;{nap.price * 150} <br />{\" \"}\r\n                                  <small> 150km </small>\r\n                                </Button>\r\n                              </Button.Group>\r\n                            </div>\r\n                            <div></div>\r\n                          </Modal.Description>\r\n                        </Modal.Content>\r\n                        <Modal.Actions>\r\n                          <Button\r\n                            color=\"black\"\r\n                            onClick={(e) => blynk(key, false)}\r\n                          >\r\n                            Exit\r\n                          </Button>\r\n                          <Button\r\n                            content=\"Rent Now\"\r\n                            labelPosition=\"right\"\r\n                            icon=\"checkmark\"\r\n                            onClick={() => setOpen({ key: false })}\r\n                            positive\r\n                          />\r\n                        </Modal.Actions>\r\n                      </Modal>\r\n                    </div>\r\n                  </Card>\r\n                ))}\r\n              </Card.Group>\r\n            )}\r\n          </div>\r\n        </div>\r\n        {/* <ModalExampleModal state={open} /> */}\r\n      </div>\r\n    </div>\r\n  );\r\n  function blynk(props, crops) {\r\n    arr[props] = crops;\r\n    // console.log(arr)\r\n    setOpen(arr);\r\n  }\r\n}\r\n\r\nfunction useTimes() {\r\n  const [times, setTimes] = useState([]);\r\n  useEffect(() => {\r\n    var newtimes;\r\n    let count = 0;\r\n    db.collection(\"rentals\")\r\n      .get()\r\n      .then((snap) => {\r\n        snap.docs.forEach((nap) => {\r\n          if (nap.data().permission) {\r\n            db.collection(\"rentals\")\r\n              .doc(nap.id)\r\n              .collection(\"products\")\r\n              .get()\r\n              .then((snap) => {\r\n                newtimes = snap.docs.map((doc) => ({\r\n                  id: doc.id,\r\n                  ...doc.data(),\r\n                }));\r\n                setTimes((cap) => [...cap, ...newtimes]);\r\n              });\r\n          }\r\n        });\r\n      });\r\n  }, []);\r\n  return times;\r\n}\r\n\r\nfunction Empty() {\r\n  return (\r\n    <div>\r\n      <p>this is empalyt</p>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Rentals;\r\n","D:\\sekhar\\firstapp\\firstapp\\src\\components\\partnerRegistration.jsx",["340","341","342","343","344","345","346","347","348","349","350","351","352","353","354","355","356"],"D:\\sekhar\\firstapp\\firstapp\\src\\components\\scroll.jsx",["357","358","359","360"],"\r\nimport React, { Component,useCallback } from 'react';\r\nimport ScrollToBottom, { useScrollToBottom, useSticky } from 'react-scroll-to-bottom';\r\n\r\nconst Content = () => {\r\n  const scrollToBottom = useScrollToBottom();\r\n  const [sticky] = useSticky();\r\n\r\n  return (\r\n    <React.Fragment>\r\n        <button onClick={scrollToBottom}>Click me to scroll to bottom</button>\r\n      <p>\r\n        Labore commodo consectetur commodo et Lorem mollit voluptate velit adipisicing proident sit. Dolor consequat\r\n        nostrud aliquip ea anim enim. Culpa quis tempor et quis esse proident cupidatat reprehenderit laborum ullamco.\r\n      </p>\r\n      <p>\r\n        Incididunt labore nulla cupidatat occaecat elit esse occaecat culpa irure et nisi excepteur. Duis Lorem labore\r\n        consectetur nostrud et voluptate culpa consequat enim reprehenderit. Id voluptate occaecat anim consequat id ea\r\n        eiusmod laborum proident irure veniam esse. Aliquip nostrud culpa nostrud laborum cillum adipisicing dolore. Est\r\n        tempor labore Lorem ad cupidatat reprehenderit exercitation pariatur officia ex adipisicing cupidatat\r\n        exercitation.\r\n      </p>\r\n      <p>\r\n        Est labore cupidatat exercitation est laboris et tempor Lorem irure velit ea commodo sint officia. Ullamco\r\n        exercitation cillum est fugiat do. Enim qui eu veniam nostrud tempor elit. Duis elit mollit ut reprehenderit sit\r\n        adipisicing proident culpa veniam sint veniam consectetur fugiat Lorem. Sint dolor proident commodo proident non\r\n        cupidatat labore.\r\n      </p>\r\n       \r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default () => (\r\n  <ScrollToBottom>\r\n    <Content />\r\n  </ScrollToBottom>\r\n);","D:\\sekhar\\firstapp\\firstapp\\src\\components\\contact.jsx",["361","362","363","364","365","366"],"import React, { Component } from \"react\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\n// import { Form, Button } from \"react-bootstrap\";\r\nimport { Modal } from \"semantic-ui-react\";\r\nimport GoogleMapReact from \"google-map-react\";\r\nimport { contactus } from \"../mservices/contactUs\";\r\nimport { toast } from \"react-toastify\";\r\nimport { MdFeedback } from \"react-icons/md\";\r\nimport {\r\n  Dropdown,\r\n  DropdownButton,\r\n  // Modal,\r\n  Button,\r\n  InputGroup,\r\n  Form,\r\n  Col,\r\n  Row,\r\n  FormControl,\r\n  ProgressBar,\r\n} from \"react-bootstrap\";\r\n\r\nconst AnyReactComponent = ({ text }) => <div>{text}</div>;\r\n\r\nclass SimpleMap extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      details: {\r\n        email: null,\r\n        name: null,\r\n        phone: null,\r\n        sub: null,\r\n        message: null,\r\n        date: new Date(),\r\n      },\r\n      open: false,\r\n      wWidth: window.innerWidth,\r\n    };\r\n    this.handlec = this.handlec.bind(this);\r\n    this.submitForm = this.submitForm.bind(this);\r\n  }\r\n\r\n  handleResize = (e) => {\r\n    this.setState({ wWidth: window.innerWidth });\r\n  };\r\n\r\n  componentDidMount() {\r\n    window.addEventListener(\"resize\", this.handleResize);\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    window.addEventListener(\"resize\", this.handleResize);\r\n  }\r\n\r\n  static defaultProps = {\r\n    center: {\r\n      lat: 59.95,\r\n      lng: 30.33,\r\n    },\r\n    zoom: 11,\r\n  };\r\n\r\n  handlec(e) {\r\n    let nameId = e.target.name;\r\n    let value = e.target.value;\r\n    //console.log(value,nameId);\r\n    let temp = this.state.details;\r\n    temp[nameId] = value;\r\n    temp[\"date\"] = new Date();\r\n    this.setState({\r\n      details: temp,\r\n    });\r\n  }\r\n\r\n  async submitForm(e) {\r\n    e.preventDefault();\r\n    //console.log(this.state.details);\r\n    let temp = JSON.stringify(this.state.details);\r\n    //console.log(temp)\r\n    //console.log(JSON.parse(temp));\r\n    let result = await contactus(temp);\r\n    if (result == 200) {\r\n      this.clearfield();\r\n      toast.success(\"Thank you we will contact you soon...\");\r\n    } else toast.info(\"please try again\");\r\n  }\r\n\r\n  clearfield() {\r\n    let tempd = this.state.details;\r\n    tempd = {\r\n      email: \"\",\r\n      name: \"\",\r\n      phone: \"\",\r\n      sub: \"\",\r\n      message: \"\",\r\n      date: new Date(),\r\n    };\r\n    this.setState({\r\n      details: tempd,\r\n    });\r\n  }\r\n\r\n  render() {\r\n    let det = this.state.details;\r\n\r\n    return (\r\n      //   Important! Always set the container height explicitly\r\n      <div\r\n        style={{\r\n          height: \"100vh\",\r\n          width: \"95%\",\r\n          marginLeft: \"2%\",\r\n          alignItems: \"center\",\r\n        }}\r\n      >\r\n        <GoogleMapReact\r\n          bootstrapURLKeys={{ key: \"AIzaSyDUAqHmXwTZU1caOWJ-LC-dBl3R7uzOkPo\" }}\r\n          defaultCenter={this.props.center}\r\n          defaultZoom={this.props.zoom}\r\n        >\r\n          <AnyReactComponent lat={59.955413} lng={30.337844} text=\"SpotMiess\" />\r\n        </GoogleMapReact>\r\n        <div\r\n          style={{\r\n            marginTop: \"30px\",\r\n            width: this.state.wWidth > 625 ? \"50%\" : \"85%\",\r\n          }}\r\n          className=\"contactAddress\"\r\n        >\r\n          <h2>Our Phones are waiting for your call!</h2>\r\n          <hr></hr>\r\n          <h3>Email:</h3>\r\n          <p>modernsilpi@gmail.com</p>\r\n          <h3>Mobile no:</h3>\r\n          <p>9502831877</p>\r\n          <h3>Address:</h3>\r\n          <p>\r\n            D.No: 58-38-10,<br></br> KRM Colony,<br></br> Visakhapatnam,\r\n            <br></br> Andhra Pradesh,<br></br> 530027.\r\n          </p>\r\n        </div>\r\n        <hr></hr>\r\n        <Form\r\n          className=\"contactForm\"\r\n          style={{ width: this.state.wWidth > 625 ? \"50%\" : \"85%\" }}\r\n          onSubmit={this.submitForm}\r\n        >\r\n          <h2>Wanna say something?</h2>\r\n          <Form.Group controlId=\"exampleForm.ControlInput1\">\r\n            <Form.Label>Email address</Form.Label>\r\n            <Form.Control\r\n              type=\"email\"\r\n              placeholder=\"name@example.com\"\r\n              value={det.email}\r\n              name=\"email\"\r\n              onChange={this.handlec}\r\n              required\r\n            />\r\n          </Form.Group>\r\n          <Form.Group controlId=\"exampleForm.ControlInput1\">\r\n            <Form.Label>Name</Form.Label>\r\n            <Form.Control\r\n              type=\"text\"\r\n              placeholder=\"pallavi mella\"\r\n              name=\"name\"\r\n              value={det.name}\r\n              onChange={this.handlec}\r\n              required\r\n            />\r\n          </Form.Group>\r\n          <Form.Group controlId=\"exampleForm.ControlInput1\">\r\n            <Form.Label>Mobile no:</Form.Label>\r\n            <Form.Control\r\n              type=\"number\"\r\n              placeholder=\"9999999999\"\r\n              name=\"phone\"\r\n              value={det.phone}\r\n              onChange={this.handlec}\r\n              required\r\n            />\r\n          </Form.Group>\r\n\r\n          <Form.Group controlId=\"exampleForm.ControlTextarea1\">\r\n            <Form.Label>Subject</Form.Label>\r\n            <Form.Control\r\n              as=\"textarea\"\r\n              placeholder=\"ex:- want to approach spotmies\"\r\n              rows={1}\r\n              name=\"sub\"\r\n              value={det.sub}\r\n              onChange={this.handlec}\r\n            />\r\n          </Form.Group>\r\n          <Form.Group controlId=\"exampleForm.ControlTextarea1\">\r\n            <Form.Label>Message</Form.Label>\r\n            <Form.Control\r\n              as=\"textarea\"\r\n              rows={3}\r\n              placeholder=\"put what you want to message\"\r\n              name=\"message\"\r\n              value={det.message}\r\n              onChange={this.handlec}\r\n              required\r\n            />\r\n          </Form.Group>\r\n          <Button variant=\"primary\" type=\"submit\">\r\n            Submit\r\n          </Button>\r\n        </Form>\r\n        <div\r\n          className=\"feedBack \"\r\n          onClick={() => this.setState({ open: true })}\r\n        >\r\n          <MdFeedback className=\"feedBackIcon\" />\r\n        </div>\r\n\r\n        <Modal\r\n          className=\"fbModal\"\r\n          onClose={() => this.setState({ open: false })}\r\n          onOpen={() => this.setState({ open: true })}\r\n          open={this.state.open}\r\n          // trigger={<Button>Show Modal</Button>}\r\n        >\r\n          <Form\r\n            className=\"contactForm\"\r\n            // style={{ width: this.state.wWidth > 625 ? \"50%\" : \"85%\" }}\r\n            // onSubmit={this.submitForm}\r\n          >\r\n            <h2>Do you have any feedback?</h2>\r\n            <Form.Group className=\"formgroup\">\r\n              <Form.Label>\r\n                Do you understand what does this website mean\r\n              </Form.Label>\r\n              <Col classname=\"formcol\">\r\n                <Form.Check\r\n                  inline\r\n                  type=\"radio\"\r\n                  label=\"first radio\"\r\n                  name=\"formVerticalRadios\"\r\n                  id=\"formVerticalRadios1\"\r\n                />\r\n                <Form.Check\r\n                  inline\r\n                  type=\"radio\"\r\n                  label=\"second radio\"\r\n                  name=\"formVerticalRadios\"\r\n                  id=\"formVerticalRadios2\"\r\n                />\r\n                <Form.Check\r\n                  inline\r\n                  type=\"radio\"\r\n                  label=\"third radio\"\r\n                  name=\"formVerticalRadios\"\r\n                  id=\"formVerticalRadios3\"\r\n                />\r\n              </Col>\r\n            </Form.Group>\r\n            <Form.Group\r\n              className=\"formgroup\"\r\n              controlId=\"exampleForm.ControlInput1\"\r\n            >\r\n              <Form.Label>Is this platform useful?</Form.Label>\r\n              <Col classname=\"formcol\">\r\n                <Form.Check\r\n                  inline\r\n                  type=\"radio\"\r\n                  label=\"first radio\"\r\n                  name=\"formHorizontalRadios1\"\r\n                  id=\"formHorizontalRadios1\"\r\n                />\r\n                <Form.Check\r\n                  inline\r\n                  type=\"radio\"\r\n                  label=\"second radio\"\r\n                  name=\"formHorizontalRadios1\"\r\n                  id=\"formHorizontalRadios2\"\r\n                />\r\n                <Form.Check\r\n                  inline\r\n                  type=\"radio\"\r\n                  label=\"third radio\"\r\n                  name=\"formHorizontalRadios1\"\r\n                  id=\"formHorizontalRadios3\"\r\n                />\r\n              </Col>\r\n            </Form.Group>\r\n            <Form.Group\r\n              className=\"formgroup\"\r\n              controlId=\"exampleForm.ControlInput1\"\r\n            >\r\n              <Form.Label>How does the website looks?</Form.Label>\r\n              <Col classname=\"formcol\">\r\n                <Form.Check\r\n                  inline\r\n                  type=\"radio\"\r\n                  label=\"first radio\"\r\n                  name=\"formHorizontalRadios2\"\r\n                  id=\"formHorizontalRadios1\"\r\n                />\r\n                <Form.Check\r\n                  inline\r\n                  type=\"radio\"\r\n                  label=\"second radio\"\r\n                  name=\"formHorizontalRadios2\"\r\n                  id=\"formHorizontalRadios2\"\r\n                />\r\n                <Form.Check\r\n                  inline\r\n                  type=\"radio\"\r\n                  label=\"third radio\"\r\n                  name=\"formHorizontalRadios2\"\r\n                  id=\"formHorizontalRadios3\"\r\n                />\r\n              </Col>\r\n            </Form.Group>\r\n\r\n            <Form.Group\r\n              className=\"formgroup\"\r\n              controlId=\"exampleForm.ControlTextarea1\"\r\n            >\r\n              <Form.Label>Did you face any issues with the website?</Form.Label>\r\n              <Col classname=\"formcol\">\r\n                <Form.Check\r\n                  inline\r\n                  type=\"radio\"\r\n                  label=\"first radio\"\r\n                  name=\"formHorizontalRadios3\"\r\n                  id=\"formHorizontalRadios1\"\r\n                />\r\n                <Form.Check\r\n                  inline\r\n                  type=\"radio\"\r\n                  label=\"second radio\"\r\n                  name=\"formHorizontalRadios3\"\r\n                  id=\"formHorizontalRadios2\"\r\n                />\r\n                <Form.Check\r\n                  inline\r\n                  type=\"radio\"\r\n                  label=\"third radio\"\r\n                  name=\"formHorizontalRadios3\"\r\n                  id=\"formHorizontalRadios3\"\r\n                />\r\n              </Col>\r\n            </Form.Group>\r\n            <Form.Group\r\n              className=\"formgroup\"\r\n              controlId=\"exampleForm.ControlTextarea1\"\r\n            >\r\n              <Form.Label>\r\n                If you have any other feedback please let us know. We love to\r\n                give you the best.\r\n              </Form.Label>\r\n              <Form.Control\r\n                as=\"textarea\"\r\n                rows={3}\r\n                placeholder=\"put what you want to message\"\r\n                name=\"message\"\r\n                value=\"nothing\"\r\n                // onChange={this.handlec}\r\n              />\r\n            </Form.Group>\r\n\r\n            <Row style={{ margin: \"0 auto\", width: \"fit-content\" }}>\r\n              <Button\r\n                type=\"submit\"\r\n                variant=\"secondary\"\r\n                onClick={() => this.setState({ open: false })}\r\n              >\r\n                Cancel\r\n              </Button>\r\n\r\n              <Button type=\"submit\" style={{ marginLeft: \"30px\" }}>\r\n                Submit\r\n              </Button>\r\n            </Row>\r\n          </Form>\r\n          {/* <Modal.Actions>\r\n            <Button color=\"black\" onClick={() => setOpen(false)}>\r\n              Cancel\r\n            </Button>\r\n            <Button\r\n              content=\"Yep, that's me\"\r\n              labelPosition=\"right\"\r\n              icon=\"checkmark\"\r\n              onClick={() => setOpen(false)}\r\n              positive\r\n            >\r\n              Submit{\" \"}\r\n            </Button>\r\n          </Modal.Actions> */}\r\n        </Modal>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default SimpleMap;\r\n","D:\\sekhar\\firstapp\\firstapp\\src\\components\\navbar.jsx",["367","368","369","370","371","372"],"D:\\sekhar\\firstapp\\firstapp\\src\\components\\chats-section.jsx",["373","374","375","376","377","378","379","380","381","382","383","384","385","386","387","388","389","390","391","392","393","394","395","396","397","398","399","400","401","402","403","404","405","406","407","408","409","410","411","412","413","414","415","416","417","418","419","420","421","422","423","424","425","426","427","428","429","430","431","432","433","434","435","436","437","438","439","440","441","442"],"import React, { Component, useCallback } from \"react\";\r\nimport firebase from \"../firebase\";\r\nimport react, { useState, useEffect, useRef } from \"react\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport { Row, Col, Form } from \"react-bootstrap\";\r\nimport {\r\n  Button,\r\n  Segment,\r\n  Dimmer,\r\n  Loader,\r\n  Label,\r\n  TextArea,\r\n} from \"semantic-ui-react\";\r\nimport \"../index.css\";\r\nimport \"./chats.css\";\r\nimport { BiArrowBack } from \"react-icons/bi\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { Link } from \"react-router-dom\";\r\nimport {\r\n  Image,\r\n  List,\r\n  Grid,\r\n  Input,\r\n  Modal,\r\n  ImageGroup,\r\n  Dropdown,\r\n  Header,\r\n} from \"semantic-ui-react\";\r\nimport imageCompression from \"browser-image-compression\";\r\nimport ImageViewer from \"react-simple-image-viewer\";\r\n// import { UniversalM } from \"./reusable/Modal\";\r\nimport \"firebase/storage\";\r\n//micro service\r\nimport { getpdetailsbyid, disablechat } from \"../mservices/upldmedia\";\r\nimport { gettbystamps, ValidURL } from \"../mservices/dateconv\";\r\nimport { toast } from \"react-toastify\";\r\nimport { msgdot } from \"./reusable/msgdot\";\r\n//import icons\r\nimport { BsEyeFill } from \"react-icons/bs\";\r\nimport { BiTimeFive } from \"react-icons/bi\";\r\nimport { RiPinDistanceFill } from \"react-icons/ri\";\r\nimport { HiOutlineCurrencyRupee } from \"react-icons/hi\";\r\nimport {\r\n  MdDelete,\r\n  MdStar,\r\n  MdChatBubble,\r\n  MdAccessTime,\r\n  MdPhone,\r\n  MdImage,\r\n  MdAddToPhotos,\r\n  MdList,\r\n  MdFeaturedPlayList,\r\n  MdSend,\r\n  MdArrowDropDownCircle,\r\n  MdPerson,\r\n  MdViewDay,\r\n  MdRemoveRedEye,\r\n  MdClose,\r\n  MdThumbUp,\r\n  MdAttachment,\r\n  MdThumbDown,\r\n} from \"react-icons/md\";\r\n\r\nimport { AiFillEdit } from \"react-icons/ai\";\r\nimport { RiSendPlaneLine, RiImageAddFill } from \"react-icons/ri\";\r\nimport { FaFolderPlus } from \"react-icons/fa\";\r\nimport { sharemydetails } from \"../mservices/userDB\";\r\n\r\nconst db = firebase.firestore();\r\nconst storage = firebase.storage();\r\nvar chatid;\r\nvar showChat = false;\r\nfunction useWindowSize() {\r\n  const [size, setSize] = useState([window.innerHeight, window.innerWidth]);\r\n  useEffect(() => {\r\n    const handleResize = () => {\r\n      setSize([window.innerHeight, window.innerWidth]);\r\n    };\r\n    window.addEventListener(\"resize\", handleResize);\r\n    return () => {\r\n      window.removeEventListener(\"resize\", handleResize);\r\n    };\r\n  }, []);\r\n  return size;\r\n}\r\n\r\n// function chatHead() {\r\n//   const [showChat,setShowChat] = useState(false);\r\n//   return showChat;\r\n// }\r\n\r\nfunction useTimes() {\r\n  // const[times,setTimes]=useState([])\r\n  const [chit, setchit] = useState([]);\r\n  useEffect(() => {\r\n    firebase.auth().onAuthStateChanged(function (user) {\r\n      if (user) {\r\n        var tempChat = [];\r\n        db.collection(\"messaging\")\r\n          .where(\"userid\", \"==\", firebase.auth().currentUser.uid)\r\n          .where(\"chatbuild\", \"==\", true)\r\n          .orderBy(\"createdAt\", \"desc\")\r\n          //   .get()\r\n          //   .then(\r\n\r\n          .onSnapshot((querySnapshot) => {\r\n            //  tempChat=[];\r\n            setchit([]);\r\n            querySnapshot.forEach((doc) => {\r\n              // tempChat.push(doc.data());\r\n              setchit((x) => x.concat(doc.data()));\r\n            });\r\n          });\r\n        //   .then(() => setchit(tempChat))\r\n        //   .catch((error) => {\r\n        //     console.log(\"Error getting documents: \", error);\r\n        //   });\r\n      }\r\n    });\r\n  }, []);\r\n  return chit;\r\n}\r\nconst Sekhar = () => {\r\n  const chit = useTimes();\r\n  console.log(chit);\r\n  if (chit.body) {\r\n    console.log(chit);\r\n  }\r\n  return (\r\n    <div className=\"responses\">\r\n      {/* <div className=\"comingSoon\">\r\n        <h1 className=\"soonText\">Coming Soon ...</h1>\r\n        </div> */}\r\n      <Headings />\r\n      {chit ? <Mybookings data={chit} /> : <Empty />}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Sekhar;\r\n\r\n// function settrue() {\r\n//   return setShowChat(true);\r\n//  }\r\n\r\nfunction settrue() {\r\n  showChat = true;\r\n  return showChat;\r\n}\r\n\r\nfunction Mybookings(props) {\r\n  const history = useHistory();\r\n  const [chat, setchat] = useState([]);\r\n  const [showChat, setShowChat] = useState(false);\r\n  const [listChat, setlistChat] = useState([]);\r\n  const [unrChat, setunrChat] = useState([]);\r\n  const [heights, widths] = useWindowSize();\r\n\r\n  useEffect(() => {\r\n    setlistChat(props.data);\r\n    console.log(\"new chat list\");\r\n    console.log(props.data);\r\n  }, [props.data]);\r\n\r\n  const click = async (prop) => {\r\n    // setlistChat(props.data);\r\n    //  update_newmsg();\r\n    console.log(\"click\", prop);\r\n    await db\r\n      .collection(\"messaging\")\r\n      .doc(prop)\r\n      .onSnapshot((snap) => {\r\n        setchat(snap.data());\r\n      });\r\n    console.log(\"new chat fetched\");\r\n  };\r\n\r\n  function settrue() {\r\n    return setShowChat(true);\r\n  }\r\n\r\n  if (widths <= 420) {\r\n    return (\r\n      <div style={{ height: \"100%\" }}>\r\n        {props.data == 0 ? (\r\n          <Grid>\r\n            {!showChat ? (\r\n              <Grid.Column floated=\"left\" mobile={16} tablet={16} computer={4}>\r\n                <div style={{ position: \"-webkit-sticky\" }}>\r\n                  <List celled>\r\n                    <List.Item>\r\n                      <Segment className=\"post-img\">\r\n                        <Dimmer active inverted>\r\n                          <Loader size=\"large\">Loading</Loader>\r\n                        </Dimmer>\r\n\r\n                        <Image src=\"/images/wireframe/paragraph.png\" />\r\n                      </Segment>\r\n                      <List.Content>\r\n                        <List.Header as=\"a\"></List.Header>\r\n                        <List.Description></List.Description>\r\n                      </List.Content>\r\n                    </List.Item>\r\n                  </List>\r\n                </div>\r\n              </Grid.Column>\r\n            ) : null}\r\n          </Grid>\r\n        ) : (\r\n          // original data\r\n          <Grid style={{ marginRight: \"0\" }} fluid={true} className=\"gridHead\">\r\n            {!showChat ? (\r\n              <Grid.Column\r\n                className=\"gridHead\"\r\n                floated=\"left\"\r\n                mobile={16}\r\n                tablet={16}\r\n                computer={4}\r\n              >\r\n                <div\r\n                  style={{ position: \"-webkit-sticky\" }}\r\n                  onClick={() => {\r\n                    settrue();\r\n                  }}\r\n                >\r\n                  <List celled>\r\n                    {listChat.map((nap, key) => (\r\n                      <List.Item\r\n                        id={nap.id}\r\n                        onClick={(e) => click(nap.id)}\r\n                        key={key}\r\n                        // style={{ backgroundColor: \"yellow\", width: \"250px\" }}\r\n                      >\r\n                        <Image avatar src={nap.ppic} />\r\n                        <List.Content style={{ width: \"250px\" }}>\r\n                          <div\r\n                            style={{\r\n                              display: \"inline-flex\",\r\n                              //    backgroundColor: \"red\",\r\n                              width: \"250px\",\r\n                            }}\r\n                          >\r\n                            <List.Header as=\"a\">{nap.pname} </List.Header>\r\n                            <p style={{ marginRight: \"0\", marginLeft: \"auto\" }}>\r\n                              <small\r\n                                style={{ color: nap.uread ? \"gray\" : \"black\" }}\r\n                              >\r\n                                {\" \"}\r\n                                {getmsgtime(\r\n                                  JSON.parse(nap.body[nap.body.length - 1])\r\n                                    .timestamp\r\n                                )}\r\n                              </small>\r\n                            </p>\r\n                          </div>\r\n\r\n                          <List.Description\r\n                            style={{\r\n                              display: \"inline-flex\",\r\n                              width: \"250px\",\r\n                              height: \"100%\",\r\n                              //  backgroundColor: \"red\",\r\n                            }}\r\n                          >\r\n                            <p style={{ color: nap.uread ? \"gray\" : \"black\" }}>\r\n                              {ValidURL(nap.body[nap.body.length - 1]) ==\r\n                              false ? (\r\n                                msgdot(\r\n                                  JSON.parse(nap.body[nap.body.length - 1]).msg,\r\n                                  24\r\n                                )\r\n                              ) : (\r\n                                <span style={{ display: \"inline-flex\" }}>\r\n                                  <MdAttachment />{\" \"}\r\n                                  <small>send you attachment </small>\r\n                                </span>\r\n                              )}\r\n                            </p>\r\n                            {nap.uread == false ? (\r\n                              <Label\r\n                                size=\"mini\"\r\n                                color=\"blue\"\r\n                                style={{\r\n                                  marginRight: \"0\",\r\n                                  marginLeft: \"auto\",\r\n                                  height: \"100%\",\r\n                                }}\r\n                              >\r\n                                New Message\r\n                              </Label>\r\n                            ) : null}\r\n                          </List.Description>\r\n                        </List.Content>\r\n                      </List.Item>\r\n                    ))}\r\n                  </List>\r\n                </div>\r\n              </Grid.Column>\r\n            ) : null}\r\n            {showChat ? (\r\n              <Grid.Column\r\n                className=\"gridHead1\"\r\n                floated=\"right\"\r\n                mobile={16}\r\n                tablet={16}\r\n                computer={12}\r\n                centered\r\n                style={{ padding: \"14px 0 0 0\", height: \"90%\" }}\r\n              >\r\n                <div>\r\n                  {chat.body ? (\r\n                    <Chatarea chat={chat} onNameChange={setShowChat} />\r\n                  ) : (\r\n                    <Empty />\r\n                  )}\r\n                </div>\r\n              </Grid.Column>\r\n            ) : null}\r\n          </Grid>\r\n        )}\r\n      </div>\r\n    );\r\n  } else {\r\n    return (\r\n      <div style={{ height: \"100%\" }}>\r\n        <Grid fluid={true}>\r\n          <Grid.Column\r\n            floated=\"left\"\r\n            mobile={16}\r\n            tablet={16}\r\n            computer={4}\r\n            style={{\r\n              marginTop: \"20px\",\r\n              border: \"0 1px 0 0\",\r\n              boxShadow: \"0px 0px 1px rgb(141, 139, 139)\",\r\n              // backgroundColor: \"yellow\",\r\n              height: \"100%\",\r\n            }}\r\n          >\r\n            <div style={{ position: \"-webkit-sticky\" }}>\r\n              <List>\r\n                {listChat.map((nap, key) => (\r\n                  <List.Item\r\n                    id={nap.id}\r\n                    onClick={(e) => click(nap.id)}\r\n                    key={key}\r\n                  >\r\n                    <Image avatar src={nap.ppic} />\r\n                    <List.Content style={{ width: \"250px\" }}>\r\n                      <div\r\n                        style={{\r\n                          display: \"inline-flex\",\r\n                          // backgroundColor: \"red\",\r\n                          width: \"250px\",\r\n                        }}\r\n                      >\r\n                        <List.Header as=\"a\">{nap.pname} </List.Header>\r\n                        <p style={{ marginRight: \"0\", marginLeft: \"auto\" }}>\r\n                          <small\r\n                            style={{ color: nap.uread ? \"gray\" : \"black\" }}\r\n                          >\r\n                            {\" \"}\r\n                            {getmsgtime(\r\n                              JSON.parse(nap.body[nap.body.length - 1])\r\n                                .timestamp\r\n                            )}\r\n                          </small>\r\n                        </p>\r\n                      </div>\r\n\r\n                      <List.Description\r\n                        style={{\r\n                          display: \"inline-flex\",\r\n                          width: \"250px\",\r\n                          height: \"100%\",\r\n                          //  backgroundColor: \"red\",\r\n                        }}\r\n                      >\r\n                        <p style={{ color: nap.uread ? \"gray\" : \"black\" }}>\r\n                          {ValidURL(nap.body[nap.body.length - 1]) == false ? (\r\n                            msgdot(\r\n                              JSON.parse(nap.body[nap.body.length - 1]).msg,\r\n                              24\r\n                            )\r\n                          ) : (\r\n                            <span style={{ display: \"inline-flex\" }}>\r\n                              <MdAttachment />{\" \"}\r\n                              <small>send you attachment </small>\r\n                            </span>\r\n                          )}\r\n                        </p>\r\n                        {nap.uread == false ? (\r\n                          <Label\r\n                            size=\"mini\"\r\n                            color=\"blue\"\r\n                            style={{\r\n                              marginRight: \"0\",\r\n                              marginLeft: \"auto\",\r\n                              height: \"100%\",\r\n                            }}\r\n                          >\r\n                            New Message\r\n                          </Label>\r\n                        ) : null}\r\n                      </List.Description>\r\n                    </List.Content>\r\n                  </List.Item>\r\n                ))}\r\n              </List>\r\n            </div>\r\n          </Grid.Column>\r\n\r\n          <Grid.Column\r\n            floated=\"right\"\r\n            mobile={16}\r\n            tablet={16}\r\n            computer={12}\r\n            centered\r\n            style={{ padding: \"14px 0 0 0\", height: \"90%\" }}\r\n          >\r\n            <div>{chat.body ? <Chatarea chat={chat} /> : <Empty />}</div>\r\n          </Grid.Column>\r\n        </Grid>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nfunction Chatarea(props) {\r\n  const history = useHistory();\r\n  const [ordst, setordst] = useState();\r\n  const [image, setimage] = useState([]);\r\n  const [image2, setimage2] = useState([]);\r\n  const [chid, setchid] = useState(\"\");\r\n  const [pdetails, setpdetails] = useState({ businessname: \"business\" });\r\n  const [tempimg, settempimg] = useState([]);\r\n  const [upload, setupload] = useState(false);\r\n  const divRef = useRef(null);\r\n  const [mflag, setmflag] = useState(null);\r\n  const [mimage, setmimage] = useState(null);\r\n  const scrollref = useRef(null);\r\n  const [heights, widths] = useWindowSize();\r\n  const [typemsg, settypemsg] = useState(\"\");\r\n  // var [showChat,setShowChat] = useState(false);\r\n\r\n  db.collection(\"users\")\r\n    .doc(firebase.auth().currentUser.uid)\r\n    .collection(\"adpost\")\r\n    .doc(props.chat.orderid)\r\n    .get()\r\n    .then((snap) => {\r\n      setordst(snap.data().orderstate);\r\n      //console.log(snap.data())\r\n    });\r\n\r\n  useEffect(async () => {\r\n    let data;\r\n    console.log(\"fetching partner details..\");\r\n    data = await getpdetailsbyid(props.chat.partnerid);\r\n    console.log(data);\r\n    setpdetails(data);\r\n    console.log(\"effect1\");\r\n  }, [props.chat.partnerid]);\r\n\r\n  //const divRef = useRef(null);\r\n  const onKeyDownHandler = (e) => {\r\n    if (e.keyCode === 13) {\r\n      // this.sendMessage();\r\n      console.log(\"enter key\");\r\n      // document.getElementById(props.chat.id).click();\r\n      // divRef.current.click();\r\n      click(props.chat.id);\r\n    }\r\n  };\r\n\r\n  let chat = [];\r\n  chat = props.chat;\r\n  let onNameChange = props.onNameChange;\r\n  // console.log(JSON.parse(chat.body));\r\n  useEffect(async () => {\r\n    // console.log(await getpdetailsbyid(\"KrJkoNpybQM7svmRo7CcWOwRGQA3\"));\r\n\r\n    if (document.getElementById(\"scrollbtn\")) {\r\n      document.getElementById(\"scrollbtn\").click();\r\n      console.log(\"new message\");\r\n    }\r\n    console.log(\"effect2\");\r\n    console.log(chat);\r\n  }, [chat.body]);\r\n\r\n  const click = (prop) => {\r\n    if (typemsg != \"\") {\r\n      let newbody = [];\r\n      newbody = chat.body;\r\n\r\n      console.log(\"click\", prop);\r\n      let timestamp = Math.round(+new Date() / 1000);\r\n      //let msg = typemsg + \"`\" + timestamp + \"`\";\r\n      var msg2 = {};\r\n      msg2.msg = typemsg;\r\n      msg2.timestamp = timestamp;\r\n      msg2.type = \"text\";\r\n      msg2.sender = \"u\";\r\n      var msg = JSON.stringify(msg2);\r\n      if (msg != \"\") {\r\n        newbody.push(msg);\r\n        db.collection(\"messaging\")\r\n          .doc(prop)\r\n          .update({\r\n            body: newbody,\r\n            createdAt: new Date(),\r\n            pread: false,\r\n          })\r\n          .then(() => {\r\n            settypemsg(\"\");\r\n            // tempChat=[];\r\n          });\r\n      }\r\n    }\r\n  };\r\n\r\n  const click2 = (id, msg) => {\r\n    let newbody = [];\r\n    newbody = chat.body;\r\n\r\n    console.log(\"click\");\r\n    let timestamp = Math.round(+new Date() / 1000);\r\n    //let msg = typemsg + \"`\" + timestamp + \"`\";\r\n    var msg2 = {};\r\n    msg2.msg = msg;\r\n    msg2.timestamp = timestamp;\r\n    msg2.type = \"photo\";\r\n    msg2.sender = \"u\";\r\n    var msgg = JSON.stringify(msg2);\r\n    newbody.push(msgg);\r\n\r\n    // let timestamp = Math.round(+new Date() / 1000);\r\n\r\n    db.collection(\"messaging\")\r\n      .doc(id)\r\n      .update({\r\n        body: newbody,\r\n        createdAt: new Date(),\r\n        pread: false,\r\n      })\r\n      .then(() => {});\r\n  };\r\n  const umread = async () => {\r\n    await db.collection(\"messaging\").doc(chat.id).update({\r\n      uread: true,\r\n    });\r\n    return true;\r\n  };\r\n  function orderstatus(e) {\r\n    console.log(e.target.innerText, e.target.parentElement.id);\r\n    console.log(ordst);\r\n  }\r\n\r\n  const handleInputChange = useCallback(\r\n    (event) => {\r\n      onNameChange(false);\r\n    },\r\n    [onNameChange]\r\n  );\r\n\r\n  const inputFile = useRef(null);\r\n\r\n  const mediashare = (e) => {\r\n    inputFile.current.click();\r\n    console.log(image);\r\n    console.log(image2);\r\n    setchid(props.chat.id);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (upload == true) {\r\n      console.log(\"uploading..\");\r\n      //  toast.info(\"uploading...\");\r\n      uitf();\r\n    }\r\n    console.log(\"effect4\");\r\n  }, [upload]);\r\n\r\n  async function uitf() {\r\n    let image3 = tempimg;\r\n    for (var i = 0; i < image3.length; i++) {\r\n      let k = Number(i);\r\n      const uploadTask = storage\r\n        .ref(`users/${firebase.auth().currentUser.uid}/chat/${image3[k].name}`)\r\n        .put(image3[k]);\r\n      let upldtask = await uploadTask.on(\r\n        \"state_changed\",\r\n        (snapshot) => {},\r\n        (error) => {\r\n          console.log(error);\r\n          toast.info(error);\r\n        },\r\n        () => {\r\n          storage\r\n            .ref(`users/${firebase.auth().currentUser.uid}/chat/`)\r\n            .child(image3[k].name)\r\n            .getDownloadURL()\r\n            .then((url) => {\r\n              console.log(url);\r\n              // toast.info(url);\r\n              setimage2((temp) => [...temp, url]);\r\n            });\r\n        }\r\n      );\r\n    }\r\n    setupload(false);\r\n    settempimg([]);\r\n    setimage2([]);\r\n  }\r\n\r\n  useEffect(() => {\r\n    console.log(image2);\r\n    if (image2.length > 0) {\r\n      click2(chid, image2[image2.length - 1]);\r\n    }\r\n    console.log(\"effect5\");\r\n  }, [image2]);\r\n\r\n  async function compressimage(e) {\r\n    const options = {\r\n      maxSizeMB: 0.15,\r\n      maxWidthOrHeight: 800,\r\n      useWebWorker: true,\r\n    };\r\n    let cfile;\r\n    setimage([]);\r\n\r\n    for (var i = 0; i < e.target.files.length; i++) {\r\n      let k = Number(i);\r\n      //  toast.info(\"loop start\");\r\n      imageCompression(e.target.files[k], options)\r\n        .then((x) => {\r\n          cfile = x;\r\n          // setimage(temp=>[...temp,cfile]);\r\n          settempimg((temp) => [...temp, cfile]);\r\n          //   toast.info(`image compressed ${k}`);\r\n        })\r\n        .catch(function (error) {\r\n          console.log(error.message);\r\n          //  toast.info(error.message);\r\n          //  toast.info(error);\r\n        });\r\n      // settempimg((temp) => [...temp, e.target.files[k]]);\r\n    }\r\n    // setimage(temp=>[...temp,\"dummy\"]);\r\n  }\r\n  async function uploadmedia(e) {\r\n    setimage([]);\r\n    setimage2([]);\r\n    compressimage(e);\r\n  }\r\n  function uploadmediatemp(e) {\r\n    //  toast.info(\"func called\");\r\n    console.log(e);\r\n    compressimage(e);\r\n  }\r\n\r\n  const showimage = (e) => {\r\n    setmflag(true);\r\n    setmimage(e.target.src);\r\n    console.log(e);\r\n  };\r\n\r\n  const pdet = (e, prop) => {\r\n    history.push(`pdetails/${prop}`);\r\n    console.log(prop);\r\n  };\r\n  const vieworder = (prop) => {\r\n    console.log(\"click\", prop);\r\n    history.push(`mybookings/id/${prop}`);\r\n  };\r\n  const delchat = async (prop) => {\r\n    if ((await disablechat(prop)) == 200) toast.info(\"chat deleted\");\r\n    else toast.info(\"unable to delete chat try again later\");\r\n  };\r\n\r\n  const handleKeyDown = (e) => {\r\n    e.target.style.height = \"inherit\";\r\n    e.target.style.height = `${e.target.scrollHeight}px`;\r\n    // In case you have a limitation\r\n    // e.target.style.height = `${Math.min(e.target.scrollHeight, limit)}px`;\r\n  };\r\n\r\n  async function sharemydet() {\r\n    let details = await sharemydetails(firebase.auth().currentUser.uid);\r\n    console.log(details);\r\n    settypemsg(\r\n      `contact me at name : ${details.name}  phone: ${details.phone} / ${details.altnum}`\r\n    );\r\n  }\r\n\r\n  const [scrollDisplay, setScrolldisplay] = useState(false);\r\n  const [tbody, settbody] = useState([]);\r\n  function scrollhandle(e) {\r\n    //console.log(e,\"scrolling mobile\");\r\n    const scrolly = scrollref.current.scrollHeight;\r\n    const scrolltop = scrollref.current.scrollTop;\r\n    const clientheight = scrollref.current.clientHeight;\r\n    //console.log(scrolly, scrolltop, clientheight);\r\n    if (scrolly - scrolltop == clientheight) {\r\n      setScrolldisplay(false);\r\n      if (tbody != chat.body) {\r\n        umread();\r\n        settbody(chat.body);\r\n        console.log(\"message read\");\r\n      }\r\n      //console.log(\"bottom scroll\");\r\n    } else {\r\n      //console.log(\"top scroll\")\r\n      setScrolldisplay(true);\r\n    }\r\n  }\r\n\r\n  if (widths <= 1000) {\r\n    return (\r\n      <div style={{ float: \"right\", width: \"100%\", overflowY: \"auto\" }}>\r\n        {/* {showChat ?  */}\r\n        <List className=\"chatHead\" horizontal>\r\n          <List.Item>\r\n            <BiArrowBack\r\n              style={{\r\n                width: \"50px\",\r\n                fontSize: \"24px\",\r\n                background: \"rgba(255, 255, 255, 0.92)\",\r\n              }}\r\n              onClick={handleInputChange}\r\n            />\r\n            <Image avatar src={props.chat.ppic} />\r\n            <List.Content>\r\n              <List.Header>{props.chat.pname}</List.Header>\r\n              computer technician\r\n            </List.Content>\r\n          </List.Item>\r\n          <List.Item style={{ float: \"right\", marginRight: \"20px\" }}>\r\n            <a href={\"tel: +91 \" + pdetails.phone}>\r\n              <MdPhone\r\n                size=\"1.5rem\"\r\n                id=\"hgffj\"\r\n                color=\"black\"\r\n                style={{ marginRight: \"10px\" }}\r\n                onClick={console.log(\"phone number clicked\")}\r\n              />\r\n            </a>\r\n            <Dropdown\r\n              item\r\n              icon=\"ellipsis vertical\"\r\n              backgroundColor=\"white\"\r\n              simple\r\n              direction=\"left\"\r\n              color=\"white\"\r\n            >\r\n              <Dropdown.Menu>\r\n                <Dropdown.Item\r\n                  onClick={(e) => {\r\n                    // alert(\"make a call\");\r\n                    toast.info(`+91 ${pdetails.phone}`);\r\n                    setmimage(`+91 ${pdetails.phone}`);\r\n                  }}\r\n                >\r\n                  <MdPhone /> Make A Call\r\n                </Dropdown.Item>\r\n\r\n                <Dropdown.Item\r\n                  onClick={(e) => {\r\n                    pdet(e, props.chat.partnerid);\r\n                  }}\r\n                >\r\n                  <MdPerson /> Technician details\r\n                </Dropdown.Item>\r\n                <Dropdown.Item\r\n                  onClick={() => {\r\n                    vieworder(props.chat.orderid);\r\n                  }}\r\n                >\r\n                  <MdRemoveRedEye /> View job\r\n                </Dropdown.Item>\r\n                <Dropdown.Divider />\r\n                <Dropdown.Item\r\n                  onClick={() => {\r\n                    delchat(props.chat.id);\r\n                  }}\r\n                >\r\n                  <MdDelete /> Delete\r\n                </Dropdown.Item>\r\n              </Dropdown.Menu>\r\n            </Dropdown>\r\n          </List.Item>\r\n        </List>\r\n        {/* : null} */}\r\n\r\n        {ordst == 0 ? (\r\n          <Button.Group\r\n            style={{ width: \"100%\" }}\r\n            onClick={orderstatus}\r\n            id={props.chat.id}\r\n          >\r\n            <Button>\r\n              <MdThumbDown /> Cancel partner\r\n            </Button>\r\n            <Button.Or />\r\n            <Button primary>\r\n              <MdThumbUp />\r\n              Confirm partner\r\n            </Button>\r\n          </Button.Group>\r\n        ) : null}\r\n\r\n        <div\r\n          className=\"chatdiv\"\r\n          style={{ overflow: \"auto\" }}\r\n          ref={scrollref}\r\n          onScroll={(e) => {\r\n            scrollhandle(e);\r\n          }}\r\n        >\r\n          {chat.body.map((nap, key, array) => {\r\n            var chatobj = JSON.parse(nap);\r\n            return (\r\n              <div className={chatobj.sender == \"u\" ? \"out-chat\" : \"in-chat\"}>\r\n                <p>{cmpmsg(nap, array[key - 1])}</p>\r\n\r\n                <div\r\n                  className={\r\n                    chatobj.sender == \"u\" ? \"out-chatbox\" : \"in-chatbox\"\r\n                  }\r\n                  key={key}\r\n                  id={key == chat.body.length - 1 ? \"scrolltobottom\" : null}\r\n                >\r\n                  {chatobj.type == \"text\" ? (\r\n                    <p\r\n                      className={\r\n                        chatobj.sender == \"u\" ? \"chatList\" : \"chatListp\"\r\n                      }\r\n                    >\r\n                      {chatobj.msg}\r\n\r\n                      <small\r\n                        className={\r\n                          chatobj.sender == \"u\" ? \"textTime\" : \"textTimep\"\r\n                        }\r\n                      >\r\n                        {\" \"}\r\n                        {getmsgtime(chatobj.timestamp)}\r\n                      </small>\r\n                    </p>\r\n                  ) : chatobj.type == \"photo\" ? (\r\n                    <Image\r\n                      floated=\"right\"\r\n                      className=\"chatPic\"\r\n                      onClick={showimage}\r\n                      src={chatobj.msg}\r\n                      size=\"small\"\r\n                    />\r\n                  ) : null}\r\n                </div>\r\n                {/* <UniversalM /> */}\r\n              </div>\r\n            );\r\n          })}\r\n\r\n          {/* {chat.body.map((nap, key, array) => {\r\n            if (nap[nap.length - 1] == \"u\")\r\n              return (\r\n                <div\r\n                  className=\"out-chat\"\r\n                  key={key}\r\n                  id={key == chat.body.length - 1 ? \"scrolltobottom\" : null}\r\n                >\r\n                  {cmpmsg(nap, array[key - 1]) != null ? (\r\n                    <p>{cmpmsg(nap, array[key - 1])}</p>\r\n                  ) : null}\r\n                  <div className=\"out-chatbox\">\r\n                    <p className=\"chatList\">\r\n                      {getorgnl(nap)}&nbsp;{\" \"}\r\n                      <small className=\"textTime\"> {getmsgtime(nap)}</small>\r\n                    </p>\r\n                  </div>\r\n\r\n                </div>\r\n              );\r\n            else if (nap[nap.length - 1] == \"p\")\r\n              return (\r\n                <div className=\"in-chat\">\r\n                  {cmpmsg(nap, array[key - 1]) != null ? (\r\n                    <p>{cmpmsg(nap, array[key - 1])}</p>\r\n                  ) : null}\r\n                  <div\r\n                    className=\"in-chatbox\"\r\n                    key={key}\r\n                    id={key == chat.body.length - 1 ? \"scrolltobottom\" : null}\r\n                  >\r\n                    <p className=\"chatListP\">\r\n                      {getorgnl(nap)}&nbsp;{\" \"}\r\n                      <small className=\"textTimep\"> {getmsgtime(nap)}</small>\r\n                    </p>\r\n                  </div>\r\n                </div>\r\n              );\r\n            else if (nap.slice(-2) == \"um\")\r\n              return (\r\n                <div\r\n                  className=\"out-chat\"\r\n                  key={key}\r\n                  id={key == chat.body.length - 1 ? \"scrolltobottom\" : null}\r\n                >\r\n                  {cmpmsg(nap, array[key - 1]) != null ? (\r\n                    <p>{cmpmsg(nap, array[key - 1])}</p>\r\n                  ) : null}\r\n                  <Image\r\n                    floated=\"right\"\r\n                    className=\"chatPic\"\r\n                    onClick={showimage}\r\n                    src={nap.slice(0, -2)}\r\n                    size=\"small\"\r\n                  />\r\n                  <p>\r\n                    <small className=\"textTime\">{getmsgtime(nap)}</small>\r\n                  </p>\r\n                  {key == chat.body.length - 1 ? (\r\n                    <p className=\"readText\">\r\n                      <small>{chat.pread ? \"read\" : \"unread\"}</small>\r\n                    </p>\r\n                  ) : null}\r\n                </div>\r\n              );\r\n            else if (nap.slice(-2) == \"pm\")\r\n              return (\r\n                <div\r\n                  className=\"in-chat\"\r\n                  key={key}\r\n                  id={key == chat.body.length - 1 ? \"scrolltobottom\" : null}\r\n                >\r\n                  {cmpmsg(nap, array[key - 1]) != null ? (\r\n                    <p>{cmpmsg(nap, array[key - 1])}</p>\r\n                  ) : null}\r\n                  <Image\r\n                    floated=\"left\"\r\n                    className=\"chatPic\"\r\n                    onClick={showimage}\r\n                    src={nap.slice(0, -2)}\r\n                    size=\"small\"\r\n                  />\r\n                  <p>\r\n                    <small className=\"textTime\">{getmsgtime(nap)}</small>\r\n                  </p>\r\n                </div>\r\n              );\r\n          })} */}\r\n          {JSON.parse(chat.body[chat.body.length - 1]).sender == \"u\" ? (\r\n            <div>\r\n              <p>\r\n                <small className=\"readText\">\r\n                  {chat.pread ? \"seen\" : \"unseen\"}\r\n                </small>\r\n              </p>\r\n            </div>\r\n          ) : null}\r\n          {scrollDisplay ? (\r\n            <a href=\"#scrolltobottom\" id=\"scrollbtn\">\r\n              <MdArrowDropDownCircle\r\n                size=\"3rem\"\r\n                style={{ position: \"fixed\", bottom: \"150px\", float: \"right\" }}\r\n              />\r\n            </a>\r\n          ) : (\r\n            <a href=\"#scrolltobottom\" id=\"scrollbtn\">\r\n              <MdArrowDropDownCircle\r\n                size=\"3rem\"\r\n                style={{\r\n                  position: \"fixed\",\r\n                  bottom: \"150px\",\r\n                  float: \"right\",\r\n                  display: \"none\",\r\n                }}\r\n              />\r\n            </a>\r\n          )}\r\n        </div>\r\n\r\n        <Form.Group\r\n          className=\"chat-form\"\r\n          style={{\r\n            position: \"fixed\",\r\n            bottom: \"2px\",\r\n            margin: \"0\",\r\n            backgroundColor: \"#f6f6f6\",\r\n          }}\r\n        >\r\n          <Row className=\"align-items-center\" noGutters>\r\n            {/* <input type='file' id={props.chat.id} ref={inputFile} accept=\"image/x-png,image/gif,image/jpeg\" onChange={uploadmedia} style={{display: 'none'}} multiple/> */}\r\n            <input\r\n              type=\"file\"\r\n              id={props.chat.id}\r\n              ref={inputFile}\r\n              accept=\"image/x-png,image/gif,image/jpeg\"\r\n              onChange={uploadmediatemp}\r\n              style={{ display: \"none\" }}\r\n              multiple\r\n            />\r\n\r\n            <Col className=\"chatformicons\" xs={2}>\r\n              {\" \"}\r\n              <MdAddToPhotos\r\n                style={{ marginLeft: \"20px\" }}\r\n                onClick={mediashare}\r\n                size=\"2rem\"\r\n                color=\"gray\"\r\n              />\r\n              <Dropdown style={{ marginLeft: \"15px\" }}>\r\n                <Dropdown.Menu>\r\n                  <Dropdown.Item\r\n                    icon=\"address card\"\r\n                    text=\"Share your Contact Details\"\r\n                    onClick={sharemydet}\r\n                  />\r\n                  <Dropdown.Item icon=\"trash\" text=\"Move to trash\" />\r\n                  <Dropdown.Divider />\r\n                  <Dropdown.Item text=\"E-mail Collaborators\" />\r\n                </Dropdown.Menu>\r\n              </Dropdown>\r\n            </Col>\r\n            <Col xs={6}>\r\n              <Form.Control\r\n                type=\"text\"\r\n                placeholder=\"Message Here\"\r\n                value={typemsg}\r\n                onChange={(e) => {\r\n                  settypemsg(e.target.value);\r\n                }}\r\n                id=\"msgtext\"\r\n              />\r\n            </Col>\r\n            <Col className=\"chatformicons\" xs={4}>\r\n              <a href=\"#scrolltobottom\">\r\n                {\" \"}\r\n                <Button\r\n                  primary\r\n                  style={{ marginLeft: \"20px\" }}\r\n                  className=\"chatSend\"\r\n                  id={props.chat.id}\r\n                  ref={divRef}\r\n                  onClick={(e) => click(props.chat.id)}\r\n                >\r\n                  Send\r\n                  <MdSend />\r\n                </Button>\r\n              </a>\r\n            </Col>\r\n          </Row>\r\n        </Form.Group>\r\n        <ImageModal\r\n          className=\"uploadModal\"\r\n          image={mimage}\r\n          setflag={setmimage}\r\n        />\r\n        <ImageModal2\r\n          image={tempimg}\r\n          flag={setupload}\r\n          setimage={settempimg}\r\n          addmore={mediashare}\r\n          removeitems={removeitems}\r\n        />\r\n      </div>\r\n    );\r\n  } else {\r\n    return (\r\n      <div style={{ float: \"right\", width: \"100%\", overflowY: \"auto\" }}>\r\n        <List className=\"chatHead\" horizontal>\r\n          <List.Item\r\n            onClick={(e) => {\r\n              pdet(e, props.chat.partnerid);\r\n            }}\r\n            style={{ cursor: \"pointer\" }}\r\n          >\r\n            <Image avatar src={pdetails.profilepic} />\r\n            <List.Content>\r\n              <List.Header>\r\n                <b style={{ fontSize: \"19px\" }}>{pdetails.name}</b>{\" \"}\r\n                <small>\r\n                  {pdetails.rate > 5 ? pdetails.rate / 20 : pdetails.rate}\r\n                  <MdStar color=\"yellow\" size=\"1.1rem\" />\r\n                </small>\r\n              </List.Header>\r\n              {/* {pdetails.businessname} */}\r\n              Title here\r\n            </List.Content>\r\n          </List.Item>\r\n          <List.Item style={{ float: \"right\", marginRight: \"20px\" }}>\r\n            <a href={\"tel: +91 \" + pdetails.phone}>\r\n              <MdPhone\r\n                size=\"1.5rem\"\r\n                id=\"hgffj\"\r\n                color=\"black\"\r\n                style={{ marginRight: \"10px\" }}\r\n                onClick={console.log(\"phone number clicked\")}\r\n              />\r\n            </a>\r\n\r\n            <Dropdown\r\n              item\r\n              icon=\"ellipsis vertical\"\r\n              backgroundColor=\"white\"\r\n              simple\r\n              direction=\"left\"\r\n              color=\"white\"\r\n            >\r\n              <Dropdown.Menu>\r\n                <Dropdown.Item\r\n                  onClick={(e) => {\r\n                    // alert(\"make a call\");\r\n                    toast.info(`+91 ${pdetails.phone}`);\r\n                    setmimage(`+91 ${pdetails.phone}`);\r\n                  }}\r\n                >\r\n                  <MdPhone /> Make A Call\r\n                </Dropdown.Item>\r\n\r\n                <Dropdown.Item\r\n                  onClick={(e) => {\r\n                    pdet(e, props.chat.partnerid);\r\n                  }}\r\n                >\r\n                  <MdPerson /> Technician details\r\n                </Dropdown.Item>\r\n                <Dropdown.Item\r\n                  onClick={() => {\r\n                    vieworder(props.chat.orderid);\r\n                  }}\r\n                >\r\n                  <MdRemoveRedEye /> View job\r\n                </Dropdown.Item>\r\n                <Dropdown.Divider />\r\n                <Dropdown.Item\r\n                  onClick={() => {\r\n                    delchat(props.chat.id);\r\n                  }}\r\n                >\r\n                  <MdDelete /> Delete\r\n                </Dropdown.Item>\r\n              </Dropdown.Menu>\r\n            </Dropdown>\r\n          </List.Item>\r\n        </List>\r\n        {ordst == 0 ? (\r\n          <Button.Group\r\n            style={{ width: \"100%\" }}\r\n            onClick={orderstatus}\r\n            id={props.chat.id}\r\n          >\r\n            <Button>\r\n              <MdThumbDown /> Cancel partner\r\n            </Button>\r\n            <Button.Or />\r\n            <Button primary>\r\n              <MdThumbUp />\r\n              Confirm partner\r\n            </Button>\r\n          </Button.Group>\r\n        ) : null}\r\n\r\n        <div\r\n          className=\"chatdiv\"\r\n          style={{ overflow: \"auto\", paddingBottom: \"10px\" }}\r\n          ref={scrollref}\r\n          onScroll={(e) => {\r\n            scrollhandle(e);\r\n          }}\r\n        >\r\n          {chat.body.map((nap, key, array) => {\r\n            var chatobj = JSON.parse(nap);\r\n            return (\r\n              <div className={chatobj.sender == \"u\" ? \"out-chat\" : \"in-chat\"}>\r\n                <p>{cmpmsg(nap, array[key - 1])}</p>\r\n\r\n                <div\r\n                  className={\r\n                    chatobj.sender == \"u\" ? \"out-chatbox\" : \"in-chatbox\"\r\n                  }\r\n                  key={key}\r\n                  id={key == chat.body.length - 1 ? \"scrolltobottom\" : null}\r\n                >\r\n                  {chatobj.type == \"text\" ? (\r\n                    <p\r\n                      className={\r\n                        chatobj.sender == \"u\" ? \"chatList\" : \"chatListp\"\r\n                      }\r\n                    >\r\n                      {chatobj.msg}\r\n\r\n                      <small\r\n                        className={\r\n                          chatobj.sender == \"u\" ? \"textTime\" : \"textTimep\"\r\n                        }\r\n                      >\r\n                        {\" \"}\r\n                        {getmsgtime(chatobj.timestamp)}\r\n                      </small>\r\n                    </p>\r\n                  ) : chatobj.type == \"photo\" ? (\r\n                    <Image\r\n                      floated=\"right\"\r\n                      className=\"chatPic\"\r\n                      onClick={showimage}\r\n                      src={chatobj.msg}\r\n                      size=\"small\"\r\n                    />\r\n                  ) : null}\r\n                </div>\r\n                {/* <UniversalM /> */}\r\n              </div>\r\n            );\r\n          })}\r\n\r\n          {/* {chat.body.map((nap, key, array) => {\r\n            if (nap[nap.length - 1] == \"u\")\r\n              return (\r\n                <div\r\n                  className=\"out-chat\"\r\n                  key={key}\r\n                  id={key == chat.body.length - 1 ? \"scrolltobottom\" : null}\r\n                >\r\n                  {cmpmsg(nap, array[key - 1]) != null ? (\r\n                    <p>{cmpmsg(nap, array[key - 1])}</p>\r\n                  ) : null}\r\n                  <div className=\"out-chatbox\">\r\n                    <p className=\"chatList\">\r\n                      {getorgnl(nap)}&nbsp;{\" \"}\r\n                      <small className=\"textTime\"> {getmsgtime(nap)}</small>\r\n                    </p>\r\n                  </div>\r\n\r\n                </div>\r\n              );\r\n            else if (nap[nap.length - 1] == \"p\")\r\n              return (\r\n                <div className=\"in-chat\">\r\n                  {cmpmsg(nap, array[key - 1]) != null ? (\r\n                    <p>{cmpmsg(nap, array[key - 1])}</p>\r\n                  ) : null}\r\n                  <div\r\n                    className=\"in-chatbox\"\r\n                    key={key}\r\n                    id={key == chat.body.length - 1 ? \"scrolltobottom\" : null}\r\n                  >\r\n                    <p className=\"chatListP\">\r\n                      {getorgnl(nap)}&nbsp;{\" \"}\r\n                      <small className=\"textTimep\"> {getmsgtime(nap)}</small>\r\n                    </p>\r\n                  </div>\r\n                </div>\r\n              );\r\n            else if (nap.slice(-2) == \"um\")\r\n              return (\r\n                <div\r\n                  className=\"out-chat\"\r\n                  key={key}\r\n                  id={key == chat.body.length - 1 ? \"scrolltobottom\" : null}\r\n                >\r\n                  {cmpmsg(nap, array[key - 1]) != null ? (\r\n                    <p>{cmpmsg(nap, array[key - 1])}</p>\r\n                  ) : null}\r\n                  <Image\r\n                    floated=\"right\"\r\n                    className=\"chatPic\"\r\n                    onClick={showimage}\r\n                    src={nap.slice(0, -2)}\r\n                    size=\"small\"\r\n                  />\r\n                  <p>\r\n                    <small className=\"textTime\">{getmsgtime(nap)}</small>\r\n                  </p>\r\n                  {key == chat.body.length - 1 ? (\r\n                    <p className=\"readText\">\r\n                      <small>{chat.pread ? \"read\" : \"unread\"}</small>\r\n                    </p>\r\n                  ) : null}\r\n                </div>\r\n              );\r\n            else if (nap.slice(-2) == \"pm\")\r\n              return (\r\n                <div\r\n                  className=\"in-chat\"\r\n                  key={key}\r\n                  id={key == chat.body.length - 1 ? \"scrolltobottom\" : null}\r\n                >\r\n                  {cmpmsg(nap, array[key - 1]) != null ? (\r\n                    <p>{cmpmsg(nap, array[key - 1])}</p>\r\n                  ) : null}\r\n                  <Image\r\n                    floated=\"left\"\r\n                    className=\"chatPic\"\r\n                    onClick={showimage}\r\n                    src={nap.slice(0, -2)}\r\n                    size=\"small\"\r\n                  />\r\n                  <p>\r\n                    <small className=\"textTime\">{getmsgtime(nap)}</small>\r\n                  </p>\r\n                </div>\r\n              );\r\n          })} */}\r\n          {JSON.parse(chat.body[chat.body.length - 1]).sender == \"u\" ? (\r\n            <div>\r\n              <p>\r\n                <small className=\"readText\">\r\n                  {chat.pread ? \"seen\" : \"unseen\"}\r\n                </small>\r\n              </p>\r\n            </div>\r\n          ) : null}\r\n          {scrollDisplay ? (\r\n            <a href=\"#scrolltobottom\" id=\"scrollbtn\">\r\n              <MdArrowDropDownCircle\r\n                size=\"3rem\"\r\n                style={{ position: \"fixed\", bottom: \"150px\", float: \"right\" }}\r\n              />\r\n            </a>\r\n          ) : (\r\n            <a href=\"#scrolltobottom\" id=\"scrollbtn\">\r\n              <MdArrowDropDownCircle\r\n                size=\"3rem\"\r\n                style={{\r\n                  position: \"fixed\",\r\n                  bottom: \"150px\",\r\n                  float: \"right\",\r\n                  display: \"none\",\r\n                }}\r\n              />\r\n            </a>\r\n          )}\r\n        </div>\r\n\r\n        <Form.Group\r\n          className=\"chat-form\"\r\n          onKeyDown={onKeyDownHandler}\r\n          style={{\r\n            position: \"fixed\",\r\n            bottom: \"2px\",\r\n            margin: \"0\",\r\n            backgroundColor: \"#f6f6f6\",\r\n            minHeight: \"50px\",\r\n          }}\r\n        >\r\n          <Row style={{ margin: \"0\", marginTop: \"20px\" }}>\r\n            <input\r\n              type=\"file\"\r\n              id={props.chat.id}\r\n              ref={inputFile}\r\n              accept=\"image/x-png,image/gif,image/jpeg\"\r\n              onChange={uploadmediatemp}\r\n              style={{ display: \"none\" }}\r\n              multiple\r\n            />\r\n\r\n            <Col xs={2}>\r\n              {\" \"}\r\n              <MdAddToPhotos\r\n                onClick={mediashare}\r\n                style={{ cursor: \"pointer\" }}\r\n                size=\"2rem\"\r\n                color=\"gray\"\r\n              />\r\n              <Dropdown text=\"More\" style={{ marginLeft: \"15px\" }}>\r\n                <Dropdown.Menu>\r\n                  <Dropdown.Item\r\n                    icon=\"address card\"\r\n                    text=\"Share your Contact Details\"\r\n                    onClick={sharemydet}\r\n                  />\r\n                  <Dropdown.Item icon=\"trash\" text=\"Move to trash\" />\r\n                  <Dropdown.Divider />\r\n                  <Dropdown.Item text=\"E-mail Collaborators\" />\r\n                </Dropdown.Menu>\r\n              </Dropdown>\r\n            </Col>\r\n            <Col xs={8} style={{ marginRight: \"0\" }}>\r\n              <Form.Control\r\n                type=\"text\"\r\n                //   style={{ height: \"100px\" }}\r\n                placeholder=\"Message Here\"\r\n                value={typemsg}\r\n                onChange={(e) => {\r\n                  settypemsg(e.target.value);\r\n                }}\r\n                id=\"msgtext\"\r\n              />\r\n              {/* <TextArea\r\n                style={{ minHeight: \"50px\", minWidth: \"300px\" }}\r\n                placeholder=\"Enter Message Here\"\r\n                onKeyDown={handleKeyDown}\r\n              /> */}\r\n            </Col>\r\n            <Col xs={2} style={{ marginRight: \"0\" }}>\r\n              <Button\r\n                primary\r\n                className=\"chatSend\"\r\n                id={props.chat.id}\r\n                ref={divRef}\r\n                onClick={(e) => click(props.chat.id)}\r\n              >\r\n                Sendw\r\n                <MdSend />\r\n              </Button>\r\n              {/* <MdSend size=\"2rem\" color=\"grey\" /> */}\r\n            </Col>\r\n            {/* <Button primary className=\"chatSend\" id={props.chat.id} ref={divRef} onClick={(e)=>tsend(e,props.chat.id)}>tSend<MdSend /></Button></Col> */}\r\n          </Row>\r\n        </Form.Group>\r\n        {/* <Imageviewer image={mimage} /> */}\r\n        <ImageModal\r\n          className=\"uploadModal\"\r\n          image={mimage}\r\n          setflag={setmimage}\r\n        />\r\n        <ImageModal2\r\n          image={tempimg}\r\n          flag={setupload}\r\n          setimage={settempimg}\r\n          addmore={mediashare}\r\n          removeitems={removeitems}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n\r\n  function cmpmsg(msg1, msg2) {\r\n    let temp1 = JSON.parse(msg1);\r\n    let temp2 = msg2 == undefined ? JSON.parse(msg1) : JSON.parse(msg2);\r\n\r\n    let ct = Number(temp1.timestamp);\r\n    let pt = Number(temp2.timestamp);\r\n    if (gettbystamps(ct, \"date\") != gettbystamps(pt, \"date\")) {\r\n      let temp = gettbystamps(ct, \"fulldate\");\r\n      return temp;\r\n    } else if (msg2 == undefined) {\r\n      let temp = gettbystamps(ct, \"fulldate\");\r\n      return temp;\r\n    } else return null;\r\n  }\r\n\r\n  function removeitems(data) {\r\n    console.log(data);\r\n    settempimg(data);\r\n  }\r\n}\r\nfunction getmsgtime(nap) {\r\n  // let stamps = countSpecial(nap);\r\n  let msgtime = gettbystamps(Number(nap), \"time\");\r\n  return msgtime;\r\n}\r\nfunction Headings() {\r\n  return (\r\n    <div className=\"resHead\">\r\n      <Row style={{ width: \"100%\", textAlign: \"center\" }}>\r\n        <Col>\r\n          <Link to=\"/chat\" style={{ color: \"gray\", textDecoration: \"none\" }}>\r\n            <h2>\r\n              <MdFeaturedPlayList size=\"2.1rem\" color=\"gray\" /> Responses\r\n            </h2>\r\n          </Link>\r\n        </Col>\r\n        <Col style={{ borderBottom: \"3px solid #007bff\", marginBottom: \"0\" }}>\r\n          <Link\r\n            to=\"/chats-section\"\r\n            style={{ color: \"#007bff\", textDecoration: \"none\" }}\r\n          >\r\n            <h2>\r\n              {\" \"}\r\n              <MdChatBubble size=\"2.1rem\" color=\"#007bff\" /> Chats\r\n            </h2>\r\n          </Link>\r\n        </Col>\r\n      </Row>\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction ImageModal(props) {\r\n  const [open, setOpen] = useState(false);\r\n  var image = props.image;\r\n  var setflag = props.setflag;\r\n\r\n  const handleInputChange = useCallback(\r\n    (event) => {\r\n      setflag(false);\r\n    },\r\n    [setflag]\r\n  );\r\n\r\n  const closemodal = () => {\r\n    handleInputChange();\r\n    setOpen(false);\r\n  };\r\n  useEffect(() => {\r\n    if (image != false && image != null) {\r\n      setOpen(true);\r\n    }\r\n    console.log(image);\r\n  }, [image]);\r\n\r\n  // function ValidURL(str) {\r\n  //   var regex = /(http|https):\\/\\/(\\w+:{0,1}\\w*)?(\\S+)(:[0-9]+)?(\\/|\\/([\\w#!:.?+=&%!\\-\\/]))?/;\r\n  //   if (!regex.test(str)) {\r\n  //     // alert(\"Please enter valid URL.\");\r\n  //     return false;\r\n  //   } else {\r\n  //     return true;\r\n  //   }\r\n  // }\r\n  return (\r\n    <Modal\r\n      basic\r\n      onClose={closemodal}\r\n      onOpen={() => setOpen(true)}\r\n      open={open}\r\n      // size=\"tiny\"\r\n      className=\"uploadModal\"\r\n      // trigger={<Button>Show Modal</Button>}\r\n    >\r\n      {/* <Modal.Header>Photo</Modal.Header> */}\r\n      {image != null ? (\r\n        <Modal.Content image>\r\n          {ValidURL(image) ? (\r\n            <Image centered src={image} wrapped />\r\n          ) : (\r\n            <Modal.Description>\r\n              <p>{image}</p>\r\n            </Modal.Description>\r\n          )}\r\n        </Modal.Content>\r\n      ) : null}\r\n      <Modal.Actions>\r\n        <Button basic color=\"red\" inverted onClick={closemodal}>\r\n          <MdClose /> Close\r\n        </Button>\r\n      </Modal.Actions>\r\n    </Modal>\r\n  );\r\n}\r\n\r\nfunction ImageModal2(props) {\r\n  const [open, setOpen] = useState(false);\r\n  const [image, setimage] = useState([]);\r\n\r\n  useEffect(() => {\r\n    setimage(props.image);\r\n    console.log(\"images change\");\r\n  }, [props.image]);\r\n\r\n  useEffect(() => {\r\n    if (image.length > 0) setOpen(true);\r\n    if (image.length <= 0) setOpen(false);\r\n    console.log(image);\r\n  }, [image]);\r\n\r\n  const handleInputChange = useCallback(\r\n    (event) => {\r\n      props.flag(true);\r\n      setOpen(false);\r\n    },\r\n    [props.flag]\r\n  );\r\n\r\n  const sekhararr = (e) => {\r\n    console.log(e.target.parentElement.parentElement.id);\r\n    let ritem = image[e.target.parentElement.parentElement.id];\r\n\r\n    props.setimage(image.filter((e) => e !== ritem));\r\n  };\r\n  return (\r\n    <Modal\r\n      basic\r\n      onClose={() => setOpen(false)}\r\n      onOpen={() => setOpen(true)}\r\n      open={open}\r\n      centered\r\n      size=\"tiny\"\r\n      className=\"uploadModal\"\r\n      // trigger={<Button>Show Modal</Button>}\r\n    >\r\n      <Modal.Header>Upload image</Modal.Header>\r\n      <Modal.Content scrolling>\r\n        {image.length > 0 ? (\r\n          <Image.Group size=\"small\">\r\n            {image.map((nap, key) => (\r\n              <Image\r\n                key={key}\r\n                id={key}\r\n                label={{\r\n                  as: \"a\",\r\n                  corner: \"right\",\r\n                  icon: \"trash\",\r\n                  onClick: sekhararr,\r\n                }}\r\n                src={URL.createObjectURL(nap)}\r\n              />\r\n            ))}\r\n            <RiImageAddFill\r\n              onClick={props.addmore}\r\n              color=\"gray\"\r\n              style={{ cursor: \"pointer\" }}\r\n            />\r\n          </Image.Group>\r\n        ) : null}\r\n      </Modal.Content>\r\n\r\n      <Modal.Actions>\r\n        <Button\r\n          onClick={() => {\r\n            setOpen(false);\r\n          }}\r\n        >\r\n          Cancel\r\n        </Button>\r\n        <Button onClick={handleInputChange} positive>\r\n          Send\r\n        </Button>\r\n      </Modal.Actions>\r\n    </Modal>\r\n  );\r\n}\r\n\r\nfunction Empty() {\r\n  return <div></div>;\r\n}\r\n","D:\\sekhar\\firstapp\\firstapp\\src\\firebase.js",["443"],"import firebase from 'firebase';\r\nimport firestore from 'firebase/firestore'\r\n\r\nconst settings = {timestampsInSnapshots: true};\r\nconst firebaseConfig = {\r\n    apiKey: \"AIzaSyDUAqHmXwTZU1caOWJ-LC-dBl3R7uzOkPo\",\r\n    authDomain: \"spotmiess.firebaseapp.com\",\r\n    databaseURL: \"https://spotmiess.firebaseio.com\",\r\n    projectId: \"spotmiess\",\r\n    storageBucket: \"spotmiess.appspot.com\",\r\n    messagingSenderId: \"277034750528\",\r\n    appId: \"1:277034750528:web:9ff791aa208640225b45a5\",\r\n    measurementId: \"G-CB9E1ZNL3C\"\r\n  };\r\n  firebase.initializeApp(firebaseConfig);\r\n\r\nfirebase.firestore().settings(settings);\r\n\r\nexport default firebase;\r\n\r\n// import  firebase from \"firebase\";\r\n// import \"firebase/firestore\";\r\n\r\n// let config = {\r\n//   apiKey: \"xxx\",\r\n//   authDomain: \"bezkoder-firebase.firebaseapp.com\",\r\n//   databaseURL: \"https://bezkoder-firebase.firebaseio.com\",\r\n//   projectId: \"bezkoder-firebase\",\r\n//   storageBucket: \"bezkoder-firebase.appspot.com\",\r\n//   messagingSenderId: \"xxx\",\r\n//   appId: \"xxx\",\r\n// };\r\n\r\n// firebase.initializeApp(config);\r\n\r\n// export default firebase.firestore();","D:\\sekhar\\firstapp\\firstapp\\src\\components\\usertext.js",[],"D:\\sekhar\\firstapp\\firstapp\\src\\mservices\\contactUs.js",[],"D:\\sekhar\\firstapp\\firstapp\\src\\components\\reusable\\categories.js",[],"D:\\sekhar\\firstapp\\firstapp\\src\\mservices\\dateconv.js",["444","445","446","447","448","449","450","451","452","453","454","455","456","457","458","459","460"],"function lastMessage(msg) {\r\n  if (msg.slice(msg.length - 1) == \"u\" || msg.slice(msg.length - 1) == \"um\") {\r\n    return true;\r\n  } else {\r\n    return false;\r\n  }\r\n}\r\n\r\nfunction gettbystamps(stamps, id) {\r\n  const monthNames = [\r\n    \"Jan\",\r\n    \"Feb\",\r\n    \"March\",\r\n    \"April\",\r\n    \"May\",\r\n    \"June\",\r\n    \"July\",\r\n    \"Aug\",\r\n    \"Sep\",\r\n    \"Oct\",\r\n    \"Nov\",\r\n    \"Dec\",\r\n  ];\r\n\r\n  const dayName = [\"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\"];\r\n\r\n  //today\r\n  let today = new Date();\r\n  let tday = today.getDay(); //return day sun=0;mon=1...\r\n  let tthedate = today.getDate(); //returns date 1,2,3,4..\r\n  let tmonth = today.getMonth();\r\n\r\n  let yesterday = today;\r\n  yesterday.setDate(yesterday.getDate() - 1);\r\n  let yday = yesterday.getDay(); //return day sun=0;mon=1...\r\n  let ythedate = yesterday.getDate(); //returns date 1,2,3,4..\r\n  let ymonth = yesterday.getMonth();\r\n\r\n  let date = new Date(stamps * 1000);\r\n  let year = date.getFullYear();\r\n  let month = date.getMonth();\r\n  let thedate = date.getDate();\r\n  let day = date.getDay();\r\n  let hours = date.getHours();\r\n  let minutes = date.getMinutes();\r\n\r\n  const formatAMPM = (date) => {\r\n    // var hours = date.getHours();\r\n    // var minutes = date.getMinutes();\r\n    var ampm = hours >= 12 ? \"pm\" : \"am\";\r\n    hours = hours % 12;\r\n    hours = hours ? hours : 12; // the hour '0' should be '12'\r\n    minutes = minutes < 10 ? \"0\" + minutes : minutes;\r\n    var strTime = hours + \":\" + minutes + \" \" + ampm;\r\n    return strTime;\r\n  };\r\n\r\n  const fullDate = () => {\r\n    let temp = dayName[day] + \" \" + thedate + \" \" + monthNames[month];\r\n    let temp2 = dayName[tday] + \" \" + tthedate + \" \" + monthNames[tmonth];\r\n    let temp3 = dayName[yday] + \" \" + ythedate + \" \" + monthNames[ymonth];\r\n    if (temp == temp2) return \"today\";\r\n    else if (temp == temp3) return \"yesterday\";\r\n    else return temp;\r\n  };\r\n\r\n  switch (id) {\r\n    case \"strmonth\":\r\n      return monthNames[month];\r\n      break;\r\n\r\n    case \"strday\":\r\n      return dayName[day];\r\n      break;\r\n    case \"date\":\r\n      return thedate;\r\n      break;\r\n    case \"strmonth\":\r\n      return dayName[day];\r\n      break;\r\n\r\n    case \"hours\":\r\n      return hours;\r\n      break;\r\n    case \"minutes\":\r\n      return minutes;\r\n      break;\r\n    case \"time\":\r\n      return formatAMPM();\r\n      break;\r\n    case \"fulldate\":\r\n      return fullDate();\r\n      break;\r\n    default:\r\n      return \"invalid id\";\r\n      break;\r\n  }\r\n}\r\nfunction countSpecial(str) {\r\n  const punct = \"`\";\r\n  let count = 0;\r\n  let position = [];\r\n  for (let i = 0; i < str.length; i++) {\r\n    if (!punct.includes(str[i])) {\r\n      continue;\r\n    }\r\n    count++;\r\n    position.push(i);\r\n  }\r\n  return position;\r\n}\r\nfunction getorgnl(msg) {\r\n  let temp = countSpecial(msg);\r\n  let temp2 = msg.slice(0, temp[temp.length - 2]);\r\n  return temp2;\r\n}\r\nfunction getstamp(raw) {\r\n  let temp = countSpecial(raw);\r\n  let findex = temp[temp.length - 2] + 1;\r\n  let temp2 = raw.substring(findex, temp[temp.length - 1]);\r\n  return temp2;\r\n}\r\n\r\nfunction ValidURL(str) {\r\n  var regex = /(http|https):\\/\\/(\\w+:{0,1}\\w*)?(\\S+)(:[0-9]+)?(\\/|\\/([\\w#!:.?+=&%!\\-\\/]))?/;\r\n  if (!regex.test(str)) {\r\n    // alert(\"Please enter valid URL.\");\r\n    return false;\r\n  } else {\r\n    return true;\r\n  }\r\n}\r\n\r\nexport { gettbystamps, getorgnl, getstamp, lastMessage, ValidURL };\r\n","D:\\sekhar\\firstapp\\firstapp\\src\\components\\reusable\\msgdot.js",[],"D:\\sekhar\\firstapp\\firstapp\\src\\mservices\\upldmedia.js",["461","462"],"import firebase from '../firebase';\r\nimport 'firebase/storage';\r\nconst storage = firebase.storage();\r\nconst db=firebase.firestore();\r\n\r\nasync function handleUpload(mfile){\r\n      \r\n let image=mfile;\r\n var surl=\"null\";\r\n        console.log(image.length)\r\n        for(var i=0;i<image.length;i++){\r\n          let k=Number(i)\r\n       const uploadTask = storage.ref(`users/${firebase.auth().currentUser.uid}/chat/${image[k].name}`).put(image[k]);\r\n      let upldtask= uploadTask.on(\"state_changed\",snapshot => {},\r\n         error => {\r\n           console.log(error);\r\n         },\r\n         () => {\r\n           storage\r\n             .ref(`users/${firebase.auth().currentUser.uid}/chat/`)\r\n             .child(image[k].name)\r\n             .getDownloadURL()\r\n             .then(url => {\r\n               //console.log(url)\r\n               console.log(\"image uploaded\")\r\n                surl=url;\r\n                return url;\r\n \r\n             });\r\n         }\r\n       )\r\n        }\r\n        \r\n        return surl;\r\n     }\r\n\r\n     function temp(){\r\n         return null\r\n     }\r\n\r\n\r\n     async function getlink(image){\r\n       try{\r\n        let urll= await  storage.ref(`users/${firebase.auth().currentUser.uid}/chat/`).child(image[image.length-1].name)\r\n        .getDownloadURL()\r\n        .then(url => {\r\n  \r\n           return url;\r\n  \r\n        });\r\n    return urll;\r\n       }\r\n       catch{\r\n        return null\r\n       }\r\n\r\n     }\r\n\r\nasync function getpdetailsbyid(id){\r\n  let data;\r\n await db.collection(\"partner\").doc(id).collection(\"ProfileInfo\").doc(id).get().then(snap=>{\r\n   console.log(snap.data());\r\n   data=snap.data();\r\n });\r\n console.log(\"data fetched\")\r\n return data;\r\n\r\n}     \r\nasync function disablechat(id){\r\n  let status;\r\n  try{\r\n   await db.collection(\"messaging\").doc(id).update({\r\n     chatbuild:false\r\n   })\r\n    .then(()=>{status=200})\r\n    .catch((e)=>\r\n    {\r\n      console.log(e)\r\n      status=100;\r\n    })\r\n  }\r\n  catch{\r\n    status=404\r\n  }\r\n  return status;\r\n}\r\n\r\n\r\n\r\n\r\nexport {handleUpload,temp,getlink,getpdetailsbyid,disablechat}","D:\\sekhar\\firstapp\\firstapp\\src\\components\\partnerText.js",["463","464","465","466","467","468"],"D:\\sekhar\\firstapp\\firstapp\\src\\components\\reusable\\Modal.jsx",["469","470","471","472","473"],"D:\\sekhar\\firstapp\\firstapp\\src\\mservices\\userDB.js",[],"D:\\sekhar\\firstapp\\firstapp\\src\\components\\privacy.jsx",[],"D:\\sekhar\\firstapp\\firstapp\\src\\hooks\\useWindowsize.jsx",[],["474","475"],"D:\\sekhar\\firstapp\\firstapp\\src\\components\\txtRotate.js",[],{"ruleId":"476","replacedBy":"477"},{"ruleId":"478","replacedBy":"479"},{"ruleId":"480","severity":1,"message":"481","line":10,"column":6,"nodeType":"482","endLine":10,"endColumn":8,"suggestions":"483"},{"ruleId":"484","severity":1,"message":"485","line":36,"column":5,"nodeType":"486","messageId":"487","endLine":36,"endColumn":12},{"ruleId":"484","severity":1,"message":"488","line":58,"column":9,"nodeType":"486","messageId":"487","endLine":58,"endColumn":11},{"ruleId":"484","severity":1,"message":"489","line":59,"column":10,"nodeType":"486","messageId":"487","endLine":59,"endColumn":18},{"ruleId":"484","severity":1,"message":"490","line":60,"column":20,"nodeType":"486","messageId":"487","endLine":60,"endColumn":31},{"ruleId":"484","severity":1,"message":"491","line":76,"column":11,"nodeType":"486","messageId":"487","endLine":76,"endColumn":18},{"ruleId":"484","severity":1,"message":"492","line":80,"column":11,"nodeType":"486","messageId":"487","endLine":80,"endColumn":23},{"ruleId":"480","severity":1,"message":"493","line":143,"column":6,"nodeType":"482","endLine":143,"endColumn":8,"suggestions":"494"},{"ruleId":"495","severity":1,"message":"496","line":152,"column":17,"nodeType":"497","endLine":152,"endColumn":42},{"ruleId":"498","severity":1,"message":"499","line":161,"column":38,"nodeType":"500","messageId":"501","endLine":161,"endColumn":40},{"ruleId":"502","severity":1,"message":"503","line":236,"column":13,"nodeType":"497","endLine":236,"endColumn":80},{"ruleId":"498","severity":1,"message":"499","line":250,"column":24,"nodeType":"500","messageId":"501","endLine":250,"endColumn":26},{"ruleId":"495","severity":1,"message":"496","line":255,"column":23,"nodeType":"497","endLine":255,"endColumn":48},{"ruleId":"495","severity":1,"message":"496","line":319,"column":23,"nodeType":"497","endLine":319,"endColumn":48},{"ruleId":"502","severity":1,"message":"503","line":379,"column":15,"nodeType":"497","endLine":379,"endColumn":18},{"ruleId":"502","severity":1,"message":"503","line":395,"column":13,"nodeType":"497","endLine":395,"endColumn":80},{"ruleId":"498","severity":1,"message":"499","line":419,"column":15,"nodeType":"500","messageId":"501","endLine":419,"endColumn":17},{"ruleId":"480","severity":1,"message":"504","line":424,"column":6,"nodeType":"482","endLine":424,"endColumn":13,"suggestions":"505"},{"ruleId":"480","severity":1,"message":"506","line":426,"column":19,"nodeType":"486","endLine":426,"endColumn":30},{"ruleId":"498","severity":1,"message":"507","line":438,"column":15,"nodeType":"500","messageId":"501","endLine":438,"endColumn":17},{"ruleId":"498","severity":1,"message":"499","line":456,"column":18,"nodeType":"500","messageId":"501","endLine":456,"endColumn":20},{"ruleId":"498","severity":1,"message":"499","line":462,"column":16,"nodeType":"500","messageId":"501","endLine":462,"endColumn":18},{"ruleId":"498","severity":1,"message":"499","line":490,"column":18,"nodeType":"500","messageId":"501","endLine":490,"endColumn":20},{"ruleId":"498","severity":1,"message":"499","line":496,"column":33,"nodeType":"500","messageId":"501","endLine":496,"endColumn":35},{"ruleId":"498","severity":1,"message":"499","line":505,"column":33,"nodeType":"500","messageId":"501","endLine":505,"endColumn":35},{"ruleId":"498","severity":1,"message":"499","line":514,"column":33,"nodeType":"500","messageId":"501","endLine":514,"endColumn":35},{"ruleId":"498","severity":1,"message":"499","line":525,"column":18,"nodeType":"500","messageId":"501","endLine":525,"endColumn":20},{"ruleId":"498","severity":1,"message":"499","line":531,"column":33,"nodeType":"500","messageId":"501","endLine":531,"endColumn":35},{"ruleId":"498","severity":1,"message":"499","line":540,"column":33,"nodeType":"500","messageId":"501","endLine":540,"endColumn":35},{"ruleId":"498","severity":1,"message":"499","line":549,"column":33,"nodeType":"500","messageId":"501","endLine":549,"endColumn":35},{"ruleId":"498","severity":1,"message":"499","line":558,"column":33,"nodeType":"500","messageId":"501","endLine":558,"endColumn":35},{"ruleId":"498","severity":1,"message":"499","line":569,"column":18,"nodeType":"500","messageId":"501","endLine":569,"endColumn":20},{"ruleId":"498","severity":1,"message":"499","line":575,"column":33,"nodeType":"500","messageId":"501","endLine":575,"endColumn":35},{"ruleId":"498","severity":1,"message":"499","line":584,"column":33,"nodeType":"500","messageId":"501","endLine":584,"endColumn":35},{"ruleId":"498","severity":1,"message":"499","line":593,"column":33,"nodeType":"500","messageId":"501","endLine":593,"endColumn":35},{"ruleId":"498","severity":1,"message":"499","line":602,"column":33,"nodeType":"500","messageId":"501","endLine":602,"endColumn":35},{"ruleId":"498","severity":1,"message":"499","line":613,"column":18,"nodeType":"500","messageId":"501","endLine":613,"endColumn":20},{"ruleId":"498","severity":1,"message":"499","line":619,"column":33,"nodeType":"500","messageId":"501","endLine":619,"endColumn":35},{"ruleId":"498","severity":1,"message":"499","line":628,"column":33,"nodeType":"500","messageId":"501","endLine":628,"endColumn":35},{"ruleId":"498","severity":1,"message":"499","line":639,"column":18,"nodeType":"500","messageId":"501","endLine":639,"endColumn":20},{"ruleId":"498","severity":1,"message":"499","line":659,"column":18,"nodeType":"500","messageId":"501","endLine":659,"endColumn":20},{"ruleId":"484","severity":1,"message":"508","line":1,"column":17,"nodeType":"486","messageId":"487","endLine":1,"endColumn":26},{"ruleId":"484","severity":1,"message":"509","line":8,"column":3,"nodeType":"486","messageId":"487","endLine":8,"endColumn":8},{"ruleId":"484","severity":1,"message":"510","line":15,"column":8,"nodeType":"486","messageId":"487","endLine":15,"endColumn":13},{"ruleId":"484","severity":1,"message":"511","line":19,"column":3,"nodeType":"486","messageId":"487","endLine":19,"endColumn":11},{"ruleId":"484","severity":1,"message":"512","line":21,"column":3,"nodeType":"486","messageId":"487","endLine":21,"endColumn":15},{"ruleId":"484","severity":1,"message":"513","line":32,"column":10,"nodeType":"486","messageId":"487","endLine":32,"endColumn":20},{"ruleId":"484","severity":1,"message":"514","line":34,"column":10,"nodeType":"486","messageId":"487","endLine":34,"endColumn":25},{"ruleId":"484","severity":1,"message":"515","line":35,"column":10,"nodeType":"486","messageId":"487","endLine":35,"endColumn":17},{"ruleId":"484","severity":1,"message":"516","line":75,"column":21,"nodeType":"486","messageId":"487","endLine":75,"endColumn":29},{"ruleId":"498","severity":1,"message":"507","line":194,"column":45,"nodeType":"500","messageId":"501","endLine":194,"endColumn":47},{"ruleId":"498","severity":1,"message":"499","line":206,"column":42,"nodeType":"500","messageId":"501","endLine":206,"endColumn":44},{"ruleId":"498","severity":1,"message":"499","line":287,"column":36,"nodeType":"500","messageId":"501","endLine":287,"endColumn":38},{"ruleId":"498","severity":1,"message":"499","line":307,"column":36,"nodeType":"500","messageId":"501","endLine":307,"endColumn":38},{"ruleId":"498","severity":1,"message":"507","line":323,"column":34,"nodeType":"500","messageId":"501","endLine":323,"endColumn":36},{"ruleId":"498","severity":1,"message":"499","line":329,"column":29,"nodeType":"500","messageId":"501","endLine":329,"endColumn":31},{"ruleId":"502","severity":1,"message":"503","line":337,"column":15,"nodeType":"497","endLine":337,"endColumn":59},{"ruleId":"502","severity":1,"message":"503","line":341,"column":15,"nodeType":"497","endLine":341,"endColumn":61},{"ruleId":"498","severity":1,"message":"499","line":344,"column":36,"nodeType":"500","messageId":"501","endLine":344,"endColumn":38},{"ruleId":"480","severity":1,"message":"517","line":460,"column":6,"nodeType":"482","endLine":460,"endColumn":8,"suggestions":"518"},{"ruleId":"495","severity":1,"message":"496","line":479,"column":11,"nodeType":"497","endLine":482,"endColumn":13},{"ruleId":"502","severity":1,"message":"503","line":525,"column":11,"nodeType":"497","endLine":525,"endColumn":41},{"ruleId":"484","severity":1,"message":"508","line":1,"column":17,"nodeType":"486","messageId":"487","endLine":1,"endColumn":26},{"ruleId":"484","severity":1,"message":"510","line":3,"column":8,"nodeType":"486","messageId":"487","endLine":3,"endColumn":13},{"ruleId":"484","severity":1,"message":"519","line":5,"column":10,"nodeType":"486","messageId":"487","endLine":5,"endColumn":13},{"ruleId":"484","severity":1,"message":"520","line":5,"column":15,"nodeType":"486","messageId":"487","endLine":5,"endColumn":18},{"ruleId":"484","severity":1,"message":"521","line":26,"column":10,"nodeType":"486","messageId":"487","endLine":26,"endColumn":21},{"ruleId":"484","severity":1,"message":"511","line":31,"column":10,"nodeType":"486","messageId":"487","endLine":31,"endColumn":18},{"ruleId":"484","severity":1,"message":"522","line":31,"column":35,"nodeType":"486","messageId":"487","endLine":31,"endColumn":49},{"ruleId":"484","severity":1,"message":"513","line":32,"column":10,"nodeType":"486","messageId":"487","endLine":32,"endColumn":20},{"ruleId":"484","severity":1,"message":"523","line":33,"column":10,"nodeType":"486","messageId":"487","endLine":33,"endColumn":26},{"ruleId":"484","severity":1,"message":"524","line":75,"column":9,"nodeType":"486","messageId":"487","endLine":75,"endColumn":14},{"ruleId":"484","severity":1,"message":"525","line":80,"column":9,"nodeType":"486","messageId":"487","endLine":80,"endColumn":13},{"ruleId":"484","severity":1,"message":"526","line":84,"column":9,"nodeType":"486","messageId":"487","endLine":84,"endColumn":16},{"ruleId":"498","severity":1,"message":"499","line":97,"column":26,"nodeType":"500","messageId":"501","endLine":97,"endColumn":28},{"ruleId":"498","severity":1,"message":"507","line":224,"column":38,"nodeType":"500","messageId":"501","endLine":224,"endColumn":40},{"ruleId":"498","severity":1,"message":"499","line":248,"column":31,"nodeType":"500","messageId":"501","endLine":248,"endColumn":33},{"ruleId":"484","severity":1,"message":"527","line":2,"column":8,"nodeType":"486","messageId":"487","endLine":2,"endColumn":11},{"ruleId":"484","severity":1,"message":"528","line":4,"column":10,"nodeType":"486","messageId":"487","endLine":4,"endColumn":18},{"ruleId":"484","severity":1,"message":"529","line":4,"column":20,"nodeType":"486","messageId":"487","endLine":4,"endColumn":29},{"ruleId":"484","severity":1,"message":"509","line":6,"column":22,"nodeType":"486","messageId":"487","endLine":6,"endColumn":27},{"ruleId":"484","severity":1,"message":"530","line":8,"column":10,"nodeType":"486","messageId":"487","endLine":8,"endColumn":20},{"ruleId":"498","severity":1,"message":"499","line":46,"column":33,"nodeType":"500","messageId":"501","endLine":46,"endColumn":35},{"ruleId":"495","severity":1,"message":"496","line":186,"column":15,"nodeType":"497","endLine":186,"endColumn":71},{"ruleId":"502","severity":1,"message":"503","line":215,"column":15,"nodeType":"497","endLine":215,"endColumn":18},{"ruleId":"502","severity":1,"message":"503","line":230,"column":15,"nodeType":"497","endLine":230,"endColumn":71},{"ruleId":"498","severity":1,"message":"499","line":339,"column":11,"nodeType":"500","messageId":"501","endLine":339,"endColumn":13},{"ruleId":"484","severity":1,"message":"531","line":32,"column":3,"nodeType":"486","messageId":"487","endLine":32,"endColumn":15},{"ruleId":"484","severity":1,"message":"532","line":80,"column":5,"nodeType":"486","messageId":"487","endLine":80,"endColumn":8},{"ruleId":"498","severity":1,"message":"499","line":117,"column":35,"nodeType":"500","messageId":"501","endLine":117,"endColumn":37},{"ruleId":"533","severity":1,"message":"534","line":132,"column":9,"nodeType":"500","messageId":"535","endLine":132,"endColumn":20},{"ruleId":"498","severity":1,"message":"499","line":132,"column":14,"nodeType":"500","messageId":"501","endLine":132,"endColumn":16},{"ruleId":"498","severity":1,"message":"499","line":133,"column":13,"nodeType":"500","messageId":"501","endLine":133,"endColumn":15},{"ruleId":"536","severity":1,"message":"537","line":205,"column":15,"nodeType":"538","messageId":"539","endLine":212,"endColumn":10},{"ruleId":"498","severity":1,"message":"499","line":283,"column":14,"nodeType":"500","messageId":"501","endLine":283,"endColumn":16},{"ruleId":"484","severity":1,"message":"540","line":288,"column":13,"nodeType":"486","messageId":"487","endLine":288,"endColumn":18},{"ruleId":"484","severity":1,"message":"541","line":435,"column":7,"nodeType":"486","messageId":"487","endLine":435,"endColumn":13},{"ruleId":"484","severity":1,"message":"508","line":1,"column":17,"nodeType":"486","messageId":"487","endLine":1,"endColumn":26},{"ruleId":"484","severity":1,"message":"542","line":12,"column":3,"nodeType":"486","messageId":"487","endLine":12,"endColumn":9},{"ruleId":"484","severity":1,"message":"543","line":33,"column":10,"nodeType":"486","messageId":"487","endLine":33,"endColumn":23},{"ruleId":"484","severity":1,"message":"544","line":55,"column":10,"nodeType":"486","messageId":"487","endLine":55,"endColumn":15},{"ruleId":"484","severity":1,"message":"545","line":62,"column":9,"nodeType":"486","messageId":"487","endLine":62,"endColumn":14},{"ruleId":"484","severity":1,"message":"546","line":106,"column":11,"nodeType":"486","messageId":"487","endLine":106,"endColumn":19},{"ruleId":"484","severity":1,"message":"516","line":106,"column":21,"nodeType":"486","messageId":"487","endLine":106,"endColumn":29},{"ruleId":"498","severity":1,"message":"499","line":138,"column":29,"nodeType":"500","messageId":"501","endLine":138,"endColumn":31},{"ruleId":"484","severity":1,"message":"547","line":145,"column":12,"nodeType":"486","messageId":"487","endLine":145,"endColumn":24},{"ruleId":"533","severity":1,"message":"534","line":159,"column":9,"nodeType":"500","messageId":"535","endLine":159,"endColumn":20},{"ruleId":"498","severity":1,"message":"499","line":159,"column":14,"nodeType":"500","messageId":"501","endLine":159,"endColumn":16},{"ruleId":"498","severity":1,"message":"499","line":160,"column":13,"nodeType":"500","messageId":"501","endLine":160,"endColumn":15},{"ruleId":"536","severity":1,"message":"548","line":219,"column":15,"nodeType":"538","messageId":"539","endLine":225,"endColumn":10},{"ruleId":"498","severity":1,"message":"499","line":233,"column":27,"nodeType":"500","messageId":"501","endLine":233,"endColumn":29},{"ruleId":"480","severity":1,"message":"549","line":239,"column":6,"nodeType":"482","endLine":239,"endColumn":16,"suggestions":"550"},{"ruleId":"484","severity":1,"message":"551","line":311,"column":9,"nodeType":"486","messageId":"487","endLine":311,"endColumn":20},{"ruleId":"484","severity":1,"message":"541","line":459,"column":7,"nodeType":"486","messageId":"487","endLine":459,"endColumn":13},{"ruleId":"484","severity":1,"message":"552","line":2,"column":10,"nodeType":"486","messageId":"487","endLine":2,"endColumn":14},{"ruleId":"484","severity":1,"message":"553","line":17,"column":10,"nodeType":"486","messageId":"487","endLine":17,"endColumn":28},{"ruleId":"498","severity":1,"message":"499","line":131,"column":17,"nodeType":"500","messageId":"501","endLine":131,"endColumn":19},{"ruleId":"484","severity":1,"message":"508","line":1,"column":16,"nodeType":"486","messageId":"487","endLine":1,"endColumn":25},{"ruleId":"484","severity":1,"message":"554","line":4,"column":9,"nodeType":"486","messageId":"487","endLine":4,"endColumn":17},{"ruleId":"484","severity":1,"message":"509","line":5,"column":22,"nodeType":"486","messageId":"487","endLine":5,"endColumn":27},{"ruleId":"484","severity":1,"message":"555","line":5,"column":37,"nodeType":"486","messageId":"487","endLine":5,"endColumn":42},{"ruleId":"484","severity":1,"message":"556","line":5,"column":43,"nodeType":"486","messageId":"487","endLine":5,"endColumn":47},{"ruleId":"484","severity":1,"message":"557","line":5,"column":48,"nodeType":"486","messageId":"487","endLine":5,"endColumn":54},{"ruleId":"484","severity":1,"message":"558","line":5,"column":55,"nodeType":"486","messageId":"487","endLine":5,"endColumn":61},{"ruleId":"484","severity":1,"message":"510","line":6,"column":8,"nodeType":"486","messageId":"487","endLine":6,"endColumn":13},{"ruleId":"484","severity":1,"message":"511","line":7,"column":9,"nodeType":"486","messageId":"487","endLine":7,"endColumn":17},{"ruleId":"484","severity":1,"message":"559","line":7,"column":18,"nodeType":"486","messageId":"487","endLine":7,"endColumn":30},{"ruleId":"484","severity":1,"message":"512","line":7,"column":31,"nodeType":"486","messageId":"487","endLine":7,"endColumn":43},{"ruleId":"484","severity":1,"message":"560","line":7,"column":44,"nodeType":"486","messageId":"487","endLine":7,"endColumn":56},{"ruleId":"484","severity":1,"message":"561","line":7,"column":57,"nodeType":"486","messageId":"487","endLine":7,"endColumn":70},{"ruleId":"484","severity":1,"message":"562","line":7,"column":71,"nodeType":"486","messageId":"487","endLine":7,"endColumn":91},{"ruleId":"484","severity":1,"message":"563","line":7,"column":92,"nodeType":"486","messageId":"487","endLine":7,"endColumn":99},{"ruleId":"484","severity":1,"message":"564","line":7,"column":100,"nodeType":"486","messageId":"487","endLine":7,"endColumn":111},{"ruleId":"484","severity":1,"message":"513","line":8,"column":9,"nodeType":"486","messageId":"487","endLine":8,"endColumn":19},{"ruleId":"484","severity":1,"message":"515","line":9,"column":9,"nodeType":"486","messageId":"487","endLine":9,"endColumn":16},{"ruleId":"484","severity":1,"message":"530","line":10,"column":10,"nodeType":"486","messageId":"487","endLine":10,"endColumn":20},{"ruleId":"480","severity":1,"message":"517","line":33,"column":8,"nodeType":"482","endLine":33,"endColumn":10,"suggestions":"565"},{"ruleId":"495","severity":1,"message":"496","line":44,"column":5,"nodeType":"497","endLine":44,"endColumn":91},{"ruleId":"502","severity":1,"message":"503","line":74,"column":5,"nodeType":"497","endLine":74,"endColumn":32},{"ruleId":"484","severity":1,"message":"556","line":10,"column":3,"nodeType":"486","messageId":"487","endLine":10,"endColumn":7},{"ruleId":"484","severity":1,"message":"566","line":11,"column":3,"nodeType":"486","messageId":"487","endLine":11,"endColumn":7},{"ruleId":"484","severity":1,"message":"520","line":19,"column":10,"nodeType":"486","messageId":"487","endLine":19,"endColumn":13},{"ruleId":"484","severity":1,"message":"519","line":19,"column":15,"nodeType":"486","messageId":"487","endLine":19,"endColumn":18},{"ruleId":"484","severity":1,"message":"567","line":27,"column":10,"nodeType":"486","messageId":"487","endLine":27,"endColumn":15},{"ruleId":"484","severity":1,"message":"568","line":69,"column":10,"nodeType":"486","messageId":"487","endLine":69,"endColumn":16},{"ruleId":"498","severity":1,"message":"499","line":77,"column":14,"nodeType":"500","messageId":"501","endLine":77,"endColumn":16},{"ruleId":"484","severity":1,"message":"569","line":175,"column":12,"nodeType":"486","messageId":"487","endLine":175,"endColumn":18},{"ruleId":"484","severity":1,"message":"570","line":269,"column":10,"nodeType":"486","messageId":"487","endLine":269,"endColumn":17},{"ruleId":"498","severity":1,"message":"499","line":387,"column":27,"nodeType":"500","messageId":"501","endLine":387,"endColumn":29},{"ruleId":"502","severity":1,"message":"503","line":449,"column":25,"nodeType":"497","endLine":449,"endColumn":28},{"ruleId":"502","severity":1,"message":"503","line":455,"column":25,"nodeType":"497","endLine":455,"endColumn":28},{"ruleId":"502","severity":1,"message":"503","line":462,"column":25,"nodeType":"497","endLine":462,"endColumn":28},{"ruleId":"502","severity":1,"message":"503","line":469,"column":25,"nodeType":"497","endLine":469,"endColumn":28},{"ruleId":"502","severity":1,"message":"503","line":518,"column":25,"nodeType":"497","endLine":518,"endColumn":28},{"ruleId":"502","severity":1,"message":"503","line":524,"column":25,"nodeType":"497","endLine":524,"endColumn":28},{"ruleId":"502","severity":1,"message":"503","line":531,"column":25,"nodeType":"497","endLine":531,"endColumn":28},{"ruleId":"502","severity":1,"message":"503","line":538,"column":25,"nodeType":"497","endLine":538,"endColumn":28},{"ruleId":"502","severity":1,"message":"503","line":587,"column":25,"nodeType":"497","endLine":587,"endColumn":28},{"ruleId":"502","severity":1,"message":"503","line":593,"column":25,"nodeType":"497","endLine":593,"endColumn":28},{"ruleId":"502","severity":1,"message":"503","line":600,"column":25,"nodeType":"497","endLine":600,"endColumn":28},{"ruleId":"502","severity":1,"message":"503","line":607,"column":25,"nodeType":"497","endLine":607,"endColumn":28},{"ruleId":"502","severity":1,"message":"503","line":656,"column":25,"nodeType":"497","endLine":656,"endColumn":28},{"ruleId":"502","severity":1,"message":"503","line":662,"column":25,"nodeType":"497","endLine":662,"endColumn":28},{"ruleId":"502","severity":1,"message":"503","line":669,"column":25,"nodeType":"497","endLine":669,"endColumn":28},{"ruleId":"502","severity":1,"message":"503","line":676,"column":25,"nodeType":"497","endLine":676,"endColumn":28},{"ruleId":"502","severity":1,"message":"503","line":725,"column":25,"nodeType":"497","endLine":725,"endColumn":28},{"ruleId":"502","severity":1,"message":"503","line":731,"column":25,"nodeType":"497","endLine":731,"endColumn":28},{"ruleId":"502","severity":1,"message":"503","line":738,"column":25,"nodeType":"497","endLine":738,"endColumn":28},{"ruleId":"502","severity":1,"message":"503","line":745,"column":25,"nodeType":"497","endLine":745,"endColumn":28},{"ruleId":"502","severity":1,"message":"503","line":794,"column":25,"nodeType":"497","endLine":794,"endColumn":28},{"ruleId":"502","severity":1,"message":"503","line":800,"column":25,"nodeType":"497","endLine":800,"endColumn":28},{"ruleId":"502","severity":1,"message":"503","line":807,"column":25,"nodeType":"497","endLine":807,"endColumn":28},{"ruleId":"502","severity":1,"message":"503","line":814,"column":25,"nodeType":"497","endLine":814,"endColumn":28},{"ruleId":"502","severity":1,"message":"503","line":863,"column":25,"nodeType":"497","endLine":863,"endColumn":28},{"ruleId":"502","severity":1,"message":"503","line":870,"column":25,"nodeType":"497","endLine":870,"endColumn":28},{"ruleId":"502","severity":1,"message":"503","line":877,"column":25,"nodeType":"497","endLine":877,"endColumn":28},{"ruleId":"502","severity":1,"message":"503","line":884,"column":25,"nodeType":"497","endLine":884,"endColumn":28},{"ruleId":"502","severity":1,"message":"503","line":940,"column":27,"nodeType":"497","endLine":940,"endColumn":30},{"ruleId":"502","severity":1,"message":"503","line":946,"column":27,"nodeType":"497","endLine":946,"endColumn":30},{"ruleId":"502","severity":1,"message":"503","line":953,"column":27,"nodeType":"497","endLine":953,"endColumn":30},{"ruleId":"502","severity":1,"message":"503","line":960,"column":27,"nodeType":"497","endLine":960,"endColumn":30},{"ruleId":"502","severity":1,"message":"503","line":1022,"column":33,"nodeType":"497","endLine":1022,"endColumn":36},{"ruleId":"502","severity":1,"message":"503","line":1029,"column":33,"nodeType":"497","endLine":1029,"endColumn":36},{"ruleId":"502","severity":1,"message":"503","line":1037,"column":33,"nodeType":"497","endLine":1037,"endColumn":36},{"ruleId":"502","severity":1,"message":"503","line":1044,"column":33,"nodeType":"497","endLine":1044,"endColumn":36},{"ruleId":"498","severity":1,"message":"499","line":1050,"column":45,"nodeType":"500","messageId":"501","endLine":1050,"endColumn":47},{"ruleId":"502","severity":1,"message":"503","line":1077,"column":33,"nodeType":"497","endLine":1077,"endColumn":36},{"ruleId":"502","severity":1,"message":"503","line":1084,"column":33,"nodeType":"497","endLine":1084,"endColumn":36},{"ruleId":"484","severity":1,"message":"571","line":1147,"column":10,"nodeType":"486","messageId":"487","endLine":1147,"endColumn":18},{"ruleId":"484","severity":1,"message":"572","line":1151,"column":9,"nodeType":"486","messageId":"487","endLine":1151,"endColumn":14},{"ruleId":"484","severity":1,"message":"573","line":1175,"column":10,"nodeType":"486","messageId":"487","endLine":1175,"endColumn":15},{"ruleId":"484","severity":1,"message":"574","line":2,"column":17,"nodeType":"486","messageId":"487","endLine":2,"endColumn":23},{"ruleId":"484","severity":1,"message":"575","line":14,"column":3,"nodeType":"486","messageId":"487","endLine":14,"endColumn":11},{"ruleId":"484","severity":1,"message":"576","line":15,"column":3,"nodeType":"486","messageId":"487","endLine":15,"endColumn":17},{"ruleId":"484","severity":1,"message":"577","line":18,"column":3,"nodeType":"486","messageId":"487","endLine":18,"endColumn":13},{"ruleId":"484","severity":1,"message":"578","line":22,"column":3,"nodeType":"486","messageId":"487","endLine":22,"endColumn":14},{"ruleId":"484","severity":1,"message":"579","line":23,"column":3,"nodeType":"486","messageId":"487","endLine":23,"endColumn":14},{"ruleId":"498","severity":1,"message":"499","line":75,"column":21,"nodeType":"500","messageId":"501","endLine":75,"endColumn":23},{"ruleId":"498","severity":1,"message":"499","line":106,"column":21,"nodeType":"500","messageId":"501","endLine":106,"endColumn":23},{"ruleId":"498","severity":1,"message":"499","line":133,"column":16,"nodeType":"500","messageId":"501","endLine":133,"endColumn":18},{"ruleId":"484","severity":1,"message":"580","line":139,"column":10,"nodeType":"486","messageId":"487","endLine":139,"endColumn":17},{"ruleId":"484","severity":1,"message":"581","line":140,"column":23,"nodeType":"486","messageId":"487","endLine":140,"endColumn":37},{"ruleId":"495","severity":1,"message":"496","line":151,"column":19,"nodeType":"497","endLine":151,"endColumn":44},{"ruleId":"502","severity":1,"message":"503","line":484,"column":13,"nodeType":"497","endLine":484,"endColumn":80},{"ruleId":"498","severity":1,"message":"499","line":496,"column":24,"nodeType":"500","messageId":"501","endLine":496,"endColumn":26},{"ruleId":"495","severity":1,"message":"496","line":501,"column":23,"nodeType":"497","endLine":501,"endColumn":48},{"ruleId":"495","severity":1,"message":"496","line":563,"column":23,"nodeType":"497","endLine":563,"endColumn":48},{"ruleId":"502","severity":1,"message":"503","line":859,"column":13,"nodeType":"497","endLine":859,"endColumn":80},{"ruleId":"484","severity":1,"message":"508","line":2,"column":17,"nodeType":"486","messageId":"487","endLine":2,"endColumn":26},{"ruleId":"484","severity":1,"message":"582","line":2,"column":27,"nodeType":"486","messageId":"487","endLine":2,"endColumn":38},{"ruleId":"484","severity":1,"message":"583","line":7,"column":10,"nodeType":"486","messageId":"487","endLine":7,"endColumn":16},{"ruleId":"584","severity":1,"message":"585","line":34,"column":1,"nodeType":"586","endLine":38,"endColumn":3},{"ruleId":"484","severity":1,"message":"575","line":10,"column":3,"nodeType":"486","messageId":"487","endLine":10,"endColumn":11},{"ruleId":"484","severity":1,"message":"576","line":11,"column":3,"nodeType":"486","messageId":"487","endLine":11,"endColumn":17},{"ruleId":"484","severity":1,"message":"577","line":14,"column":3,"nodeType":"486","messageId":"487","endLine":14,"endColumn":13},{"ruleId":"484","severity":1,"message":"578","line":18,"column":3,"nodeType":"486","messageId":"487","endLine":18,"endColumn":14},{"ruleId":"484","severity":1,"message":"579","line":19,"column":3,"nodeType":"486","messageId":"487","endLine":19,"endColumn":14},{"ruleId":"498","severity":1,"message":"499","line":82,"column":16,"nodeType":"500","messageId":"501","endLine":82,"endColumn":18},{"ruleId":"484","severity":1,"message":"567","line":5,"column":10,"nodeType":"486","messageId":"487","endLine":5,"endColumn":15},{"ruleId":"484","severity":1,"message":"587","line":46,"column":5,"nodeType":"486","messageId":"487","endLine":46,"endColumn":13},{"ruleId":"484","severity":1,"message":"588","line":47,"column":5,"nodeType":"486","messageId":"487","endLine":47,"endColumn":8},{"ruleId":"495","severity":1,"message":"496","line":105,"column":19,"nodeType":"497","endLine":105,"endColumn":39},{"ruleId":"498","severity":1,"message":"499","line":129,"column":39,"nodeType":"500","messageId":"501","endLine":129,"endColumn":41},{"ruleId":"495","severity":1,"message":"496","line":156,"column":21,"nodeType":"497","endLine":167,"endColumn":23},{"ruleId":"484","severity":1,"message":"508","line":1,"column":17,"nodeType":"486","messageId":"487","endLine":1,"endColumn":26},{"ruleId":"484","severity":1,"message":"510","line":3,"column":8,"nodeType":"486","messageId":"487","endLine":3,"endColumn":13},{"ruleId":"484","severity":1,"message":"589","line":12,"column":3,"nodeType":"486","messageId":"487","endLine":12,"endColumn":11},{"ruleId":"484","severity":1,"message":"590","line":23,"column":3,"nodeType":"486","messageId":"487","endLine":23,"endColumn":8},{"ruleId":"484","severity":1,"message":"591","line":25,"column":3,"nodeType":"486","messageId":"487","endLine":25,"endColumn":13},{"ruleId":"484","severity":1,"message":"542","line":27,"column":3,"nodeType":"486","messageId":"487","endLine":27,"endColumn":9},{"ruleId":"484","severity":1,"message":"592","line":30,"column":8,"nodeType":"486","messageId":"487","endLine":30,"endColumn":19},{"ruleId":"484","severity":1,"message":"593","line":39,"column":10,"nodeType":"486","messageId":"487","endLine":39,"endColumn":19},{"ruleId":"484","severity":1,"message":"594","line":40,"column":10,"nodeType":"486","messageId":"487","endLine":40,"endColumn":20},{"ruleId":"484","severity":1,"message":"595","line":41,"column":10,"nodeType":"486","messageId":"487","endLine":41,"endColumn":27},{"ruleId":"484","severity":1,"message":"596","line":42,"column":10,"nodeType":"486","messageId":"487","endLine":42,"endColumn":32},{"ruleId":"484","severity":1,"message":"512","line":47,"column":3,"nodeType":"486","messageId":"487","endLine":47,"endColumn":15},{"ruleId":"484","severity":1,"message":"597","line":49,"column":3,"nodeType":"486","messageId":"487","endLine":49,"endColumn":10},{"ruleId":"484","severity":1,"message":"598","line":51,"column":3,"nodeType":"486","messageId":"487","endLine":51,"endColumn":9},{"ruleId":"484","severity":1,"message":"599","line":56,"column":3,"nodeType":"486","messageId":"487","endLine":56,"endColumn":12},{"ruleId":"484","severity":1,"message":"513","line":64,"column":10,"nodeType":"486","messageId":"487","endLine":64,"endColumn":20},{"ruleId":"484","severity":1,"message":"600","line":65,"column":10,"nodeType":"486","messageId":"487","endLine":65,"endColumn":25},{"ruleId":"484","severity":1,"message":"601","line":66,"column":10,"nodeType":"486","messageId":"487","endLine":66,"endColumn":22},{"ruleId":"484","severity":1,"message":"602","line":71,"column":5,"nodeType":"486","messageId":"487","endLine":71,"endColumn":11},{"ruleId":"484","severity":1,"message":"603","line":98,"column":13,"nodeType":"486","messageId":"487","endLine":98,"endColumn":21},{"ruleId":"484","severity":1,"message":"604","line":146,"column":10,"nodeType":"486","messageId":"487","endLine":146,"endColumn":17},{"ruleId":"484","severity":1,"message":"605","line":152,"column":9,"nodeType":"486","messageId":"487","endLine":152,"endColumn":16},{"ruleId":"484","severity":1,"message":"606","line":156,"column":10,"nodeType":"486","messageId":"487","endLine":156,"endColumn":17},{"ruleId":"484","severity":1,"message":"607","line":156,"column":19,"nodeType":"486","messageId":"487","endLine":156,"endColumn":29},{"ruleId":"484","severity":1,"message":"570","line":157,"column":10,"nodeType":"486","messageId":"487","endLine":157,"endColumn":17},{"ruleId":"498","severity":1,"message":"499","line":185,"column":21,"nodeType":"500","messageId":"501","endLine":185,"endColumn":23},{"ruleId":"498","severity":1,"message":"499","line":266,"column":72,"nodeType":"500","messageId":"501","endLine":266,"endColumn":74},{"ruleId":"498","severity":1,"message":"499","line":279,"column":40,"nodeType":"500","messageId":"501","endLine":279,"endColumn":42},{"ruleId":"498","severity":1,"message":"499","line":380,"column":68,"nodeType":"500","messageId":"501","endLine":380,"endColumn":70},{"ruleId":"498","severity":1,"message":"499","line":392,"column":36,"nodeType":"500","messageId":"501","endLine":392,"endColumn":38},{"ruleId":"484","severity":1,"message":"608","line":439,"column":10,"nodeType":"486","messageId":"487","endLine":439,"endColumn":15},{"ruleId":"484","severity":1,"message":"570","line":442,"column":10,"nodeType":"486","messageId":"487","endLine":442,"endColumn":17},{"ruleId":"480","severity":1,"message":"609","line":456,"column":13,"nodeType":"538","endLine":463,"endColumn":4},{"ruleId":"480","severity":1,"message":"609","line":480,"column":13,"nodeType":"538","endLine":489,"endColumn":4},{"ruleId":"480","severity":1,"message":"610","line":489,"column":6,"nodeType":"482","endLine":489,"endColumn":17,"suggestions":"611"},{"ruleId":"498","severity":1,"message":"507","line":492,"column":17,"nodeType":"500","messageId":"501","endLine":492,"endColumn":19},{"ruleId":"498","severity":1,"message":"507","line":505,"column":15,"nodeType":"500","messageId":"501","endLine":505,"endColumn":17},{"ruleId":"498","severity":1,"message":"499","line":576,"column":16,"nodeType":"500","messageId":"501","endLine":576,"endColumn":18},{"ruleId":"480","severity":1,"message":"612","line":582,"column":6,"nodeType":"482","endLine":582,"endColumn":14,"suggestions":"613"},{"ruleId":"484","severity":1,"message":"614","line":591,"column":11,"nodeType":"486","messageId":"487","endLine":591,"endColumn":19},{"ruleId":"480","severity":1,"message":"615","line":622,"column":6,"nodeType":"482","endLine":622,"endColumn":14,"suggestions":"616"},{"ruleId":"536","severity":1,"message":"548","line":637,"column":15,"nodeType":"538","messageId":"539","endLine":642,"endColumn":10},{"ruleId":"484","severity":1,"message":"617","line":652,"column":18,"nodeType":"486","messageId":"487","endLine":652,"endColumn":29},{"ruleId":"498","severity":1,"message":"499","line":678,"column":35,"nodeType":"500","messageId":"501","endLine":678,"endColumn":37},{"ruleId":"484","severity":1,"message":"618","line":682,"column":9,"nodeType":"486","messageId":"487","endLine":682,"endColumn":22},{"ruleId":"498","severity":1,"message":"499","line":705,"column":29,"nodeType":"500","messageId":"501","endLine":705,"endColumn":31},{"ruleId":"498","severity":1,"message":"507","line":707,"column":17,"nodeType":"500","messageId":"501","endLine":707,"endColumn":19},{"ruleId":"498","severity":1,"message":"499","line":796,"column":16,"nodeType":"500","messageId":"501","endLine":796,"endColumn":18},{"ruleId":"498","severity":1,"message":"499","line":824,"column":46,"nodeType":"500","messageId":"501","endLine":824,"endColumn":48},{"ruleId":"498","severity":1,"message":"499","line":829,"column":36,"nodeType":"500","messageId":"501","endLine":829,"endColumn":38},{"ruleId":"498","severity":1,"message":"499","line":832,"column":27,"nodeType":"500","messageId":"501","endLine":832,"endColumn":29},{"ruleId":"498","severity":1,"message":"499","line":834,"column":33,"nodeType":"500","messageId":"501","endLine":834,"endColumn":35},{"ruleId":"498","severity":1,"message":"499","line":837,"column":40,"nodeType":"500","messageId":"501","endLine":837,"endColumn":42},{"ruleId":"498","severity":1,"message":"499","line":844,"column":42,"nodeType":"500","messageId":"501","endLine":844,"endColumn":44},{"ruleId":"498","severity":1,"message":"499","line":851,"column":36,"nodeType":"500","messageId":"501","endLine":851,"endColumn":38},{"ruleId":"498","severity":1,"message":"499","line":954,"column":63,"nodeType":"500","messageId":"501","endLine":954,"endColumn":65},{"ruleId":"498","severity":1,"message":"499","line":1149,"column":16,"nodeType":"500","messageId":"501","endLine":1149,"endColumn":18},{"ruleId":"498","severity":1,"message":"499","line":1177,"column":46,"nodeType":"500","messageId":"501","endLine":1177,"endColumn":48},{"ruleId":"498","severity":1,"message":"499","line":1182,"column":36,"nodeType":"500","messageId":"501","endLine":1182,"endColumn":38},{"ruleId":"498","severity":1,"message":"499","line":1185,"column":27,"nodeType":"500","messageId":"501","endLine":1185,"endColumn":29},{"ruleId":"498","severity":1,"message":"499","line":1187,"column":33,"nodeType":"500","messageId":"501","endLine":1187,"endColumn":35},{"ruleId":"498","severity":1,"message":"499","line":1190,"column":40,"nodeType":"500","messageId":"501","endLine":1190,"endColumn":42},{"ruleId":"498","severity":1,"message":"499","line":1197,"column":42,"nodeType":"500","messageId":"501","endLine":1197,"endColumn":44},{"ruleId":"498","severity":1,"message":"499","line":1204,"column":36,"nodeType":"500","messageId":"501","endLine":1204,"endColumn":38},{"ruleId":"498","severity":1,"message":"499","line":1307,"column":63,"nodeType":"500","messageId":"501","endLine":1307,"endColumn":65},{"ruleId":"498","severity":1,"message":"499","line":1433,"column":22,"nodeType":"500","messageId":"501","endLine":1433,"endColumn":24},{"ruleId":"498","severity":1,"message":"507","line":1437,"column":34,"nodeType":"500","messageId":"501","endLine":1437,"endColumn":36},{"ruleId":"498","severity":1,"message":"499","line":1440,"column":21,"nodeType":"500","messageId":"501","endLine":1440,"endColumn":23},{"ruleId":"498","severity":1,"message":"507","line":1500,"column":15,"nodeType":"500","messageId":"501","endLine":1500,"endColumn":17},{"ruleId":"480","severity":1,"message":"619","line":1566,"column":5,"nodeType":"482","endLine":1566,"endColumn":17,"suggestions":"620"},{"ruleId":"484","severity":1,"message":"621","line":2,"column":8,"nodeType":"486","messageId":"487","endLine":2,"endColumn":17},{"ruleId":"498","severity":1,"message":"499","line":2,"column":33,"nodeType":"500","messageId":"501","endLine":2,"endColumn":35},{"ruleId":"498","severity":1,"message":"499","line":2,"column":69,"nodeType":"500","messageId":"501","endLine":2,"endColumn":71},{"ruleId":"484","severity":1,"message":"622","line":40,"column":7,"nodeType":"486","messageId":"487","endLine":40,"endColumn":11},{"ruleId":"498","severity":1,"message":"499","line":62,"column":14,"nodeType":"500","messageId":"501","endLine":62,"endColumn":16},{"ruleId":"498","severity":1,"message":"499","line":63,"column":19,"nodeType":"500","messageId":"501","endLine":63,"endColumn":21},{"ruleId":"623","severity":1,"message":"624","line":70,"column":7,"nodeType":"625","messageId":"626","endLine":70,"endColumn":13},{"ruleId":"623","severity":1,"message":"624","line":74,"column":7,"nodeType":"625","messageId":"626","endLine":74,"endColumn":13},{"ruleId":"623","severity":1,"message":"624","line":77,"column":7,"nodeType":"625","messageId":"626","endLine":77,"endColumn":13},{"ruleId":"627","severity":1,"message":"628","line":78,"column":5,"nodeType":"629","messageId":"501","endLine":80,"endColumn":13},{"ruleId":"623","severity":1,"message":"624","line":80,"column":7,"nodeType":"625","messageId":"626","endLine":80,"endColumn":13},{"ruleId":"623","severity":1,"message":"624","line":84,"column":7,"nodeType":"625","messageId":"626","endLine":84,"endColumn":13},{"ruleId":"623","severity":1,"message":"624","line":87,"column":7,"nodeType":"625","messageId":"626","endLine":87,"endColumn":13},{"ruleId":"623","severity":1,"message":"624","line":90,"column":7,"nodeType":"625","messageId":"626","endLine":90,"endColumn":13},{"ruleId":"623","severity":1,"message":"624","line":93,"column":7,"nodeType":"625","messageId":"626","endLine":93,"endColumn":13},{"ruleId":"623","severity":1,"message":"624","line":96,"column":7,"nodeType":"625","messageId":"626","endLine":96,"endColumn":13},{"ruleId":"484","severity":1,"message":"572","line":107,"column":5,"nodeType":"486","messageId":"487","endLine":107,"endColumn":10},{"ruleId":"630","severity":1,"message":"631","line":125,"column":85,"nodeType":"632","messageId":"633","endLine":125,"endColumn":86,"suggestions":"634"},{"ruleId":"484","severity":1,"message":"614","line":14,"column":11,"nodeType":"486","messageId":"487","endLine":14,"endColumn":19},{"ruleId":"536","severity":1,"message":"635","line":18,"column":10,"nodeType":"538","messageId":"539","endLine":30,"endColumn":11},{"ruleId":"484","severity":1,"message":"636","line":1,"column":8,"nodeType":"486","messageId":"487","endLine":1,"endColumn":15},{"ruleId":"484","severity":1,"message":"637","line":2,"column":8,"nodeType":"486","messageId":"487","endLine":2,"endColumn":16},{"ruleId":"484","severity":1,"message":"638","line":6,"column":8,"nodeType":"486","messageId":"487","endLine":6,"endColumn":13},{"ruleId":"484","severity":1,"message":"639","line":7,"column":8,"nodeType":"486","messageId":"487","endLine":7,"endColumn":12},{"ruleId":"484","severity":1,"message":"640","line":9,"column":8,"nodeType":"486","messageId":"487","endLine":9,"endColumn":11},{"ruleId":"484","severity":1,"message":"641","line":10,"column":8,"nodeType":"486","messageId":"487","endLine":10,"endColumn":12},{"ruleId":"484","severity":1,"message":"510","line":1,"column":8,"nodeType":"486","messageId":"487","endLine":1,"endColumn":13},{"ruleId":"484","severity":1,"message":"529","line":1,"column":27,"nodeType":"486","messageId":"487","endLine":1,"endColumn":36},{"ruleId":"484","severity":1,"message":"642","line":1,"column":38,"nodeType":"486","messageId":"487","endLine":1,"endColumn":44},{"ruleId":"484","severity":1,"message":"508","line":2,"column":17,"nodeType":"486","messageId":"487","endLine":2,"endColumn":26},{"ruleId":"484","severity":1,"message":"582","line":2,"column":28,"nodeType":"486","messageId":"487","endLine":2,"endColumn":39},{"ruleId":"476","replacedBy":"643"},{"ruleId":"478","replacedBy":"644"},"no-native-reassign",["645"],"no-negated-in-lhs",["646"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'history'. Either include it or remove the dependency array.","ArrayExpression",["647"],"no-unused-vars","'newpost' is assigned a value but never used.","Identifier","unusedVar","'db' is assigned a value but never used.","'sheight1' is assigned a value but never used.","'setUsertext' is assigned a value but never used.","'scrolly' is assigned a value but never used.","'clientheight' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'swidths1'. Either include it or remove the dependency array.",["648"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","React Hook useEffect has a missing dependency: 'onClose'. Either include it or remove the dependency array.",["649"],"React Hook useCallback does nothing when called with only one argument. Did you forget to pass an array of dependencies?","Expected '!==' and instead saw '!='.","'Component' is defined but never used.","'Image' is defined but never used.","'react' is defined but never used.","'MdDelete' is defined but never used.","'MdAccessTime' is defined but never used.","'AiFillEdit' is defined but never used.","'HiCurrencyRupee' is defined but never used.","'FaTools' is defined but never used.","'posttime' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'pdata' and 'props.id'. Either include them or remove the dependency array.",["650"],"'Col' is defined but never used.","'Row' is defined but never used.","'IconContext' is defined but never used.","'MdRemoveRedEye' is defined but never used.","'FiMoreHorizontal' is defined but never used.","'click' is assigned a value but never used.","'edit' is assigned a value but never used.","'delpost' is assigned a value but never used.","'pic' is defined but never used.","'useState' is defined but never used.","'useEffect' is defined but never used.","'useHistory' is defined but never used.","'MdFileUpload' is defined but never used.","'src' is assigned a value but never used.","use-isnan","Use the isNaN function to compare with NaN.","comparisonWithNaN","no-loop-func","Function declared in a loop contains unsafe references to variable(s) 'cfile', 'cfile', 'cfile'.","ArrowFunctionExpression","unsafeRefs","'value' is assigned a value but never used.","'imgsrc' is assigned a value but never used.","'Header' is defined but never used.","'MdPhotoCamera' is defined but never used.","'madia' is assigned a value but never used.","'avoid' is assigned a value but never used.","'postdata' is assigned a value but never used.","'handleChange' is defined but never used.","Function declared in a loop contains unsafe references to variable(s) 'cfile', 'cfile'.","React Hook useEffect has missing dependencies: 'arrayvar2', 'handleSubmit', and 'image.length'. Either include them or remove the dependency array.",["651"],"'photoHandle' is assigned a value but never used.","'Link' is defined but never used.","'RiLockPasswordFill' is defined but never used.","'Carousel' is defined but never used.","'Label' is defined but never used.","'Step' is defined but never used.","'Button' is defined but never used.","'Rating' is defined but never used.","'MdLocationOn' is defined but never used.","'MdWatchLater' is defined but never used.","'MdCheckCircle' is defined but never used.","'MdAssignmentTurnedIn' is defined but never used.","'MdBuild' is defined but never used.","'MdThumbDown' is defined but never used.",["652"],"'Menu' is defined but never used.","'toast' is defined but never used.","'checkt' is assigned a value but never used.","'satish' is defined but never used.","'heights' is assigned a value but never used.","'useTimes' is defined but never used.","'count' is assigned a value but never used.","'Empty' is defined but never used.","'Select' is defined but never used.","'Dropdown' is defined but never used.","'DropdownButton' is defined but never used.","'InputGroup' is defined but never used.","'FormControl' is defined but never used.","'ProgressBar' is defined but never used.","'height1' is assigned a value but never used.","'setTextcontent' is assigned a value but never used.","'useCallback' is defined but never used.","'sticky' is assigned a value but never used.","import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration","'username' is assigned a value but never used.","'app' is defined but never used.","'TextArea' is defined but never used.","'Input' is defined but never used.","'ImageGroup' is defined but never used.","'ImageViewer' is defined but never used.","'BsEyeFill' is defined but never used.","'BiTimeFive' is defined but never used.","'RiPinDistanceFill' is defined but never used.","'HiOutlineCurrencyRupee' is defined but never used.","'MdImage' is defined but never used.","'MdList' is defined but never used.","'MdViewDay' is defined but never used.","'RiSendPlaneLine' is defined but never used.","'FaFolderPlus' is defined but never used.","'chatid' is defined but never used.","'tempChat' is assigned a value but never used.","'settrue' is defined but never used.","'history' is assigned a value but never used.","'unrChat' is assigned a value but never used.","'setunrChat' is assigned a value but never used.","'mflag' is assigned a value but never used.","Effect callbacks are synchronous to prevent race conditions. Put the async function inside:\n\nuseEffect(() => {\n  async function fetchData() {\n    // You can await here\n    const response = await MyAPI.getData(someId);\n    // ...\n  }\n  fetchData();\n}, [someId]); // Or [] if effect doesn't need props or state\n\nLearn more about data fetching with Hooks: https://reactjs.org/link/hooks-data-fetching","React Hook useEffect has a missing dependency: 'chat'. Either include it or remove the dependency array.",["653"],"React Hook useEffect has a missing dependency: 'uitf'. Either include it or remove the dependency array.",["654"],"'upldtask' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'chid' and 'click2'. Either include them or remove the dependency array.",["655"],"'uploadmedia' is defined but never used.","'handleKeyDown' is assigned a value but never used.","React Hook useCallback has a missing dependency: 'props'. Either include it or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useCallback call and refer to those specific props inside useCallback.",["656"],"'firestore' is defined but never used.","'year' is assigned a value but never used.","no-unreachable","Unreachable code.","BreakStatement","unreachableCode","no-duplicate-case","Duplicate case label.","SwitchCase","no-useless-escape","Unnecessary escape character: \\/.","Literal","unnecessaryEscape",["657","658"],"Function declared in a loop contains unsafe references to variable(s) 'surl'.","'takepic' is defined but never used.","'location' is defined but never used.","'about' is defined but never used.","'what' is defined but never used.","'reg' is defined but never used.","'meet' is defined but never used.","'useRef' is defined but never used.",["645"],["646"],"no-global-assign","no-unsafe-negation",{"desc":"659","fix":"660"},{"desc":"661","fix":"662"},{"desc":"663","fix":"664"},{"desc":"665","fix":"666"},{"desc":"667","fix":"668"},{"desc":"665","fix":"669"},{"desc":"670","fix":"671"},{"desc":"672","fix":"673"},{"desc":"674","fix":"675"},{"desc":"676","fix":"677"},{"messageId":"678","fix":"679","desc":"680"},{"messageId":"681","fix":"682","desc":"683"},"Update the dependencies array to be: [history]",{"range":"684","text":"685"},"Update the dependencies array to be: [swidths1]",{"range":"686","text":"687"},"Update the dependencies array to be: [count, onClose]",{"range":"688","text":"689"},"Update the dependencies array to be: [pdata, props.id]",{"range":"690","text":"691"},"Update the dependencies array to be: [arrayvar, arrayvar2, handleSubmit, image.length]",{"range":"692","text":"693"},{"range":"694","text":"691"},"Update the dependencies array to be: [chat, chat.body]",{"range":"695","text":"696"},"Update the dependencies array to be: [uitf, upload]",{"range":"697","text":"698"},"Update the dependencies array to be: [chid, click2, image2]",{"range":"699","text":"700"},"Update the dependencies array to be: [props]",{"range":"701","text":"702"},"removeEscape",{"range":"703","text":"704"},"Remove the `\\`. This maintains the current functionality.","escapeBackslash",{"range":"705","text":"706"},"Replace the `\\` with `\\\\` to include the actual backslash character.",[275,277],"[history]",[4897,4899],"[swidths1]",[13863,13870],"[count, onClose]",[14404,14406],"[pdata, props.id]",[6570,6580],"[arrayvar, arrayvar2, handleSubmit, image.length]",[1197,1199],[16165,16176],"[chat, chat.body]",[18374,18382],"[uitf, upload]",[19450,19458],"[chid, click2, image2]",[50125,50137],"[props]",[3135,3136],"",[3135,3135],"\\"]