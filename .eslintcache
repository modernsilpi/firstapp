[{"E:\\hemanth files\\js practise\\spotmies\\firstapp\\src\\index.js":"1","E:\\hemanth files\\js practise\\spotmies\\firstapp\\src\\reportWebVitals.js":"2","E:\\hemanth files\\js practise\\spotmies\\firstapp\\src\\App.js":"3","E:\\hemanth files\\js practise\\spotmies\\firstapp\\src\\scrolltotop.js":"4","E:\\hemanth files\\js practise\\spotmies\\firstapp\\src\\components\\privacy.jsx":"5","E:\\hemanth files\\js practise\\spotmies\\firstapp\\src\\components\\navbar.jsx":"6","E:\\hemanth files\\js practise\\spotmies\\firstapp\\src\\components\\mybooks.jsx":"7","E:\\hemanth files\\js practise\\spotmies\\firstapp\\src\\components\\postview.jsx":"8","E:\\hemanth files\\js practise\\spotmies\\firstapp\\src\\components\\profile.jsx":"9","E:\\hemanth files\\js practise\\spotmies\\firstapp\\src\\components\\chat.jsx":"10","E:\\hemanth files\\js practise\\spotmies\\firstapp\\src\\components\\signup.jsx":"11","E:\\hemanth files\\js practise\\spotmies\\firstapp\\src\\components\\contact.jsx":"12","E:\\hemanth files\\js practise\\spotmies\\firstapp\\src\\components\\newpost2.jsx":"13","E:\\hemanth files\\js practise\\spotmies\\firstapp\\src\\components\\chats-section.jsx":"14","E:\\hemanth files\\js practise\\spotmies\\firstapp\\src\\components\\editpost2.jsx":"15","E:\\hemanth files\\js practise\\spotmies\\firstapp\\src\\components\\bikerental.jsx":"16","E:\\hemanth files\\js practise\\spotmies\\firstapp\\src\\components\\partnerRegistration.jsx":"17","E:\\hemanth files\\js practise\\spotmies\\firstapp\\src\\components\\slide1.jsx":"18","E:\\hemanth files\\js practise\\spotmies\\firstapp\\src\\components\\pdetails.jsx":"19","E:\\hemanth files\\js practise\\spotmies\\firstapp\\src\\components\\scroll.jsx":"20","E:\\hemanth files\\js practise\\spotmies\\firstapp\\src\\firebase.js":"21","E:\\hemanth files\\js practise\\spotmies\\firstapp\\src\\mservices\\userDB.js":"22","E:\\hemanth files\\js practise\\spotmies\\firstapp\\src\\components\\reusable\\categories.js":"23","E:\\hemanth files\\js practise\\spotmies\\firstapp\\src\\mservices\\contactUs.js":"24","E:\\hemanth files\\js practise\\spotmies\\firstapp\\src\\mservices\\dateconv.js":"25","E:\\hemanth files\\js practise\\spotmies\\firstapp\\src\\components\\reusable\\Modal.jsx":"26","E:\\hemanth files\\js practise\\spotmies\\firstapp\\src\\components\\usertext.js":"27","E:\\hemanth files\\js practise\\spotmies\\firstapp\\src\\components\\txtRotate.js":"28","E:\\hemanth files\\js practise\\spotmies\\firstapp\\src\\components\\partnerText.js":"29","E:\\hemanth files\\js practise\\spotmies\\firstapp\\src\\components\\reusable\\msgdot.js":"30","E:\\hemanth files\\js practise\\spotmies\\firstapp\\src\\mservices\\upldmedia.js":"31"},{"size":892,"mtime":1621004942258,"results":"32","hashOfConfig":"33"},{"size":375,"mtime":1614761669744,"results":"34","hashOfConfig":"33"},{"size":3116,"mtime":1621004941169,"results":"35","hashOfConfig":"33"},{"size":335,"mtime":1617559195999,"results":"36","hashOfConfig":"33"},{"size":17771,"mtime":1621082685001,"results":"37","hashOfConfig":"33"},{"size":9034,"mtime":1621683094940,"results":"38","hashOfConfig":"33"},{"size":8681,"mtime":1621004941381,"results":"39","hashOfConfig":"33"},{"size":16703,"mtime":1621004941587,"results":"40","hashOfConfig":"33"},{"size":11606,"mtime":1621004941636,"results":"41","hashOfConfig":"33"},{"size":7633,"mtime":1621004941293,"results":"42","hashOfConfig":"33"},{"size":6069,"mtime":1621680974395,"results":"43","hashOfConfig":"33"},{"size":6100,"mtime":1621004941298,"results":"44","hashOfConfig":"33"},{"size":16387,"mtime":1621004941431,"results":"45","hashOfConfig":"33"},{"size":44533,"mtime":1621082684996,"results":"46","hashOfConfig":"33"},{"size":15882,"mtime":1621004941336,"results":"47","hashOfConfig":"33"},{"size":40696,"mtime":1621004941291,"results":"48","hashOfConfig":"33"},{"size":17093,"mtime":1621684410998,"results":"49","hashOfConfig":"33"},{"size":15419,"mtime":1621686438956,"results":"50","hashOfConfig":"33"},{"size":2906,"mtime":1618743263883,"results":"51","hashOfConfig":"33"},{"size":1687,"mtime":1618743363527,"results":"52","hashOfConfig":"33"},{"size":1101,"mtime":1614761689804,"results":"53","hashOfConfig":"33"},{"size":355,"mtime":1619960953606,"results":"54","hashOfConfig":"33"},{"size":449,"mtime":1619960953548,"results":"55","hashOfConfig":"33"},{"size":1301,"mtime":1621004942303,"results":"56","hashOfConfig":"33"},{"size":3342,"mtime":1621004942304,"results":"57","hashOfConfig":"33"},{"size":9682,"mtime":1621082685002,"results":"58","hashOfConfig":"33"},{"size":1521,"mtime":1621680974397,"results":"59","hashOfConfig":"33"},{"size":1575,"mtime":1621004941640,"results":"60","hashOfConfig":"33"},{"size":2269,"mtime":1621680974379,"results":"61","hashOfConfig":"33"},{"size":162,"mtime":1619960953550,"results":"62","hashOfConfig":"33"},{"size":2050,"mtime":1618743034203,"results":"63","hashOfConfig":"33"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},"1v1dsw5",{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"66"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76","usedDeprecatedRules":"66"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"79","messages":"80","errorCount":0,"warningCount":15,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81","usedDeprecatedRules":"66"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":21,"fixableErrorCount":0,"fixableWarningCount":0,"source":"84","usedDeprecatedRules":"66"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"87","usedDeprecatedRules":"66"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"92","messages":"93","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"94","usedDeprecatedRules":"66"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"97","usedDeprecatedRules":"66"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":68,"fixableErrorCount":0,"fixableWarningCount":0,"source":"100","usedDeprecatedRules":"66"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":17,"fixableErrorCount":0,"fixableWarningCount":0,"source":"103","usedDeprecatedRules":"66"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":52,"fixableErrorCount":0,"fixableWarningCount":0,"source":"106","usedDeprecatedRules":"66"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":28,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"109","messages":"110","errorCount":0,"warningCount":28,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"111","messages":"112","errorCount":0,"warningCount":22,"fixableErrorCount":0,"fixableWarningCount":0,"source":"113","usedDeprecatedRules":"66"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"116","usedDeprecatedRules":"66"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"119","usedDeprecatedRules":"66"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":17,"fixableErrorCount":0,"fixableWarningCount":0,"source":"128","usedDeprecatedRules":"66"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":29,"fixableErrorCount":0,"fixableWarningCount":0,"source":"131","usedDeprecatedRules":"66"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"134","messages":"135","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"138","messages":"139","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"142","usedDeprecatedRules":"66"},"E:\\hemanth files\\js practise\\spotmies\\firstapp\\src\\index.js",[],["143","144"],"E:\\hemanth files\\js practise\\spotmies\\firstapp\\src\\reportWebVitals.js",[],"E:\\hemanth files\\js practise\\spotmies\\firstapp\\src\\App.js",[],"E:\\hemanth files\\js practise\\spotmies\\firstapp\\src\\scrolltotop.js",["145"],"import { useEffect } from 'react';\r\nimport { withRouter } from 'react-router-dom';function ScrollToTop({ history }) {\r\n  useEffect(() => {\r\n    const unlisten = history.listen(() => {\r\n      window.scrollTo(0, 0);\r\n    });\r\n    return () => {\r\n      unlisten();\r\n    }\r\n  }, []);  return null;\r\n}export default withRouter(ScrollToTop);","E:\\hemanth files\\js practise\\spotmies\\firstapp\\src\\components\\privacy.jsx",["146"],"import React,{useRef,useEffect} from \"react\";\r\nimport \"./privacy.css\";\r\n\r\nfunction Privacy() {\r\n  const ref1 = useRef(null);\r\n  const executeScroll = () => ref1.current.scrollIntoView({behavior: \"smooth\"});\r\n  return (\r\n    <div className=\"privacyDiv\">\r\n      <article>\r\n        <h1>Privacy Policy</h1>\r\n        <p onClick={executeScroll}>\r\n          Last updated: February 08, 2021\r\n          <br />\r\n          This Privacy Policy describes Our policies and procedures on the\r\n          collection, use and disclosure of Your information when You use the\r\n          Service and tells You about Your privacy rights and how the law\r\n          protects You.\r\n          <br />\r\n          We use Your Personal data to provide and improve the Service. By using\r\n          the Service, You agree to the collection and use of information in\r\n          accordance with this Privacy Policy. This Privacy Policy has been\r\n          created with the help of the Privacy Policy Generator.\r\n        </p>\r\n      </article>\r\n      <article>\r\n        <h1>Interpretation and Definitions</h1>\r\n        <h2>Interpretation</h2>\r\n        <p>\r\n          The words of which the initial letter is capitalized have meanings\r\n          defined under the following conditions. The following definitions\r\n          shall have the same meaning regardless of whether they appear in\r\n          singular or in plural.\r\n        </p>\r\n        <h2>Definitions</h2>\r\n        <p>For the purposes of this Privacy Policy:</p>\r\n        <ul>\r\n          <li>\r\n            Account means a unique account created for You to access our Service\r\n            or parts of our Service.\r\n          </li>\r\n          <li>\r\n            Affiliate means an entity that controls, is controlled by or is\r\n            under common control with a party, where \"control\" means ownership\r\n            of 50% or more of the shares, equity interest or other securities\r\n            entitled to vote for election of directors or other managing\r\n            authority.\r\n          </li>\r\n          <li>\r\n            Application means the software program provided by the Company\r\n            downloaded by You on any electronic device, named spotmies\r\n          </li>\r\n          <li>\r\n            Company (referred to as either \"the Company\", \"We\", \"Us\" or \"Our\" in\r\n            this Agreement) refers to spotmies.\r\n          </li>\r\n          <li>Country refers to: Andhra Pradesh, India</li>\r\n          <li>\r\n            Device means any device that can access the Service such as a\r\n            computer, a cellphone or a digital tablet.\r\n          </li>\r\n          <li>\r\n            Personal Data is any information that relates to an identified or\r\n            identifiable individual\r\n          </li>\r\n          <li>Service refers to the Application</li>\r\n          <li>\r\n            Service Provider means any natural or legal person who processes the\r\n            data on behalf of the Company. It refers to third-party companies or\r\n            individuals employed by the Company to facilitate the Service, to\r\n            provide the Service on behalf of the Company, to perform services\r\n            related to the Service or to assist the Company in analyzing how the\r\n            Service is used.\r\n          </li>\r\n          <li>\r\n            Third-party Social Media Service refers to any website or any social\r\n            network website through which a User can log in or create an account\r\n            to use the Service.\r\n          </li>\r\n          <li>\r\n            Usage Data refers to data collected automatically, either generated\r\n            by the use of the Service or from the Service infrastructure itself\r\n            (for example, the duration of a page visit).\r\n          </li>\r\n          <li>\r\n            You means the individual accessing or using the Service, or the\r\n            company, or other legal entity on behalf of which such individual is\r\n            accessing or using the Service, as applicable.\r\n          </li>\r\n        </ul>\r\n      </article>\r\n      <article ref={ref1}>\r\n        <h1>Collecting and Using Your Personal Data</h1>\r\n        <h2>Types of Data Collected</h2>\r\n        <h3>Personal Data</h3>\r\n        <p>\r\n          While using Our Service, We may ask You to provide Us with certain\r\n          personally identifiable information that can be used to contact or\r\n          identify You. Personally identifiable information may include, but is\r\n          not limited to:\r\n        </p>\r\n        <ul>\r\n          <li>Email address</li>\r\n          <li>First name and last name</li>\r\n          <li>Phone number</li>\r\n          <li>Address, State, Province, ZIP/Postal code, City</li>\r\n          <li>Usage Data</li>\r\n        </ul>\r\n        <h3>Usage Data</h3>\r\n        <p>\r\n          Usage Data is collected automatically when using the Service.\r\n          <br />\r\n          Usage Data may include information such as Your Device's Internet\r\n          Protocol address (e.g. IP address), browser type, browser version, the\r\n          pages of our Service that You visit, the time and date of Your visit,\r\n          the time spent on those pages, unique device identifiers and other\r\n          diagnostic data.\r\n          <br />\r\n          When You access the Service by or through a mobile device, We may\r\n          collect certain information automatically, including, but not limited\r\n          to, the type of mobile device You use, Your mobile device unique ID,\r\n          the IP address of Your mobile device, Your mobile operating system,\r\n          the type of mobile Internet browser You use, unique device identifiers\r\n          and other diagnostic data.\r\n          <br />\r\n          We may also collect information that Your browser sends whenever You\r\n          visit our Service or when You access the Service by or through a\r\n          mobile device.\r\n        </p>\r\n        <h3>Information Collected while Using the Application</h3>\r\n        <p>\r\n          While using Our Application, in order to provide features of Our\r\n          Application, We may collect, with Your prior permission:\r\n        </p>\r\n        <ul>\r\n          <li>Information regarding your location</li>\r\n          <li>\r\n            Pictures and other information from your Device's camera and photo\r\n            library\r\n          </li>\r\n        </ul>\r\n        <p>\r\n          We use this information to provide features of Our Service, to improve\r\n          and customize Our Service. The information may be uploaded to the\r\n          Company's servers and/or a Service Provider's server or it may be\r\n          simply stored on Your device.\r\n          <br />\r\n          You can enable or disable access to this information at any time,\r\n          through Your Device settings.\r\n        </p>\r\n        <h3>Use of Your Personal Data</h3>\r\n        <p>The Company may use Personal Data for the following purposes:</p>\r\n        <ul>\r\n          <li>\r\n            To provide and maintain our Service, including to monitor the usage\r\n            of our Service.\r\n          </li>\r\n          <li>\r\n            To manage Your Account: to manage Your registration as a user of the\r\n            Service. The Personal Data You provide can give You access to\r\n            different functionalities of the Service that are available to You\r\n            as a registered user.\r\n          </li>\r\n          <li>\r\n            For the performance of a contract: the development, compliance and\r\n            undertaking of the purchase contract for the products, items or\r\n            services You have purchased or of any other contract with Us through\r\n            the Service.\r\n          </li>\r\n          <li>\r\n            To contact You: To contact You by email, telephone calls, SMS, or\r\n            other equivalent forms of electronic communication, such as a mobile\r\n            application's push notifications regarding updates or informative\r\n            communications related to the functionalities, products or\r\n            contracted services, including the security updates, when necessary\r\n            or reasonable for their implementation.\r\n          </li>\r\n          <li>\r\n            To provide You with news, special offers and general information\r\n            about other goods, services and events which we offer that are\r\n            similar to those that you have already purchased or enquired about\r\n            unless You have opted not to receive such information.\r\n          </li>\r\n          <li>\r\n            To manage Your requests: To attend and manage Your requests to Us.\r\n          </li>\r\n          <li>\r\n            For business transfers: We may use Your information to evaluate or\r\n            conduct a merger, divestiture, restructuring, reorganization,\r\n            dissolution, or other sale or transfer of some or all of Our assets,\r\n            whether as a going concern or as part of bankruptcy, liquidation, or\r\n            similar proceeding, in which Personal Data held by Us about our\r\n            Service users is among the assets transferred.\r\n          </li>\r\n          <li>\r\n            For other purposes: We may use Your information for other purposes,\r\n            such as data analysis, identifying usage trends, determining the\r\n            effectiveness of our promotional campaigns and to evaluate and\r\n            improve our Service, products, services, marketing and your\r\n            experience.\r\n          </li>\r\n        </ul>\r\n        <p>\r\n          We may share Your personal information in the following situations:\r\n        </p>\r\n        <ul>\r\n          <li>\r\n            With Service Providers: We may share Your personal information with\r\n            Service Providers to monitor and analyze the use of our Service, to\r\n            contact You.\r\n          </li>\r\n          <li>\r\n            For business transfers: We may share or transfer Your personal\r\n            information in connection with, or during negotiations of, any\r\n            merger, sale of Company assets, financing, or acquisition of all or\r\n            a portion of Our business to another company.\r\n          </li>\r\n          <li>\r\n            With Affiliates: We may share Your information with Our affiliates,\r\n            in which case we will require those affiliates to honor this Privacy\r\n            Policy. Affiliates include Our parent company and any other\r\n            subsidiaries, joint venture partners or other companies that We\r\n            control or that are under common control with Us.\r\n          </li>\r\n          <li>\r\n            With business partners: We may share Your information with Our\r\n            business partners to offer You certain products, services or\r\n            promotions.\r\n          </li>\r\n          <li>\r\n            With other users: when You share personal information or otherwise\r\n            interact in the public areas with other users, such information may\r\n            be viewed by all users and may be publicly distributed outside. If\r\n            You interact with other users or register through a Third-Party\r\n            Social Media Service, Your contacts on the Third-Party Social Media\r\n            Service may see Your name, profile, pictures and description of Your\r\n            activity. Similarly, other users will be able to view descriptions\r\n            of Your activity, communicate with You and view Your profile.\r\n          </li>\r\n          <li>\r\n            With Your consent: We may disclose Your personal information for any\r\n            other purpose with Your consent.\r\n          </li>\r\n        </ul>\r\n        <h2>Retention of Your Personal Data</h2>\r\n        <p>\r\n          The Company will retain Your Personal Data only for as long as is\r\n          necessary for the purposes set out in this Privacy Policy. We will\r\n          retain and use Your Personal Data to the extent necessary to comply\r\n          with our legal obligations (for example, if we are required to retain\r\n          your data to comply with applicable laws), resolve disputes, and\r\n          enforce our legal agreements and policies.\r\n          <br />\r\n          The Company will also retain Usage Data for internal analysis\r\n          purposes. Usage Data is generally retained for a shorter period of\r\n          time, except when this data is used to strengthen the security or to\r\n          improve the functionality of Our Service, or We are legally obligated\r\n          to retain this data for longer time periods.\r\n        </p>\r\n        <h2>Transfer of Your Personal Data</h2>\r\n        <p>\r\n          Your information, including Personal Data, is processed at the\r\n          Company's operating offices and in any other places where the parties\r\n          involved in the processing are located. It means that this information\r\n          may be transferred to — and maintained on — computers located outside\r\n          of Your state, province, country or other governmental jurisdiction\r\n          where the data protection laws may differ than those from Your\r\n          jurisdiction.\r\n          <br />\r\n          Your consent to this Privacy Policy followed by Your submission of\r\n          such information represents Your agreement to that transfer.\r\n          <br />\r\n          The Company will take all steps reasonably necessary to ensure that\r\n          Your data is treated securely and in accordance with this Privacy\r\n          Policy and no transfer of Your Personal Data will take place to an\r\n          organization or a country unless there are adequate controls in place\r\n          including the security of Your data and other personal information.\r\n        </p>\r\n        <h2>Disclosure of Your Personal Data</h2>\r\n        <h3>Business Transactions</h3>\r\n        <p>\r\n          If the Company is involved in a merger, acquisition or asset sale,\r\n          Your Personal Data may be transferred. We will provide notice before\r\n          Your Personal Data is transferred and becomes subject to a different\r\n          Privacy Policy.\r\n        </p>\r\n        <h3>Law enforcement</h3>\r\n        <p>\r\n          Under certain circumstances, the Company may be required to disclose\r\n          Your Personal Data if required to do so by law or in response to valid\r\n          requests by public authorities (e.g. a court or a government agency).\r\n        </p>\r\n        <h3>Other legal requirements</h3>\r\n        <p>\r\n          The Company may disclose Your Personal Data in the good faith belief\r\n          that such action is necessary to:\r\n        </p>\r\n        <ul>\r\n          <li>Comply with a legal obligation</li>\r\n          <li>Protect and defend the rights or property of the Company</li>\r\n          <li>\r\n            Prevent or investigate possible wrongdoing in connection with the\r\n            Service\r\n          </li>\r\n          <li>\r\n            Protect the personal safety of Users of the Service or the public\r\n          </li>\r\n          <li>Protect against legal liability</li>\r\n        </ul>\r\n        <h3>Security of Your Personal Data</h3>\r\n        <p>\r\n          The security of Your Personal Data is important to Us, but remember\r\n          that no method of transmission over the Internet, or method of\r\n          electronic storage is 100% secure. While We strive to use commercially\r\n          acceptable means to protect Your Personal Data, We cannot guarantee\r\n          its absolute security.\r\n        </p>\r\n        <h2>Children's Privacy</h2>\r\n        <p>\r\n          Our Service does not address anyone under the age of 13. We do not\r\n          knowingly collect personally identifiable information from anyone\r\n          under the age of 13. If You are a parent or guardian and You are aware\r\n          that Your child has provided Us with Personal Data, please contact Us.\r\n          If We become aware that We have collected Personal Data from anyone\r\n          under the age of 13 without verification of parental consent, We take\r\n          steps to remove that information from Our servers.\r\n          <br />\r\n          If We need to rely on consent as a legal basis for processing Your\r\n          information and Your country requires consent from a parent, We may\r\n          require Your parent's consent before We collect and use that\r\n          information.\r\n        </p>\r\n        <h2>Links to Other Websites</h2>\r\n        <p>\r\n          Our Service may contain links to other websites that are not operated\r\n          by Us. If You click on a third party link, You will be directed to\r\n          that third party's site. We strongly advise You to review the Privacy\r\n          Policy of every site You visit.\r\n          <br />\r\n          We have no control over and assume no responsibility for the content,\r\n          privacy policies or practices of any third party sites or services.\r\n        </p>\r\n        <h2>Changes to this Privacy Policy</h2>\r\n        <p>\r\n          We may update Our Privacy Policy from time to time. We will notify You\r\n          of any changes by posting the new Privacy Policy on this page.\r\n          <br />\r\n          We will let You know via email and/or a prominent notice on Our\r\n          Service, prior to the change becoming effective and update the \"Last\r\n          updated\" date at the top of this Privacy Policy.\r\n          <br />\r\n          You are advised to review this Privacy Policy periodically for any\r\n          changes. Changes to this Privacy Policy are effective when they are\r\n          posted on this page.\r\n        </p>\r\n        <h2>Contact Us</h2>\r\n        <p>\r\n          If you have any questions about this Privacy Policy, You can contact\r\n          us:\r\n        </p>\r\n        <ul>\r\n          <li>By email: spotmies@gmail.com</li>\r\n        </ul>\r\n      </article>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Privacy;\r\n","E:\\hemanth files\\js practise\\spotmies\\firstapp\\src\\components\\navbar.jsx",["147","148","149","150","151","152","153"],"E:\\hemanth files\\js practise\\spotmies\\firstapp\\src\\components\\mybooks.jsx",["154","155","156","157","158","159","160","161","162","163","164","165","166","167","168"],"import React, { Component } from \"react\";\r\nimport firebase from \"../firebase\";\r\nimport react, { useState, useEffect } from \"react\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport { Col, Row } from \"react-bootstrap\";\r\nimport {\r\n  Card,\r\n  Image,\r\n  Label,\r\n  Dropdown,\r\n  Icon,\r\n  Segment,\r\n  Dimmer,\r\n  Loader,\r\n} from \"semantic-ui-react\";\r\nimport \"../index.css\";\r\nimport \"../post.css\";\r\nimport { gettbystamps } from \"../mservices/dateconv\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { toast } from \"react-toastify\";\r\n\r\nimport \"semantic-ui-css/semantic.min.css\";\r\n//import { Card, Icon,Button,Header, Image, Modal,Step,Menu,Dropdown } from 'semantic-ui-react'\r\n\r\n//import icons\r\nimport { IconContext } from \"react-icons\";\r\nimport { BsEyeFill } from \"react-icons/bs\";\r\nimport { BiTimeFive } from \"react-icons/bi\";\r\nimport { RiPinDistanceFill } from \"react-icons/ri\";\r\nimport { HiOutlineCurrencyRupee } from \"react-icons/hi\";\r\nimport { MdDelete, MdCheckCircle, MdRemoveRedEye } from \"react-icons/md\";\r\nimport { AiFillEdit } from \"react-icons/ai\";\r\nimport { FiMoreHorizontal } from \"react-icons/fi\";\r\n\r\nconst db = firebase.firestore();\r\n\r\nfunction useTimes() {\r\n  const [times, setTimes] = useState([]);\r\n  useEffect(() => {\r\n    firebase.auth().onAuthStateChanged(function (user) {\r\n      if (user) {\r\n        db.collection(\"users\")\r\n          .doc(firebase.auth().currentUser.uid)\r\n          .collection(\"adpost\")\r\n          .onSnapshot((snap) => {\r\n            const newtimes = snap.docs.map((doc) => ({\r\n              id: doc.id,\r\n              ...doc.data(),\r\n            }));\r\n            setTimes(newtimes);\r\n          });\r\n      }\r\n    });\r\n  }, []);\r\n  return times;\r\n}\r\nconst Sekhar = () => {\r\n  const times = useTimes();\r\n  // console.log(times[0].media)\r\n  return (\r\n    <div className=\"responses\">\r\n      {/* <div className=\"comingSoon\">\r\n        <h1 className=\"soonText\">Coming Soon ...</h1>\r\n        </div> */}\r\n      <Mybookings data={times} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Sekhar;\r\n\r\nfunction Mybookings(props) {\r\n  const history = useHistory();\r\n\r\n  const click = (prop) => {\r\n    console.log(\"click\", prop);\r\n    history.push(`mybookings/id/${prop}`);\r\n  };\r\n\r\n  const edit = (prop) => {\r\n    console.log(\"click\", prop);\r\n    history.push(`mybookings/id/edit/${prop}`);\r\n  };\r\n  const delpost = (pro) => {\r\n    db.collection(\"users\")\r\n      .doc(firebase.auth().currentUser.uid)\r\n      .collection(\"adpost\")\r\n      .doc(pro)\r\n      .delete()\r\n      .then(() => {\r\n        //  alert(\"ad deleted succefully\");\r\n        toast.success(\"ad deleted succefully\");\r\n      });\r\n  };\r\n  return (\r\n    <div>\r\n      {props.data.length == 0 ? (\r\n        // <Col xs={12} lg={12}> <Segment className=\"rentcard\">\r\n        //           <Dimmer active inverted>\r\n        //             <Loader size='large'>Loading</Loader>\r\n        //           </Dimmer>\r\n\r\n        //           <Image src='/images/wireframe/paragraph.png' />\r\n        //          </Segment></Col>\r\n\r\n        <Card.Group>\r\n          <Card centered fluid id=\"book-card\">\r\n            <Card.Content>\r\n              <Card.Meta style={{ display: \"inline-flex\" }}>\r\n                <Icon name=\"time\" />{\" \"}\r\n              </Card.Meta>\r\n              <Dropdown\r\n                item\r\n                icon=\"ellipsis horizontal\"\r\n                simple\r\n                style={{ float: \"right\" }}\r\n              ></Dropdown>\r\n            </Card.Content>\r\n            <Card.Content\r\n              extra\r\n              style={{ display: \"inline-block\", cursor: \"pointer\" }}\r\n            >\r\n              {/* <Image\r\n      className=\"post-img\" \r\n      style={{width:\"100px\",height:\"80px\",borderRadius:\"1rem\",cursor:\"pointer\"}}\r\n      \r\n          floated='left'\r\n           />   */}\r\n              <Segment className=\"post-img\">\r\n                <Dimmer active inverted>\r\n                  <Loader size=\"large\">Loading</Loader>\r\n                </Dimmer>\r\n\r\n                <Image src=\"/images/wireframe/paragraph.png\" />\r\n              </Segment>\r\n            </Card.Content>\r\n          </Card>\r\n        </Card.Group>\r\n      ) : (\r\n        <Sematiccard data={props.data} />\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction Sematiccard(props) {\r\n  const history = useHistory();\r\n  const click = (prop) => {\r\n    console.log(\"click\", prop);\r\n    history.push(`mybookings/id/${prop}`);\r\n  };\r\n\r\n  const edit = (prop) => {\r\n    console.log(\"click\", prop);\r\n    history.push(`mybookings/id/edit/${prop}`);\r\n  };\r\n  const delpost = (pro) => {\r\n    db.collection(\"users\")\r\n      .doc(firebase.auth().currentUser.uid)\r\n      .collection(\"adpost\")\r\n      .doc(pro)\r\n      .delete()\r\n      .then(() => {\r\n        alert(\"ad deleted succefully\");\r\n        toast.success(\"ad deleted succefully\");\r\n      });\r\n  };\r\n\r\n  return (\r\n    <div style={{ paddingTop: \"30px\" }}>\r\n      {props.data.map((cap, key) => (\r\n        <Card.Group>\r\n          <Card centered fluid id=\"book-card\">\r\n            <Card.Content>\r\n              <Card.Meta style={{ display: \"inline-flex\" }}>\r\n                <Icon name=\"time\" />{\" \"}\r\n                {gettbystamps(Number(cap.posttime), \"fulldate\")} &nbsp;@&nbsp;\r\n                <b> {gettbystamps(Number(cap.posttime), \"time\")}</b>\r\n              </Card.Meta>\r\n              <Dropdown\r\n                item\r\n                icon=\"ellipsis horizontal\"\r\n                simple\r\n                style={{ float: \"right\" }}\r\n              >\r\n                <Dropdown.Menu>\r\n                  <Dropdown.Item onClick={(e) => click(cap.id)}>\r\n                    View post\r\n                  </Dropdown.Item>\r\n                  <Dropdown.Item onClick={(e) => edit(cap.orderid)}>\r\n                    Edit post\r\n                  </Dropdown.Item>\r\n                  <Dropdown.Item onClick={(e) => delpost(cap.orderid)}>\r\n                    Delete\r\n                  </Dropdown.Item>\r\n                </Dropdown.Menu>\r\n              </Dropdown>\r\n            </Card.Content>\r\n            <Card.Content\r\n              extra\r\n              style={{ display: \"inline-block\", cursor: \"pointer\" }}\r\n              onClick={(e) => click(cap.id)}\r\n            >\r\n              <Image\r\n                className=\"post-img\"\r\n                style={{ borderRadius: \"1rem\", cursor: \"pointer\" }}\r\n                floated=\"left\"\r\n                src={cap.media[0]}\r\n              />\r\n\r\n              <Card.Header style={{ paddingBottom: \"10px\", cursor: \"pointer\" }}>\r\n                {cap.problem}\r\n              </Card.Header>\r\n              <div style={{ display: \"inline-flex\" }}>\r\n                <div style={{ paddingRight: \"30px\" }}>\r\n                  <p>\r\n                    <BsEyeFill /> Views: {cap.views}\r\n                  </p>\r\n                  <p>\r\n                    <RiPinDistanceFill /> Distance: 1km\r\n                  </p>\r\n                </div>\r\n                <div>\r\n                  {String(cap.money) != \"NaN\" ? (\r\n                    <p>\r\n                      <HiOutlineCurrencyRupee /> Money: &#8377;{cap.money}\r\n                    </p>\r\n                  ) : (\r\n                    <p>\r\n                      <HiOutlineCurrencyRupee /> Money: &#8377;--\r\n                    </p>\r\n                  )}\r\n\r\n                  <p>\r\n                    <BiTimeFive /> Time: 1hr\r\n                  </p>\r\n                </div>\r\n              </div>\r\n            </Card.Content>\r\n            <Card.Content style={{ display: \"inline-flex\" }}>\r\n              <p onClick={(e) => click(cap.id)} style={{ cursor: \"pointer\" }}>\r\n                <BsEyeFill size=\"1.5rem\" />\r\n                <u>\r\n                  {\" \"}\r\n                  <b>View post</b>\r\n                </u>\r\n              </p>\r\n              {cap.orderstate == 2 ? (\r\n                <Label\r\n                  color=\"green\"\r\n                  attached=\"bottom right\"\r\n                  style={{\r\n                    marginRight: \"10px\",\r\n                    marginBottom: \"10px\",\r\n                    borderRadius: \"0.7rem\",\r\n                  }}\r\n                >\r\n                  <MdCheckCircle /> Completed\r\n                </Label>\r\n              ) : (\r\n                <Label\r\n                  color=\"blue\"\r\n                  attached=\"bottom right\"\r\n                  style={{\r\n                    marginRight: \"10px\",\r\n                    marginBottom: \"10px\",\r\n                    borderRadius: \"0.7rem\",\r\n                  }}\r\n                >\r\n                  Active\r\n                </Label>\r\n              )}\r\n            </Card.Content>\r\n          </Card>\r\n        </Card.Group>\r\n      ))}\r\n    </div>\r\n  );\r\n}\r\n\r\nfirebase.auth().onAuthStateChanged(function (user) {\r\n  if (user) {\r\n  }\r\n});\r\n","E:\\hemanth files\\js practise\\spotmies\\firstapp\\src\\components\\postview.jsx",["169","170","171","172","173","174","175","176","177","178","179","180","181","182","183","184","185","186","187","188","189"],"import React, { Component } from \"react\";\r\nimport firebase from \"../firebase\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport { Carousel } from \"react-bootstrap\";\r\nimport {\r\n  Card,\r\n  Icon,\r\n  Image,\r\n  Dropdown,\r\n  Label,\r\n  Step,\r\n  Button,\r\n  Rating,\r\n} from \"semantic-ui-react\";\r\nimport react, { useState, useEffect } from \"react\";\r\nimport { toast } from \"react-toastify\";\r\n\r\nimport {\r\n  MdDelete,\r\n  MdLocationOn,\r\n  MdAccessTime,\r\n  MdWatchLater,\r\n  MdCheckCircle,\r\n  MdAssignmentTurnedIn,\r\n  MdBuild,\r\n  MdThumbDown,\r\n  MdAccountCircle,\r\n  MdSmartphone,\r\n  MdPhone,\r\n  MdEmail,\r\n} from \"react-icons/md\";\r\nimport { AiFillEdit } from \"react-icons/ai\";\r\nimport { RiUserSettingsFill, RiTimeFill } from \"react-icons/ri\";\r\nimport { HiCurrencyRupee } from \"react-icons/hi\";\r\nimport { FaTools, FaAddressCard } from \"react-icons/fa\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport \"../assets/css/postView.css\";\r\nimport { categoryAssign } from \"./reusable/categories\";\r\nimport { gettbystamps } from \"../mservices/dateconv\";\r\n\r\nconst db = firebase.firestore();\r\n\r\nfunction useTimes() {\r\n  const [postdata, setdata] = useState([]);\r\n  const [posttime, setposttime] = useState([]);\r\n  useEffect(() => {\r\n    //\r\n    firebase.auth().onAuthStateChanged(function (user) {\r\n      if (user) {\r\n        let arr = [];\r\n\r\n        var personId;\r\n\r\n        personId = window.location.pathname;\r\n        personId = personId.replace(\"/mybookings/id/\", \"\");\r\n        db.collection(\"users\")\r\n          .doc(firebase.auth().currentUser.uid)\r\n          .collection(\"adpost\")\r\n          .doc(personId)\r\n          .onSnapshot((snap) => {\r\n            setdata(snap.data());\r\n            // arr.push(snap.data().posttime);\r\n            // arr.push(snap.data().schedule);\r\n            setposttime(arr);\r\n          });\r\n      }\r\n    });\r\n    //\r\n  }, []);\r\n  return { postdata, posttime };\r\n}\r\n\r\nconst Navbar3 = () => {\r\n  const history = useHistory();\r\n  const { postdata, posttime } = useTimes();\r\n\r\n  var media = [];\r\n  if (postdata.media) {\r\n    media = postdata.media;\r\n    console.log(\"times avail\");\r\n  } else console.log(\"time not\");\r\n  const click = (prop) => {\r\n    console.log(\"click\", prop);\r\n    history.push(`edit/${prop}`);\r\n  };\r\n  const delpost = (pro) => {\r\n    db.collection(\"users\")\r\n      .doc(firebase.auth().currentUser.uid)\r\n      .collection(\"adpost\")\r\n      .doc(pro)\r\n      .delete()\r\n      .then(() => {\r\n        // alert(\"ad deleted succefully\");\r\n        toast.success(\"ad deleted succefully\");\r\n      });\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <div>\r\n        <div style={{ paddingBottom: \"10px\" }}>\r\n          <Card\r\n            centered\r\n            color=\"blue\"\r\n            className=\"wholeCard\"\r\n            style={{\r\n              width: \"80%\",\r\n              marginBottom: \"50px\",\r\n              borderRadius: \"1rem\",\r\n            }}\r\n          >\r\n            <Card.Content>\r\n              <Card.Meta style={{ display: \"inline-flex\" }}>\r\n                <Icon name=\"time\" />{\" \"}\r\n                {gettbystamps(Number(postdata.posttime), \"fulldate\")}{\" \"}\r\n                &nbsp;@&nbsp;\r\n                <b> {gettbystamps(Number(postdata.posttime), \"time\")}</b>\r\n              </Card.Meta>\r\n              <Dropdown\r\n                item\r\n                icon=\"ellipsis horizontal\"\r\n                simple\r\n                style={{ float: \"right\" }}\r\n              >\r\n                <Dropdown.Menu>\r\n                  <Dropdown.Item onClick={(e) => click(postdata.orderid)}>\r\n                    <Icon name=\"edit\" />\r\n                    Edit post\r\n                  </Dropdown.Item>\r\n                  <Dropdown.Item onClick={(e) => delpost(postdata.orderid)}>\r\n                    <Icon name=\"trash\" /> Delete\r\n                  </Dropdown.Item>\r\n                </Dropdown.Menu>\r\n              </Dropdown>\r\n            </Card.Content>\r\n            <Card.Content>\r\n              <Carousel className=\"postImg\">\r\n                {media.map((nap) => (\r\n                  <Carousel.Item>\r\n                    <video\r\n                      centered\r\n                      className=\"postImg\"\r\n                      src={nap}\r\n                      poster={nap}\r\n                      autoPlay\r\n                      loop\r\n                      // style={{ borderRadius: \"1rem\" }}\r\n                    />\r\n                    <Carousel.Caption></Carousel.Caption>\r\n                  </Carousel.Item>\r\n                ))}\r\n              </Carousel>\r\n            </Card.Content>\r\n            <Card.Content>\r\n              <Card.Header textAlign=\"center\">\r\n                Title: <u>{postdata.problem}</u>\r\n              </Card.Header>\r\n            </Card.Content>\r\n\r\n            <div style={{ marginBottom: \"20px\" }}>\r\n              <Card.Group\r\n                className=\"cardHolder\"\r\n                style={{\r\n                  margin: \"0 auto\",\r\n                  width: \"fit-content\",\r\n                  justifyContent: \"center\",\r\n                }}\r\n              >\r\n                <Card\r\n                  className=\"postCard\"\r\n                  style={{ borderRadius: \"1rem\" }}\r\n                  color=\"blue\"\r\n                >\r\n                  <Card.Content>\r\n                    <Card.Meta>\r\n                      <Icon name=\"sticky note\" /> Description\r\n                    </Card.Meta>\r\n                    <Card.Description>\r\n                      <h3>{postdata.description}</h3>\r\n                    </Card.Description>\r\n                  </Card.Content>\r\n                </Card>\r\n\r\n                <Card\r\n                  className=\"postCard\"\r\n                  style={{ borderRadius: \"1rem\" }}\r\n                  color=\"green\"\r\n                >\r\n                  <Card.Content>\r\n                    <Card.Meta>\r\n                      <Icon name=\"rupee sign\" />\r\n                      Price\r\n                    </Card.Meta>\r\n                    {String(postdata.money) != \"NaN\" ? (\r\n                      <h2 style={{ textAlign: \"center\" }}>\r\n                        <Icon name=\"rupee sign\" />\r\n                        {postdata.money}\r\n                      </h2>\r\n                    ) : (\r\n                      <h2 style={{ textAlign: \"center\" }}>\r\n                        <Icon name=\"rupee sign\" />-\r\n                      </h2>\r\n                    )}\r\n                  </Card.Content>\r\n                  <Card.Content>\r\n                    {postdata.orderstate == 2 ? (\r\n                      <Label\r\n                        color=\"green\"\r\n                        attached=\"bottom right\"\r\n                        size=\"mini\"\r\n                        style={{\r\n                          marginRight: \"10px\",\r\n                          marginBottom: \"2%\",\r\n                          borderRadius: \"0.5rem\",\r\n                        }}\r\n                      >\r\n                        <MdCheckCircle /> Paid\r\n                      </Label>\r\n                    ) : (\r\n                      <Label\r\n                        color=\"blue\"\r\n                        attached=\"bottom right\"\r\n                        size=\"mini\"\r\n                        style={{\r\n                          marginRight: \"10px\",\r\n                          marginBottom: \"2%\",\r\n                          borderRadius: \"0.5rem\",\r\n                        }}\r\n                      >\r\n                        <MdWatchLater /> Not paid\r\n                      </Label>\r\n                    )}\r\n                  </Card.Content>\r\n                </Card>\r\n\r\n                <Card\r\n                  className=\"postCard\"\r\n                  style={{ borderRadius: \"1rem\", float: \"right\" }}\r\n                  color=\"orange\"\r\n                >\r\n                  <Card.Content>\r\n                    <Card.Meta>\r\n                      <Icon name=\"info circle\" /> Details\r\n                    </Card.Meta>\r\n                  </Card.Content>\r\n                  <Card.Content>\r\n                    <Card.Description>\r\n                      <h4>\r\n                        {\" \"}\r\n                        <MdLocationOn /> Location: {postdata.location}\r\n                      </h4>\r\n                      <h4>\r\n                        <RiUserSettingsFill /> category :\r\n                        {categoryAssign(postdata.job)}\r\n                      </h4>\r\n                      <h4>\r\n                        <RiTimeFill />\r\n                        posted time:\r\n                        {gettbystamps(\r\n                          Number(postdata.posttime),\r\n                          \"fulldate\"\r\n                        )}{\" \"}\r\n                        &nbsp;@&nbsp;\r\n                        <b>\r\n                          {\" \"}\r\n                          {gettbystamps(Number(postdata.posttime), \"time\")}\r\n                        </b>\r\n                      </h4>\r\n                    </Card.Description>\r\n                  </Card.Content>\r\n                </Card>\r\n              </Card.Group>\r\n            </div>\r\n\r\n            <Step.Group centered>\r\n              <Step>\r\n                <MdAssignmentTurnedIn size=\"2.8rem\" />\r\n                <Step.Content>\r\n                  <Step.Title> Adpost</Step.Title>\r\n                  <Step.Description>\r\n                    @ {gettbystamps(Number(postdata.posttime), \"fulldate\")}{\" \"}\r\n                    &nbsp;@&nbsp;\r\n                    <b> {gettbystamps(Number(postdata.posttime), \"time\")}</b>\r\n                  </Step.Description>\r\n                </Step.Content>\r\n              </Step>\r\n              {postdata.orderstate == 2 ? (\r\n                <Step>\r\n                  <MdBuild size=\"2.8rem\" />\r\n                  <Step.Content>\r\n                    <Step.Title> Service completed</Step.Title>\r\n                    <Step.Description>{postdata.servcmpld}</Step.Description>\r\n                  </Step.Content>\r\n                </Step>\r\n              ) : (\r\n                <Step>\r\n                  <MdBuild size=\"2.8rem\" />\r\n                  <Step.Content>\r\n                    <Step.Title> Service pending</Step.Title>\r\n                    <Step.Description>\r\n                      please confirm when service completed\r\n                    </Step.Description>\r\n                  </Step.Content>\r\n                </Step>\r\n              )}\r\n\r\n              {postdata.orderstate == 2 ? (\r\n                <Step completed>\r\n                  <Icon name=\"info\" />\r\n                  <Step.Content>\r\n                    <Step.Title>Order completed</Step.Title>\r\n                  </Step.Content>\r\n                </Step>\r\n              ) : (\r\n                <Step>\r\n                  <Icon name=\"info\" />\r\n                  <Step.Content>\r\n                    <Step.Title>Order pending</Step.Title>\r\n                  </Step.Content>\r\n                </Step>\r\n              )}\r\n            </Step.Group>\r\n            {postdata.orderstate != 2 ? (\r\n              <Cnfbtn id={postdata.orderid} />\r\n            ) : (\r\n              <span></span>\r\n            )}\r\n\r\n            {postdata.fback == 0 ? <Fback /> : <span></span>}\r\n            {postdata.partnerid ? (\r\n              <Partdetail id={postdata.partnerid} />\r\n            ) : (\r\n              <span></span>\r\n            )}\r\n\r\n            <Card.Content extra>\r\n              <a onClick={(e) => click(postdata.orderid)}>\r\n                <Icon name=\"edit\" />\r\n              </a>\r\n              &nbsp;\r\n              <a onClick={(e) => delpost(postdata.orderid)}>\r\n                <Icon name=\"trash\" />\r\n              </a>\r\n              {postdata.orderstate == 2 ? (\r\n                <Label\r\n                  color=\"green\"\r\n                  attached=\"bottom right\"\r\n                  style={{\r\n                    marginRight: \"10px\",\r\n                    marginBottom: \"5px\",\r\n                    borderRadius: \"0.5rem\",\r\n                  }}\r\n                >\r\n                  <MdCheckCircle /> Completed\r\n                </Label>\r\n              ) : (\r\n                <Label\r\n                  color=\"blue\"\r\n                  attached=\"bottom right\"\r\n                  style={{\r\n                    marginRight: \"10px\",\r\n                    marginBottom: \"5px\",\r\n                    borderRadius: \"0.5rem\",\r\n                  }}\r\n                >\r\n                  <MdWatchLater /> Pending\r\n                </Label>\r\n              )}\r\n            </Card.Content>\r\n          </Card>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Navbar3;\r\n\r\nclass Cnfbtn extends React.Component {\r\n  pending = (e) => {\r\n    console.log(e.target.parentElement.parentElement.id);\r\n    document.getElementById(\r\n      e.target.parentElement.parentElement.id\r\n    ).style.display = \"none\";\r\n  };\r\n  completed = (e) => {\r\n    console.log(this.props.id);\r\n    db.collection(\"users\")\r\n      .doc(firebase.auth().currentUser.uid)\r\n      .collection(\"adpost\")\r\n      .doc(this.props.id)\r\n      .update({\r\n        orderstate: 2,\r\n        fback: 0,\r\n      });\r\n  };\r\n  render() {\r\n    return (\r\n      <div id=\"cnfbutton\" className=\"cnfButton\">\r\n        <Button.Group\r\n          style={{\r\n            width: \"70%\",\r\n            display: \"flex\",\r\n            justifyContent: \"center\",\r\n            alignItems: \"center\",\r\n          }}\r\n        >\r\n          <Button onClick={this.pending}>\r\n            <MdThumbDown size=\"1.6rem\" /> Pending\r\n          </Button>\r\n          <Button.Or />\r\n          <Button color=\"blue\" onClick={this.completed}>\r\n            <MdCheckCircle size=\"1.6rem\" /> Completed\r\n          </Button>\r\n        </Button.Group>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nclass Fback extends React.Component {\r\n  state = {};\r\n\r\n  handleRate = (e, { rating, maxRating }) => {\r\n    this.setState({ rating, maxRating });\r\n    console.log(this.state.rating);\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div style={{ alignContent: \"center\", textAlign: \"center\" }}>\r\n        <h3>Please rate the service</h3>\r\n        <Rating\r\n          maxRating={5}\r\n          clearable\r\n          size=\"massive\"\r\n          style={{ width: \"30%\" }}\r\n          onRate={this.handleRate}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nfunction Partdetail(props) {\r\n  const [pdata, setpdata] = useState([]);\r\n  console.log(props.id);\r\n  useEffect(() => {\r\n    db.collection(\"partner\")\r\n      .doc(props.id)\r\n      .collection(\"ProfileInfo\")\r\n      .doc(props.id)\r\n      .get()\r\n      .then((snap) => {\r\n        setpdata(snap.data());\r\n      })\r\n      .then(() => {\r\n        console.log(pdata);\r\n      });\r\n  }, []);\r\n\r\n  var dhref = \"tel: +91 \" + pdata.phone;\r\n\r\n  return (\r\n    <div style={{ paddingBottom: \"50px\", paddingTop: \"40px\" }}>\r\n      <Card\r\n        centered\r\n        color=\"blue\"\r\n        style={{ borderRadius: \"1rem\", width: \"80%\" }}\r\n      >\r\n        <Card.Content>\r\n          <Card.Header style={{ textAlign: \"center\" }}>\r\n            <Card.Meta>\r\n              <MdAccountCircle size=\"2rem\" /> Technician Details\r\n            </Card.Meta>\r\n          </Card.Header>\r\n        </Card.Content>\r\n        <Card.Content>\r\n          <img\r\n            src={pdata.profilepic}\r\n            style={{ width: \"100%\", borderRadius: \"1rem\", height: \"100%\" }}\r\n          />\r\n        </Card.Content>\r\n        <Card.Content style={{ textAlign: \"center\" }}>\r\n          <Card.Header>\r\n            <h2>\r\n              <MdAccountCircle /> {pdata.name}\r\n            </h2>\r\n          </Card.Header>\r\n          <Card.Meta>\r\n            <span>\r\n              <small>\r\n                <MdSmartphone /> {pdata.phone}\r\n              </small>\r\n            </span>\r\n            <span>\r\n              <small>\r\n                <MdPhone /> {pdata.altNum}\r\n              </small>\r\n            </span>\r\n            <span>\r\n              <small>\r\n                <MdEmail /> {pdata.email}\r\n              </small>\r\n            </span>\r\n          </Card.Meta>\r\n          <Card.Description>{pdata.desc}</Card.Description>\r\n        </Card.Content>\r\n\r\n        <Card centered color=\"orange\" style={{ borderRadius: \"1rem\" }}>\r\n          <Card.Content>\r\n            <Card.Header>\r\n              <FaAddressCard /> Technician address\r\n            </Card.Header>\r\n          </Card.Content>\r\n          <Card.Content>\r\n            <Card.Description>{pdata.addrs}</Card.Description>\r\n          </Card.Content>\r\n        </Card>\r\n        <Card.Content extra>\r\n          <a href={dhref}>\r\n            <MdPhone size=\"1.3rem\" />\r\n            Call\r\n          </a>\r\n          <a style={{ float: \"right\" }}>\r\n            <Icon name=\"setting\" />\r\n            <Dropdown text=\"more\">\r\n              <Dropdown.Menu>\r\n                <Dropdown.Item text=\"Raise complaint\" />\r\n                <Dropdown.Item text=\"Report\" />\r\n              </Dropdown.Menu>\r\n            </Dropdown>\r\n          </a>\r\n        </Card.Content>\r\n      </Card>\r\n    </div>\r\n  );\r\n}\r\n","E:\\hemanth files\\js practise\\spotmies\\firstapp\\src\\components\\profile.jsx",["190","191","192","193","194","195","196","197","198","199"],"import React, { Component } from \"react\";\r\nimport pic from \"../images/logo192.png\";\r\nimport firebase from \"../firebase\";\r\nimport { useState, useEffect } from \"react\";\r\nimport { Button, Form, InputGroup, FormControl } from \"react-bootstrap\";\r\nimport { Card, Icon, Image, Dropdown } from \"semantic-ui-react\";\r\nimport { toast } from \"react-toastify\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { sharemydetails } from \"../mservices/userDB\";\r\n\r\nimport \"../index.css\";\r\nimport \"../assets/css/profile.css\";\r\n\r\nimport imageCompression from \"browser-image-compression\";\r\n\r\nimport {\r\n  MdAccountCircle,\r\n  MdPhone,\r\n  MdEmail,\r\n  MdSmartphone,\r\n} from \"react-icons/md\";\r\n\r\nconst db = firebase.firestore();\r\nconst storage = firebase.storage();\r\n\r\nclass Profile extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      profile: {},\r\n    };\r\n    this.handlechange = this.handlechange.bind(this);\r\n    this.editpro = this.editpro.bind(this);\r\n  }\r\n\r\n  async componentDidMount() {\r\n    if (firebase.auth().currentUser.uid) {\r\n      let details = await sharemydetails(firebase.auth().currentUser.uid);\r\n      this.setState({ profile: details });\r\n    }\r\n  }\r\n\r\n  async componentDidUpdate() {\r\n    if (this.state.profile.name == \"\") {\r\n      let details = await sharemydetails(firebase.auth().currentUser.uid);\r\n      this.setState({ profile: details });\r\n    }\r\n  }\r\n\r\n  userlogout() {\r\n    firebase\r\n      .auth()\r\n      .signOut()\r\n      .then(function () {\r\n        //  alert(\"logout successfully\");\r\n        toast.success(\"Logout Successfully\");\r\n        this.props.history.push(\"/\");\r\n        setTimeout(() => {}, 1000);\r\n        window.location.reload();\r\n      });\r\n  }\r\n\r\n  editpro(e) {\r\n    toast.info(\"Details Updating...\");\r\n    e.preventDefault();\r\n    db.collection(\"users\")\r\n      .doc(firebase.auth().currentUser.uid)\r\n      .update({\r\n        name: this.state.profile.name,\r\n        email: this.state.profile.email,\r\n        pic: document.getElementById(\"editpic\").src,\r\n        altnum: this.state.profile.altnum,\r\n      })\r\n      .then(() => {\r\n        // alert(\"details updated...\");\r\n        toast.success(\"Details Updated\");\r\n        document.querySelector(\".editpro\").style.display = \"none\";\r\n        let temp = this.state.profile;\r\n        temp[\"pic\"] = document.getElementById(\"editpic\").src;\r\n        this.setState({ profile: temp });\r\n\r\n        // window.location.reload();\r\n      });\r\n  }\r\n\r\n  async upldimg(e) {\r\n    const options = {\r\n      maxSizeMB: 0.2,\r\n      maxWidthOrHeight: 800,\r\n      useWebWorker: true,\r\n    };\r\n    let cfile;\r\n\r\n    var file = e.target.files[0];\r\n\r\n    await imageCompression(file, options)\r\n      .then((x) => {\r\n        cfile = x;\r\n      })\r\n      .catch(function (error) {\r\n        console.log(error.message);\r\n      });\r\n\r\n    console.log(\"fileis\", file.name);\r\n    var uploaderb = document.querySelector(\"#uploaderb\");\r\n    uploaderb.style.display = \"block\";\r\n    // crate storage ref\r\n    var storageref = storage.ref(\r\n      `users/${firebase.auth().currentUser.uid}/profile/` + cfile.name\r\n    );\r\n\r\n    //upload file\r\n    var task = storageref.put(cfile);\r\n\r\n    //update progress bar\r\n    task.on(\r\n      \"state_changed\",\r\n      function progress(snapshot) {\r\n        var percentage =\r\n          (snapshot.bytesTransferred / snapshot.totalBytes) * 100;\r\n        uploaderb.value = percentage;\r\n      },\r\n      function error(err) {\r\n        console.log(err);\r\n      },\r\n      function complete() {\r\n        console.log(\"adhar back uploaded successfully \");\r\n        task.snapshot.ref.getDownloadURL().then(function (downloadURL) {\r\n          console.log(\"File available at\", downloadURL);\r\n          document.getElementById(\"editpic\").setAttribute(\"src\", downloadURL);\r\n          uploaderb.style.display = \"none\";\r\n        });\r\n      }\r\n    );\r\n  }\r\n  handlechange(e) {\r\n    let value = e.target.value;\r\n    let id = e.target.id;\r\n    console.log(id, value);\r\n    let temp = this.state.profile;\r\n\r\n    temp[id] = value;\r\n    this.setState({ profile: temp });\r\n  }\r\n  render() {\r\n    // document.getElementById(\"name\").value = this.state.profile.name;\r\n    // document.getElementById(\"email\").value = this.state.profile.email;\r\n    // document.getElementById(\"altnum\").value = this.state.profile.altnum;\r\n    // document.getElementById(\"editpic\").src = this.state.profile.pic;\r\n    return (\r\n      <div>\r\n        <div style={{ paddingBottom: \"50px\" }}>\r\n          <Card\r\n            centered\r\n            color=\"blue\"\r\n            // style={{ width: wWidth > 625 ? \"50%\" : \"85%\" }}\r\n            className=\"detailsContainer\"\r\n          >\r\n            <Card.Content>\r\n              <Card.Header style={{ textAlign: \"center\" }}>\r\n                <Card.Meta>\r\n                  <MdAccountCircle size=\"2rem\" /> Account Details\r\n                </Card.Meta>\r\n              </Card.Header>\r\n\r\n              <Dropdown\r\n                item\r\n                icon=\"ellipsis horizontal\"\r\n                simple\r\n                style={{ float: \"right\" }}\r\n              >\r\n                <Dropdown.Menu>\r\n                  <Dropdown.Item>\r\n                    <Icon name=\"edit\" />\r\n                    Edit post\r\n                  </Dropdown.Item>\r\n                  <Dropdown.Item>\r\n                    <Icon name=\"trash\" /> Delete\r\n                  </Dropdown.Item>\r\n                </Dropdown.Menu>\r\n              </Dropdown>\r\n            </Card.Content>\r\n            <Card.Content>\r\n              <img src={this.state.profile.pic} className=\"postImg\" />\r\n            </Card.Content>\r\n            <Card.Content style={{ textAlign: \"center\" }}>\r\n              <Card.Header>\r\n                <h2>\r\n                  <MdAccountCircle /> {this.state.profile.name}\r\n                </h2>\r\n              </Card.Header>\r\n              <Card.Meta>\r\n                <span className=\"accInfo\">\r\n                  <small>\r\n                    <MdSmartphone className=\"Icons\" />{\" \"}\r\n                    {this.state.profile.phone}\r\n                  </small>\r\n                </span>\r\n                <span className=\"accInfo\">\r\n                  <small>\r\n                    <MdPhone className=\"Icons\" /> {this.state.profile.altnum}\r\n                  </small>\r\n                </span>\r\n                <span className=\"accInfo\">\r\n                  <small>\r\n                    <MdEmail className=\"Icons\" /> {this.state.profile.email}\r\n                  </small>\r\n                </span>\r\n              </Card.Meta>\r\n              <Card.Description>{this.state.profile.desc}</Card.Description>\r\n            </Card.Content>\r\n            <Card.Content extra>\r\n              <a>\r\n                <Icon name=\"setting\" />\r\n                <Dropdown text=\"Settings\">\r\n                  <Dropdown.Menu>\r\n                    <Dropdown.Item\r\n                      text=\"Edit my profile\"\r\n                      onClick={this.editdet}\r\n                    />\r\n                    <Dropdown.Item\r\n                      text=\"Delete my account\"\r\n                      onClick={this.delmyac}\r\n                    />\r\n                  </Dropdown.Menu>\r\n                </Dropdown>\r\n              </a>\r\n              <a onClick={this.userlogout} style={{ float: \"right\" }}>\r\n                <Icon name=\"sign-out\" />\r\n                Logout\r\n              </a>\r\n            </Card.Content>\r\n          </Card>\r\n        </div>\r\n\r\n        <div>\r\n          <div className=\"editpro\">\r\n            <Form className=\"EditForm\" onSubmit={this.editpro}>\r\n              <Form.Group controlId=\"formBasicEmail\">\r\n                <p\r\n                  className=\"crossBtn\"\r\n                  onClick={(e) =>\r\n                    (document.querySelector(\".editpro\").style.display = \"none\")\r\n                  }\r\n                >\r\n                  X\r\n                </p>\r\n\r\n                <InputGroup className=\"mb-2 mr-sm-2\">\r\n                  <input\r\n                    id=\"fileid\"\r\n                    type=\"file\"\r\n                    onChange={this.upldimg}\r\n                    hidden\r\n                  />\r\n                  <img\r\n                    className=\"post-img\"\r\n                    id=\"editpic\"\r\n                    style={{ cursor: \"pointer\", border: \"none\" }}\r\n                    itemType=\"file\"\r\n                    onClick={this.uploadpic}\r\n                    src={this.state.profile.pic}\r\n                    alt=\"\"\r\n                  />\r\n                  <div\r\n                    className=\"post-img imageOverlay\"\r\n                    id=\"editpic\"\r\n                    style={{ cursor: \"pointer\" }}\r\n                    itemType=\"file\"\r\n                    onClick={this.uploadpic}\r\n                  >\r\n                    +\r\n                  </div>\r\n                  <progress value=\"0\" max=\"100\" id=\"uploaderb\">\r\n                    0%\r\n                  </progress>\r\n                </InputGroup>\r\n\r\n                <Form.Label htmlFor=\"inlineFormInputGroupUsername2\" srOnly>\r\n                  Username\r\n                </Form.Label>\r\n                <InputGroup className=\"mb-2 mr-sm-2\">\r\n                  <InputGroup.Prepend>\r\n                    <InputGroup.Text>@</InputGroup.Text>\r\n                  </InputGroup.Prepend>\r\n                  <FormControl\r\n                    id=\"name\"\r\n                    placeholder=\"Enter your name\"\r\n                    required\r\n                    value={this.state.profile.name}\r\n                    onChange={this.handlechange}\r\n                  />\r\n                </InputGroup>\r\n              </Form.Group>\r\n\r\n              <Form.Group controlId=\"formBasicPassword\">\r\n                <InputGroup className=\"mb-2 mr-sm-2\">\r\n                  <InputGroup.Prepend>\r\n                    <InputGroup.Text>@</InputGroup.Text>\r\n                  </InputGroup.Prepend>\r\n                  <FormControl\r\n                    id=\"email\"\r\n                    placeholder=\"Enter your email \"\r\n                    value={this.state.profile.email}\r\n                    onChange={this.handlechange}\r\n                  />\r\n                </InputGroup>\r\n              </Form.Group>\r\n\r\n              <Form.Group controlId=\"formBasicPassword\">\r\n                <InputGroup className=\"mb-2 mr-sm-2\">\r\n                  <InputGroup.Prepend>\r\n                    <InputGroup.Text>@</InputGroup.Text>\r\n                  </InputGroup.Prepend>\r\n                  <FormControl\r\n                    id=\"altnum\"\r\n                    placeholder=\"Enter your alternative phone number\"\r\n                    value={this.state.profile.altnum}\r\n                    onChange={this.handlechange}\r\n                  />\r\n                </InputGroup>\r\n              </Form.Group>\r\n\r\n              <Button variant=\"primary\" type=\"submit\">\r\n                Submit\r\n              </Button>\r\n            </Form>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n  delmyac() {\r\n    var r = window.confirm(\r\n      \"you can't recover to do this all data about you deleted\"\r\n    );\r\n    if (r == true) {\r\n      db.collection(\"users\")\r\n        .doc(firebase.auth().currentUser.uid)\r\n        .delete()\r\n        .then(() => {\r\n          firebase\r\n            .auth()\r\n            .signOut()\r\n            .then(function () {\r\n              window.location.href = \"http://localhost:3000/\";\r\n            });\r\n        });\r\n    }\r\n  }\r\n  uploadpic(e) {\r\n    e.preventDefault();\r\n    document.getElementById(\"fileid\").click();\r\n  }\r\n\r\n  editdet(e) {\r\n    document.querySelector(\".editpro\").style.display = \"block\";\r\n  }\r\n}\r\n\r\nexport default withRouter(Profile);\r\n","E:\\hemanth files\\js practise\\spotmies\\firstapp\\src\\components\\chat.jsx",[],"E:\\hemanth files\\js practise\\spotmies\\firstapp\\src\\components\\signup.jsx",["200","201","202"],"E:\\hemanth files\\js practise\\spotmies\\firstapp\\src\\components\\contact.jsx",["203"],"import React, { Component } from \"react\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\n\r\nimport GoogleMapReact from \"google-map-react\";\r\nimport { contactus } from \"../mservices/contactUs\";\r\nimport { toast } from \"react-toastify\";\r\nimport { MdFeedback } from \"react-icons/md\";\r\nimport { Button, Form } from \"react-bootstrap\";\r\n//feedback form\r\nimport { FeedbackForm } from \"./reusable/Modal\";\r\n\r\nconst AnyReactComponent = ({ text }) => <div>{text}</div>;\r\n\r\nclass SimpleMap extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      details: {\r\n        email: null,\r\n        name: null,\r\n        phone: null,\r\n        sub: null,\r\n        message: null,\r\n        date: Math.round(+new Date() / 1000),\r\n      },\r\n      open: false,\r\n      wWidth: window.innerWidth,\r\n    };\r\n    this.handlec = this.handlec.bind(this);\r\n    this.submitForm = this.submitForm.bind(this);\r\n  }\r\n\r\n  handleResize = (e) => {\r\n    this.setState({ wWidth: window.innerWidth });\r\n  };\r\n  closeModal = () => {\r\n    this.setState({ open: false });\r\n  };\r\n  componentDidMount() {\r\n    window.addEventListener(\"resize\", this.handleResize);\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    window.addEventListener(\"resize\", this.handleResize);\r\n  }\r\n\r\n  static defaultProps = {\r\n    center: {\r\n      lat: 59.95,\r\n      lng: 30.33,\r\n    },\r\n    zoom: 11,\r\n  };\r\n\r\n  handlec(e) {\r\n    let nameId = e.target.name;\r\n    let value = e.target.value;\r\n    //console.log(value,nameId);\r\n    let temp = this.state.details;\r\n    temp[nameId] = value;\r\n    temp[\"date\"] = Math.round(+new Date() / 1000);\r\n    this.setState({\r\n      details: temp,\r\n    });\r\n  }\r\n\r\n  async submitForm(e) {\r\n    e.preventDefault();\r\n    //console.log(this.state.details);\r\n    let temp = JSON.stringify(this.state.details);\r\n    //console.log(temp)\r\n    //console.log(JSON.parse(temp));\r\n    let result = await contactus(temp);\r\n    if (result == 200) {\r\n      this.clearfield();\r\n      toast.success(\"Thank you we will contact you soon...\");\r\n    } else toast.info(\"please try again\");\r\n  }\r\n\r\n  clearfield() {\r\n    let tempd = this.state.details;\r\n    tempd = {\r\n      email: \"\",\r\n      name: \"\",\r\n      phone: \"\",\r\n      sub: \"\",\r\n      message: \"\",\r\n      date: new Date(),\r\n    };\r\n    this.setState({\r\n      details: tempd,\r\n    });\r\n  }\r\n\r\n  render() {\r\n    let det = this.state.details;\r\n\r\n    return (\r\n      //   Important! Always set the container height explicitly\r\n      <div\r\n        style={{\r\n          height: \"100vh\",\r\n          width: \"95%\",\r\n          marginLeft: \"2%\",\r\n          alignItems: \"center\",\r\n        }}\r\n      >\r\n        <GoogleMapReact\r\n          bootstrapURLKeys={{ key: \"AIzaSyDUAqHmXwTZU1caOWJ-LC-dBl3R7uzOkPo\" }}\r\n          defaultCenter={this.props.center}\r\n          defaultZoom={this.props.zoom}\r\n        >\r\n          <AnyReactComponent lat={59.955413} lng={30.337844} text=\"SpotMiess\" />\r\n        </GoogleMapReact>\r\n        <div\r\n          style={{\r\n            marginTop: \"30px\",\r\n            width: this.state.wWidth > 625 ? \"50%\" : \"85%\",\r\n          }}\r\n          className=\"contactAddress\"\r\n        >\r\n          <h2>Our Phones are waiting for your call!</h2>\r\n          <hr></hr>\r\n          <h3>Email:</h3>\r\n          <p>modernsilpi@gmail.com</p>\r\n          <h3>Mobile no:</h3>\r\n          <p>9502831877</p>\r\n          <h3>Address:</h3>\r\n          <p>\r\n            D.No: 58-38-10,<br></br> KRM Colony,<br></br> Visakhapatnam,\r\n            <br></br> Andhra Pradesh,<br></br> 530027.\r\n          </p>\r\n        </div>\r\n        <hr></hr>\r\n        <Form\r\n          className=\"contactForm\"\r\n          style={{ width: this.state.wWidth > 625 ? \"50%\" : \"85%\" }}\r\n          onSubmit={this.submitForm}\r\n        >\r\n          <h2>Wanna say something?</h2>\r\n          <Form.Group controlId=\"exampleForm.ControlInput1\">\r\n            <Form.Label>Email address</Form.Label>\r\n            <Form.Control\r\n              type=\"email\"\r\n              placeholder=\"name@example.com\"\r\n              value={det.email}\r\n              name=\"email\"\r\n              onChange={this.handlec}\r\n              required\r\n            />\r\n          </Form.Group>\r\n          <Form.Group controlId=\"exampleForm.ControlInput1\">\r\n            <Form.Label>Name</Form.Label>\r\n            <Form.Control\r\n              type=\"text\"\r\n              placeholder=\"pallavi mella\"\r\n              name=\"name\"\r\n              value={det.name}\r\n              onChange={this.handlec}\r\n              required\r\n            />\r\n          </Form.Group>\r\n          <Form.Group controlId=\"exampleForm.ControlInput1\">\r\n            <Form.Label>Mobile no:</Form.Label>\r\n            <Form.Control\r\n              type=\"number\"\r\n              placeholder=\"9999999999\"\r\n              name=\"phone\"\r\n              value={det.phone}\r\n              onChange={this.handlec}\r\n              required\r\n            />\r\n          </Form.Group>\r\n\r\n          <Form.Group controlId=\"exampleForm.ControlTextarea1\">\r\n            <Form.Label>Subject</Form.Label>\r\n            <Form.Control\r\n              as=\"textarea\"\r\n              placeholder=\"ex:- want to approach spotmies\"\r\n              rows={1}\r\n              name=\"sub\"\r\n              value={det.sub}\r\n              onChange={this.handlec}\r\n            />\r\n          </Form.Group>\r\n          <Form.Group controlId=\"exampleForm.ControlTextarea1\">\r\n            <Form.Label>Message</Form.Label>\r\n            <Form.Control\r\n              as=\"textarea\"\r\n              rows={3}\r\n              placeholder=\"put what you want to message\"\r\n              name=\"message\"\r\n              value={det.message}\r\n              onChange={this.handlec}\r\n              required\r\n            />\r\n          </Form.Group>\r\n          <Button variant=\"primary\" type=\"submit\">\r\n            Submit\r\n          </Button>\r\n        </Form>\r\n        <div\r\n          className=\"feedBack \"\r\n          onClick={() => this.setState({ open: true })}\r\n        >\r\n          <MdFeedback className=\"feedBackIcon\" />\r\n        </div>\r\n        <FeedbackForm open={this.state.open} close={this.closeModal} />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default SimpleMap;\r\n","E:\\hemanth files\\js practise\\spotmies\\firstapp\\src\\components\\newpost2.jsx",["204","205","206","207","208","209","210","211","212","213"],"import React, { Component } from \"react\";\r\n\r\nimport {\r\n  Button,\r\n  Form,\r\n  Input,\r\n  TextArea,\r\n  Card,\r\n  Label,\r\n  Image,\r\n  Modal,\r\n  Menu,\r\n} from \"semantic-ui-react\";\r\n\r\nimport { InputGroup } from \"react-bootstrap\";\r\nimport DatePicker from \"react-datepicker\";\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\nimport { toast } from \"react-toastify\";\r\n\r\nimport { BsCalendar } from \"react-icons/bs\";\r\nimport { Link } from \"react-router-dom\";\r\nimport imageCompression from \"browser-image-compression\";\r\nimport \"./rental.css\";\r\n\r\nimport {\r\n  MdLaptopMac,\r\n  MdTv,\r\n  MdEventNote,\r\n  MdDriveEta,\r\n  MdFace,\r\n  MdCheckCircle,\r\n  MdFileUpload,\r\n} from \"react-icons/md\";\r\nimport { BiCodeBlock } from \"react-icons/bi\";\r\nimport { FaChalkboardTeacher, FaTools } from \"react-icons/fa\";\r\nimport { IoCameraSharp } from \"react-icons/io5\";\r\n\r\nimport firebase from \"../firebase\";\r\nimport \"firebase/storage\";\r\nimport { createHashHistory } from \"history\";\r\n\r\nimport \"../post.css\";\r\n\r\nconst history = createHashHistory();\r\n\r\nconst db = firebase.firestore();\r\nconst storage = firebase.storage();\r\n\r\n//var imgarr=['https://www.w3schools.com/howto/img_snow.jpg','https://www.w3schools.com/howto/img_snow.jpg'];\r\n\r\nvar imgarr = [];\r\nvar jobcate;\r\n\r\nexport default function newpost2() {\r\n  return (\r\n    <div>\r\n      {/* <div className=\"comingSoon\">\r\n        <h1 className=\"soonText\">Coming Soon ...</h1>\r\n        </div> */}\r\n      <Postnew />\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction Postnew() {\r\n  return (\r\n    <div style={{ paddingTop: \"20px\" }}>\r\n      <Card centered id=\"formcard\" className=\"postjobb1\">\r\n        <Card.Content>\r\n          <Card.Header style={{ textAlign: \"center\" }}>New Post</Card.Header>\r\n        </Card.Content>\r\n        <Card.Content>\r\n          <Postform />\r\n        </Card.Content>\r\n      </Card>\r\n      <ModalExampleModal />\r\n    </div>\r\n  );\r\n}\r\nvar src = \"https://www.w3schools.com/howto/img_snow.jpg\";\r\n\r\nclass Postform extends Component {\r\n  state = {};\r\n\r\n  handleChange = (e, { value }) => this.setState({ value });\r\n\r\n  //from old\r\n\r\n  //date picker code here\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      startDate: \"\",\r\n      sekcate: \"\",\r\n      arrayvar: [],\r\n      mopen: false,\r\n      image: [],\r\n      imgurl: \"\",\r\n      valprogress: 0,\r\n      addsubmit: false,\r\n      pflag: false,\r\n    };\r\n    this.handleChange2 = this.handleChange2.bind(this);\r\n  }\r\n\r\n  handleChange2(date) {\r\n    console.log(this.state.arrayvar);\r\n\r\n    this.setState({\r\n      startDate: date,\r\n    });\r\n  }\r\n\r\n  componentDidUpdate() {\r\n    if (this.state.image.length > 0) {\r\n      if (this.state.image.length == this.state.arrayvar.length) {\r\n        this.handleSubmit();\r\n      }\r\n    }\r\n  }\r\n\r\n  handleSubmit = async () => {\r\n    // event.preventDefault();\r\n    console.log(this.state.arrayvar);\r\n    let schedule = this.state.startDate;\r\n    let name = document.querySelector(\"#nameofserv\").value;\r\n    let desc = document.querySelector(\"#sdesc\").value;\r\n\r\n    let cat = jobcate;\r\n    let price = document.querySelector(\"#sprice\").value;\r\n    if (desc == NaN) desc = \"\";\r\n    if (cat == \"true\") {\r\n      alert(\"please select category\");\r\n      toast.warning(\"please select category\");\r\n    } else {\r\n      cat = parseInt(cat);\r\n      price = parseInt(price);\r\n      console.log(name, desc, cat, price, imgarr, schedule);\r\n      const newpost = db\r\n        .collection(\"users\")\r\n        .doc(firebase.auth().currentUser.uid)\r\n        .collection(\"adpost\")\r\n        .doc();\r\n      var d = new Date();\r\n      console.log(d);\r\n      newpost\r\n        .set({\r\n          job: cat,\r\n          problem: name,\r\n          description: desc,\r\n          money: price,\r\n          userid: firebase.auth().currentUser.uid,\r\n          orderid: newpost.id,\r\n          media: this.state.arrayvar,\r\n          request: \"nothing\",\r\n          posttime: d,\r\n          views: 0,\r\n          location: \"seethammadhara\",\r\n          schedule: schedule,\r\n          orderstate: null,\r\n          fback: null,\r\n        })\r\n        .then(() => {\r\n          return db.collection(\"allads\").doc(newpost.id).set({\r\n            job: cat,\r\n            problem: name,\r\n            description: desc,\r\n            money: price,\r\n            userid: firebase.auth().currentUser.uid,\r\n            orderid: newpost.id,\r\n            media: this.state.arrayvar,\r\n            request: \"nothing\",\r\n            posttime: d,\r\n            views: 0,\r\n            location: \"seethammadhara\",\r\n            schedule: schedule,\r\n            orderstate: null,\r\n            fback: null,\r\n          });\r\n        })\r\n        .then(() => {\r\n          // alert(\"post added successfully\");\r\n          toast.success(\"post added successfully\");\r\n          history.go(-1);\r\n          imgarr = [];\r\n          this.setState({ image: [], addsubmit: false, arrayvar: [] });\r\n        });\r\n    }\r\n  };\r\n\r\n  handleChangeg = (e) => {\r\n    const options = {\r\n      maxSizeMB: 0.15,\r\n      maxWidthOrHeight: 800,\r\n      useWebWorker: true,\r\n    };\r\n    let cfile;\r\n\r\n    // this.setState({image:[]})\r\n    for (var i = 0; i < e.target.files.length; i++) {\r\n      let k = Number(i);\r\n\r\n      imageCompression(e.target.files[k], options)\r\n        .then((x) => {\r\n          cfile = x;\r\n          this.setState({\r\n            image: this.state.image.concat([cfile]),\r\n          });\r\n          console.log(cfile);\r\n          document.getElementById(\"upldbtn\").style.display = \"block\";\r\n        })\r\n        .catch(function (error) {\r\n          console.log(error.message);\r\n        });\r\n    }\r\n  };\r\n\r\n  handleUpload = async (e) => {\r\n    e.preventDefault();\r\n    document.getElementById(\"uploaderb\").style.display = \"block\";\r\n    document.getElementById(\"upldbtn\").style.display = \"none\";\r\n\r\n    console.log(this.state.image);\r\n    console.log(this.state.image.length);\r\n    for (var i = 0; i < this.state.image.length; i++) {\r\n      console.log(`img no ${i}`);\r\n      let k = Number(i);\r\n      const uploadTask = storage\r\n        .ref(\r\n          `users/${firebase.auth().currentUser.uid}/adpost/${\r\n            this.state.image[k].name\r\n          }`\r\n        )\r\n        .put(this.state.image[k]);\r\n      uploadTask.on(\r\n        \"state_changed\",\r\n        (snapshot) => {\r\n          const progress = Math.round(\r\n            (snapshot.bytesTransferred / snapshot.totalBytes) * 100\r\n          );\r\n          // setProgress(progress);\r\n          this.setState({ valprogress: progress });\r\n        },\r\n        (error) => {\r\n          console.log(error);\r\n        },\r\n        () => {\r\n          storage\r\n            .ref(`users/${firebase.auth().currentUser.uid}/adpost/`)\r\n            .child(this.state.image[k].name)\r\n            .getDownloadURL()\r\n            .then((url) => {\r\n              //setUrl(url);\r\n              console.log(url);\r\n\r\n              this.setState({\r\n                arrayvar: this.state.arrayvar.concat([url]),\r\n              });\r\n            });\r\n        }\r\n      );\r\n    }\r\n    if (this.state.image.length < 1) this.handleSubmit();\r\n  };\r\n\r\n  newfunk = (e) => {\r\n    console.log(e.target.id);\r\n    this.setState({ jobcate: e.target.id });\r\n    this.setState({ mopen: true });\r\n  };\r\n\r\n  sekhararr = (e) => {\r\n    console.log(e.target.parentElement.parentElement.id);\r\n    let ritem = this.state.image[e.target.parentElement.parentElement.id];\r\n    this.setState({\r\n      image: this.state.image.filter((e) => e !== ritem),\r\n    });\r\n    console.log(this.state.image);\r\n    //setimage(image.filter((e)=>(e !== ritem)))\r\n  };\r\n  pricetag = (flag) => {\r\n    if (flag == \"yes\") this.setState({ pflag: true });\r\n    else this.setState({ pflag: false });\r\n  };\r\n\r\n  render() {\r\n    const { value } = this.state;\r\n    return (\r\n      <Form className=\"postjobb\" onSubmit={this.handleUpload}>\r\n        <Form.Group widths=\"equal\">\r\n          <Form.Field\r\n            required\r\n            control={Input}\r\n            label=\"Name of Service\"\r\n            placeholder=\"enter name of service\"\r\n            id=\"nameofserv\"\r\n            className=\"nameofser\"\r\n          />\r\n        </Form.Group>\r\n\r\n        <Form.Field\r\n          control={TextArea}\r\n          label=\"Description\"\r\n          id=\"sdesc\"\r\n          placeholder=\"Tell us more about your problem or any note here...\"\r\n        />\r\n        <Form.Field>\r\n          <Form.Field>\r\n            <b>Select Date</b>\r\n          </Form.Field>\r\n          <Form.Field>\r\n            <InputGroup className=\"mb-2\">\r\n              <InputGroup.Prepend className=\"nameofser\">\r\n                <InputGroup.Text>\r\n                  {\" \"}\r\n                  <BsCalendar size=\"1.3em\" />\r\n                </InputGroup.Text>\r\n              </InputGroup.Prepend>\r\n\r\n              <DatePicker\r\n                // className=\"datepicker\"\r\n                selected={this.state.startDate}\r\n                placeholderText=\"when you want service\"\r\n                onChange={this.handleChange2}\r\n                minDate={new Date()}\r\n                name=\"startDate\"\r\n                showTimeSelect\r\n                timeFormat=\"HH:mm\"\r\n                todayButton=\"Today\"\r\n                timeIntervals={60}\r\n                timeCaption=\"time\"\r\n                // dateFormat=\"dd/MM/yyyy\"\r\n                dateFormat=\"MMMM d, yyyy h:mm aa\"\r\n                withPortal\r\n                required\r\n              />\r\n            </InputGroup>\r\n          </Form.Field>\r\n\r\n          <b style={{ fontWeight: \"800\" }}> Enter Amount </b>\r\n          <Button.Group size=\"tiny\">\r\n            <Button\r\n              type=\"button\"\r\n              onClick={() => {\r\n                this.pricetag(\"yes\");\r\n              }}\r\n            >\r\n              Yes\r\n            </Button>\r\n            <Button.Or />\r\n            <Button\r\n              type=\"button\"\r\n              onClick={() => {\r\n                this.pricetag(\"no\");\r\n              }}\r\n            >\r\n              No\r\n            </Button>\r\n          </Button.Group>\r\n          {this.state.pflag ? <Pricefield /> : null}\r\n        </Form.Field>\r\n\r\n        <div style={{ display: \"inline-block\" }}>\r\n          <Form.Field>\r\n            <Input\r\n              icon=\"photo\"\r\n              iconPosition=\"Right\"\r\n              type=\"file\"\r\n              placeholder=\"Enter tags\"\r\n              // onChange={this.upldimg}\r\n              accept=\".gif,.jpg,.jpeg,.png\"\r\n              onChange={this.handleChangeg}\r\n              multiple\r\n            />\r\n          </Form.Field>\r\n        </div>\r\n        <progress value={this.state.valprogress} max=\"100\" id=\"uploaderb\">\r\n          progress\r\n        </progress>\r\n\r\n        <div>\r\n          <Image.Group size=\"small\">\r\n            {this.state.image.map((nap, key) => (\r\n              <Image\r\n                fluid\r\n                key={key}\r\n                id={key}\r\n                label={{\r\n                  as: \"a\",\r\n                  corner: \"right\",\r\n                  icon: \"trash\",\r\n                  onClick: this.sekhararr,\r\n                }}\r\n                src={URL.createObjectURL(nap)}\r\n              />\r\n            ))}\r\n          </Image.Group>\r\n        </div>\r\n\r\n        <Form.Field control={Button} type=\"submit\" centered color=\"primary\">\r\n          <MdCheckCircle size=\"1.3rem\" style={{ textAlign: \"left\" }} />\r\n          Submit\r\n        </Form.Field>\r\n      </Form>\r\n    );\r\n  }\r\n}\r\n\r\nfunction Pricefield() {\r\n  return (\r\n    <Input\r\n      labelPosition=\"right\"\r\n      type=\"number\"\r\n      id=\"sprice\"\r\n      placeholder=\"Amount\"\r\n      style={{ width: \"60%\" }}\r\n    >\r\n      <Label basic>₹</Label>\r\n      <input />\r\n      <Label>.00</Label>\r\n    </Input>\r\n  );\r\n}\r\n\r\nfunction ModalExampleModal() {\r\n  firebase.auth().onAuthStateChanged(function (user) {\r\n    if (!user) {\r\n      //  history.go('/login')\r\n      console.log(\"user login\");\r\n      document.getElementById(\"redirectsignup\").click();\r\n    }\r\n  });\r\n\r\n  var imgsrc =\r\n    \"https://www.google.com/url?sa=i&url=https%3A%2F%2Fwww.vectorgraphit.com%2Ffree-svg-illustrations-for-your-next-website-or-blog%2Famp&psig=AOvVaw28FMPvsnbckOWg5KwrbFDM&ust=1614586813687000&source=images&cd=vfe&ved=0CAIQjRxqFwoTCLDUruGSjO8CFQAAAAAdAAAAABAJ\";\r\n  const [open, setOpen] = React.useState(true);\r\n\r\n  function click(e) {\r\n    console.log(e.target.dataset.txt);\r\n    jobcate = e.target.dataset.txt;\r\n    setOpen(false);\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <div>\r\n        <Modal\r\n          size=\"small\"\r\n          centered\r\n          // style={{marginLeft:\"auto\",marginRight:\"auto\",display:\"block\",width:\"70%\"}}\r\n          className=\"categoryModal\"\r\n          onOpen={() => setOpen(true)}\r\n          open={open}\r\n        >\r\n          <Modal.Header className=\"categoryMheader\">\r\n            Select Job Category\r\n          </Modal.Header>\r\n          <Modal.Content></Modal.Content>\r\n          <Card centered id=\"jobcate\">\r\n            <Card.Content>\r\n              <Card.Header>Select Category here</Card.Header>\r\n            </Card.Content>\r\n            <Card.Content>\r\n              <Menu vertical centered style={{ width: \"auto\" }}>\r\n                <Menu.Item link data-txt=\"0\" onClick={click}>\r\n                  <FaTools size=\"1.5rem\" />\r\n                  &nbsp;&nbsp;&nbsp;&nbsp; Ac/Refrigirator Service\r\n                </Menu.Item>\r\n                <Menu.Item link data-txt=\"1\" onClick={click}>\r\n                  <MdLaptopMac size=\"1.5rem\" />\r\n                  &nbsp;&nbsp;&nbsp;&nbsp; Computer/Laptop Service\r\n                </Menu.Item>\r\n                <Menu.Item link data-txt=\"2\" onClick={click}>\r\n                  <MdTv size=\"1.5rem\" />\r\n                  &nbsp;&nbsp;&nbsp;&nbsp; Tv Repair\r\n                </Menu.Item>\r\n                <Menu.Item link data-txt=\"9\" onClick={click}>\r\n                  <MdEventNote size=\"1.5rem\" />\r\n                  &nbsp;&nbsp;&nbsp;&nbsp; Electrician\r\n                </Menu.Item>\r\n                <Menu.Item link data-txt=\"12\" onClick={click}>\r\n                  <MdEventNote size=\"1.5rem\" />\r\n                  &nbsp;&nbsp;&nbsp;&nbsp; Interior Design\r\n                </Menu.Item>\r\n                <Menu.Item link data-txt=\"13\" onClick={click}>\r\n                  <MdEventNote size=\"1.5rem\" />\r\n                  &nbsp;&nbsp;&nbsp;&nbsp; Design\r\n                </Menu.Item>\r\n                <Menu.Item link data-txt=\"3\" onClick={click}>\r\n                  <BiCodeBlock size=\"1.5rem\" />\r\n                  &nbsp;&nbsp;&nbsp;&nbsp; Development\r\n                </Menu.Item>\r\n                <Menu.Item link data-txt=\"8\" onClick={click}>\r\n                  <MdEventNote size=\"1.5rem\" />\r\n                  &nbsp;&nbsp;&nbsp;&nbsp; Events\r\n                </Menu.Item>\r\n                <Menu.Item link data-txt=\"5\" onClick={click}>\r\n                  <MdFace size=\"1.5rem\" />\r\n                  &nbsp;&nbsp;&nbsp;&nbsp; Beauty\r\n                </Menu.Item>\r\n                <Menu.Item link data-txt=\"4\" onClick={click}>\r\n                  <FaChalkboardTeacher size=\"1.5rem\" />\r\n                  &nbsp;&nbsp;&nbsp;&nbsp; Tutor\r\n                </Menu.Item>\r\n                <Menu.Item link data-txt=\"6\" onClick={click}>\r\n                  <IoCameraSharp size=\"1.5rem\" />\r\n                  &nbsp;&nbsp;&nbsp;&nbsp; Photographer\r\n                </Menu.Item>\r\n                <Menu.Item link data-txt=\"7\" onClick={click}>\r\n                  <MdDriveEta size=\"1.5rem\" />\r\n                  &nbsp;&nbsp;&nbsp;&nbsp; Driver\r\n                </Menu.Item>\r\n                <Menu.Item link data-txt=\"10\" onClick={click}>\r\n                  <MdEventNote size=\"1.5rem\" />\r\n                  &nbsp;&nbsp;&nbsp;&nbsp; Carpenter\r\n                </Menu.Item>\r\n                <Menu.Item link data-txt=\"11\" onClick={click}>\r\n                  <MdEventNote size=\"1.5rem\" />\r\n                  &nbsp;&nbsp;&nbsp;&nbsp; Plumber\r\n                </Menu.Item>\r\n                <Menu.Item link data-txt=\"14\" onClick={click}>\r\n                  <MdEventNote size=\"1.5rem\" />\r\n                  &nbsp;&nbsp;&nbsp;&nbsp; CC Tv Installation\r\n                </Menu.Item>\r\n                <Menu.Item link data-txt=\"15\" onClick={click}>\r\n                  <MdEventNote size=\"1.5rem\" />\r\n                  &nbsp;&nbsp;&nbsp;&nbsp; Catering\r\n                </Menu.Item>\r\n              </Menu>\r\n              <Link to=\"/signup\" style={{ display: \"none\" }}>\r\n                <p id=\"redirectsignup\">signup</p>\r\n              </Link>\r\n            </Card.Content>\r\n          </Card>\r\n        </Modal>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n","E:\\hemanth files\\js practise\\spotmies\\firstapp\\src\\components\\chats-section.jsx",["214","215","216","217","218","219","220","221","222","223","224","225","226","227","228","229","230","231","232","233","234","235","236","237","238","239","240","241","242","243","244","245","246","247","248","249","250","251","252","253","254","255","256","257","258","259","260","261","262","263","264","265","266","267","268","269","270","271","272","273","274","275","276","277","278","279","280","281"],"import React, { Component, useCallback } from \"react\";\r\nimport firebase from \"../firebase\";\r\nimport react, { useState, useEffect, useRef } from \"react\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport { Row, Col, Form } from \"react-bootstrap\";\r\nimport {\r\n  Button,\r\n  Segment,\r\n  Dimmer,\r\n  Loader,\r\n  Label,\r\n  TextArea,\r\n} from \"semantic-ui-react\";\r\nimport \"../index.css\";\r\nimport \"./chats.css\";\r\n\r\nimport { BiArrowBack } from \"react-icons/bi\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { Link } from \"react-router-dom\";\r\nimport {\r\n  Image,\r\n  List,\r\n  Grid,\r\n  Input,\r\n  Modal,\r\n  ImageGroup,\r\n  Dropdown,\r\n  Header,\r\n} from \"semantic-ui-react\";\r\nimport imageCompression from \"browser-image-compression\";\r\n//import ImageViewer from \"react-simple-image-viewer\";\r\n// import { UniversalM } from \"./reusable/Modal\";\r\nimport \"firebase/storage\";\r\n//micro service\r\nimport { getpdetailsbyid, disablechat } from \"../mservices/upldmedia\";\r\nimport { gettbystamps, ValidURL } from \"../mservices/dateconv\";\r\nimport { toast } from \"react-toastify\";\r\nimport { msgdot } from \"./reusable/msgdot\";\r\n//import icons\r\nimport { BsEyeFill } from \"react-icons/bs\";\r\nimport { BiTimeFive } from \"react-icons/bi\";\r\nimport { RiPinDistanceFill } from \"react-icons/ri\";\r\nimport { IoIosArrowDropdown } from \"react-icons/io\";\r\n\r\nimport {\r\n  MdDelete,\r\n  MdStar,\r\n  MdChatBubble,\r\n  MdAccessTime,\r\n  MdPhone,\r\n  MdImage,\r\n  MdAddToPhotos,\r\n  MdList,\r\n  MdFeaturedPlayList,\r\n  MdSend,\r\n  MdArrowDropDownCircle,\r\n  MdPerson,\r\n  MdViewDay,\r\n  MdRemoveRedEye,\r\n  MdClose,\r\n  MdThumbUp,\r\n  MdAttachment,\r\n  MdThumbDown,\r\n} from \"react-icons/md\";\r\n\r\nimport { AiFillEdit } from \"react-icons/ai\";\r\nimport { RiSendPlaneLine, RiImageAddFill } from \"react-icons/ri\";\r\nimport { FaFolderPlus } from \"react-icons/fa\";\r\nimport { sharemydetails } from \"../mservices/userDB\";\r\n\r\nconst db = firebase.firestore();\r\nconst storage = firebase.storage();\r\nvar chatid;\r\nvar showChat = false;\r\nfunction useWindowSize() {\r\n  const [size, setSize] = useState([window.innerHeight, window.innerWidth]);\r\n  useEffect(() => {\r\n    const handleResize = () => {\r\n      setSize([window.innerHeight, window.innerWidth]);\r\n    };\r\n    window.addEventListener(\"resize\", handleResize);\r\n    return () => {\r\n      window.removeEventListener(\"resize\", handleResize);\r\n    };\r\n  }, []);\r\n  return size;\r\n}\r\n\r\n// function chatHead() {\r\n//   const [showChat,setShowChat] = useState(false);\r\n//   return showChat;\r\n// }\r\n\r\nfunction useTimes() {\r\n  // const[times,setTimes]=useState([])\r\n  const [chit, setchit] = useState([]);\r\n  useEffect(() => {\r\n    firebase.auth().onAuthStateChanged(function (user) {\r\n      if (user) {\r\n        var tempChat = [];\r\n        db.collection(\"messaging\")\r\n          .where(\"userid\", \"==\", firebase.auth().currentUser.uid)\r\n          .where(\"chatbuild\", \"==\", true)\r\n          .orderBy(\"createdAt\", \"desc\")\r\n          .onSnapshot((querySnapshot) => {\r\n            //  tempChat=[];\r\n            setchit([]);\r\n            querySnapshot.forEach((doc) => {\r\n              // tempChat.push(doc.data());\r\n              setchit((x) => x.concat(doc.data()));\r\n            });\r\n          });\r\n      }\r\n    });\r\n  }, []);\r\n  return chit;\r\n}\r\nconst Sekhar = () => {\r\n  const chit = useTimes();\r\n  console.log(chit);\r\n  if (chit.body) {\r\n    console.log(chit);\r\n  }\r\n  return (\r\n    <div className=\"responses\">\r\n      {/* <div className=\"comingSoon\">\r\n        <h1 className=\"soonText\">Coming Soon ...</h1>\r\n        </div> */}\r\n      <Headings />\r\n      {chit ? <Mybookings data={chit} /> : <Empty />}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Sekhar;\r\n\r\n// function settrue() {\r\n//   return setShowChat(true);\r\n//  }\r\n\r\nfunction settrue() {\r\n  showChat = true;\r\n  return showChat;\r\n}\r\n\r\nfunction Mybookings(props) {\r\n  const history = useHistory();\r\n  const [chat, setchat] = useState([]);\r\n  const [showChat, setShowChat] = useState(false);\r\n  const [listChat, setlistChat] = useState([]);\r\n  const [unrChat, setunrChat] = useState([]);\r\n  const [heights, widths] = useWindowSize();\r\n\r\n  useEffect(() => {\r\n    setlistChat(props.data);\r\n    console.log(\"new chat list\");\r\n    console.log(props.data);\r\n  }, [props.data]);\r\n\r\n  const click = async (prop) => {\r\n    // setlistChat(props.data);\r\n    //  update_newmsg();\r\n    console.log(\"click\", prop);\r\n    await db\r\n      .collection(\"messaging\")\r\n      .doc(prop)\r\n      .onSnapshot((snap) => {\r\n        setchat(snap.data());\r\n      });\r\n    console.log(\"new chat fetched\");\r\n  };\r\n\r\n  function settrue() {\r\n    return setShowChat(true);\r\n  }\r\n\r\n  if (widths <= 420) {\r\n    return (\r\n      <div style={{ height: \"100%\" }}>\r\n        {props.data == 0 ? (\r\n          <Grid>\r\n            {!showChat ? (\r\n              <Grid.Column floated=\"left\" mobile={16} tablet={16} computer={4}>\r\n                <div style={{ position: \"-webkit-sticky\" }}>\r\n                  <List celled>\r\n                    <List.Item>\r\n                      <Segment className=\"post-img\">\r\n                        <Dimmer active inverted>\r\n                          <Loader size=\"large\">Loading</Loader>\r\n                        </Dimmer>\r\n\r\n                        <Image src=\"/images/wireframe/paragraph.png\" />\r\n                      </Segment>\r\n                      <List.Content>\r\n                        <List.Header as=\"a\"></List.Header>\r\n                        <List.Description></List.Description>\r\n                      </List.Content>\r\n                    </List.Item>\r\n                  </List>\r\n                </div>\r\n              </Grid.Column>\r\n            ) : null}\r\n          </Grid>\r\n        ) : (\r\n          // original data\r\n          <Grid style={{ marginRight: \"0\" }} fluid={true} className=\"gridHead\">\r\n            {!showChat ? (\r\n              <Grid.Column\r\n                className=\"gridHead\"\r\n                floated=\"left\"\r\n                mobile={16}\r\n                tablet={16}\r\n                computer={4}\r\n              >\r\n                <div\r\n                  style={{ position: \"-webkit-sticky\" }}\r\n                  onClick={() => {\r\n                    settrue();\r\n                  }}\r\n                >\r\n                  <List celled>\r\n                    {listChat.map((nap, key) => (\r\n                      <List.Item\r\n                        id={nap.id}\r\n                        onClick={(e) => click(nap.id)}\r\n                        key={key}\r\n                        // style={{ backgroundColor: \"yellow\", width: \"250px\" }}\r\n                      >\r\n                        <Image avatar src={nap.ppic} />\r\n                        <List.Content style={{ width: \"250px\" }}>\r\n                          <div\r\n                            style={{\r\n                              display: \"inline-flex\",\r\n                              //    backgroundColor: \"red\",\r\n                              width: \"250px\",\r\n                            }}\r\n                          >\r\n                            <List.Header as=\"a\">{nap.pname} </List.Header>\r\n                            <p style={{ marginRight: \"0\", marginLeft: \"auto\" }}>\r\n                              <small\r\n                                style={{ color: nap.uread ? \"gray\" : \"black\" }}\r\n                              >\r\n                                {\" \"}\r\n                                {getmsgtime(\r\n                                  JSON.parse(nap.body[nap.body.length - 1])\r\n                                    .timestamp\r\n                                )}\r\n                              </small>\r\n                            </p>\r\n                          </div>\r\n\r\n                          <List.Description\r\n                            style={{\r\n                              display: \"inline-flex\",\r\n                              width: \"250px\",\r\n                              height: \"100%\",\r\n                              //  backgroundColor: \"red\",\r\n                            }}\r\n                          >\r\n                            <p style={{ color: nap.uread ? \"gray\" : \"black\" }}>\r\n                              {ValidURL(nap.body[nap.body.length - 1]) ==\r\n                              false ? (\r\n                                msgdot(\r\n                                  JSON.parse(nap.body[nap.body.length - 1]).msg,\r\n                                  24\r\n                                )\r\n                              ) : (\r\n                                <span style={{ display: \"inline-flex\" }}>\r\n                                  <MdAttachment />{\" \"}\r\n                                  <small>send you attachment </small>\r\n                                </span>\r\n                              )}\r\n                            </p>\r\n                            {nap.uread == false ? (\r\n                              <Label\r\n                                size=\"mini\"\r\n                                color=\"blue\"\r\n                                style={{\r\n                                  marginRight: \"0\",\r\n                                  marginLeft: \"auto\",\r\n                                  height: \"100%\",\r\n                                }}\r\n                              >\r\n                                New Message\r\n                              </Label>\r\n                            ) : null}\r\n                          </List.Description>\r\n                        </List.Content>\r\n                      </List.Item>\r\n                    ))}\r\n                  </List>\r\n                </div>\r\n              </Grid.Column>\r\n            ) : null}\r\n            {showChat ? (\r\n              <Grid.Column\r\n                className=\"gridHead1\"\r\n                floated=\"right\"\r\n                mobile={16}\r\n                tablet={16}\r\n                computer={12}\r\n                centered\r\n                style={{ padding: \"14px 0 0 0\", height: \"90%\" }}\r\n              >\r\n                <div>\r\n                  {chat.body ? (\r\n                    <Chatarea chat={chat} onNameChange={setShowChat} />\r\n                  ) : (\r\n                    <Empty />\r\n                  )}\r\n                </div>\r\n              </Grid.Column>\r\n            ) : null}\r\n          </Grid>\r\n        )}\r\n      </div>\r\n    );\r\n  } else {\r\n    return (\r\n      <div style={{ height: \"100%\" }}>\r\n        <Grid fluid={true}>\r\n          <Grid.Column\r\n            floated=\"left\"\r\n            mobile={16}\r\n            tablet={16}\r\n            computer={4}\r\n            style={{\r\n              marginTop: \"20px\",\r\n              border: \"0 1px 0 0\",\r\n              boxShadow: \"0px 0px 1px rgb(141, 139, 139)\",\r\n              // backgroundColor: \"yellow\",\r\n              height: \"100%\",\r\n            }}\r\n          >\r\n            <div style={{ position: \"-webkit-sticky\" }}>\r\n              <List>\r\n                {listChat.map((nap, key) => (\r\n                  <List.Item\r\n                    id={nap.id}\r\n                    onClick={(e) => click(nap.id)}\r\n                    key={key}\r\n                  >\r\n                    <Image avatar src={nap.ppic} />\r\n                    <List.Content style={{ width: \"250px\" }}>\r\n                      <div\r\n                        style={{\r\n                          display: \"inline-flex\",\r\n                          // backgroundColor: \"red\",\r\n                          width: \"250px\",\r\n                        }}\r\n                      >\r\n                        <List.Header as=\"a\">{nap.pname} </List.Header>\r\n                        <p style={{ marginRight: \"0\", marginLeft: \"auto\" }}>\r\n                          <small\r\n                            style={{ color: nap.uread ? \"gray\" : \"black\" }}\r\n                          >\r\n                            {\" \"}\r\n                            {getmsgtime(\r\n                              JSON.parse(nap.body[nap.body.length - 1])\r\n                                .timestamp\r\n                            )}\r\n                          </small>\r\n                        </p>\r\n                      </div>\r\n\r\n                      <List.Description\r\n                        style={{\r\n                          display: \"inline-flex\",\r\n                          width: \"250px\",\r\n                          height: \"100%\",\r\n                          //  backgroundColor: \"red\",\r\n                        }}\r\n                      >\r\n                        <p style={{ color: nap.uread ? \"gray\" : \"black\" }}>\r\n                          {ValidURL(nap.body[nap.body.length - 1]) == false ? (\r\n                            msgdot(\r\n                              JSON.parse(nap.body[nap.body.length - 1]).msg,\r\n                              24\r\n                            )\r\n                          ) : (\r\n                            <span style={{ display: \"inline-flex\" }}>\r\n                              <MdAttachment />{\" \"}\r\n                              <small>send you attachment </small>\r\n                            </span>\r\n                          )}\r\n                        </p>\r\n                        {nap.uread == false ? (\r\n                          <Label\r\n                            size=\"mini\"\r\n                            color=\"blue\"\r\n                            style={{\r\n                              marginRight: \"0\",\r\n                              marginLeft: \"auto\",\r\n                              height: \"100%\",\r\n                            }}\r\n                          >\r\n                            New Message\r\n                          </Label>\r\n                        ) : null}\r\n                      </List.Description>\r\n                    </List.Content>\r\n                  </List.Item>\r\n                ))}\r\n              </List>\r\n            </div>\r\n          </Grid.Column>\r\n\r\n          <Grid.Column\r\n            floated=\"right\"\r\n            mobile={16}\r\n            tablet={16}\r\n            computer={12}\r\n            centered\r\n            style={{ padding: \"14px 0 0 0\", height: \"90%\" }}\r\n          >\r\n            <div>{chat.body ? <Chatarea chat={chat} /> : <Empty />}</div>\r\n          </Grid.Column>\r\n        </Grid>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nfunction Chatarea(props) {\r\n  const history = useHistory();\r\n  const [ordst, setordst] = useState();\r\n  const [image, setimage] = useState([]);\r\n  const [image2, setimage2] = useState([]);\r\n  const [chid, setchid] = useState(\"\");\r\n  const [pdetails, setpdetails] = useState({ businessname: \"business\" });\r\n  const [tempimg, settempimg] = useState([]);\r\n  const [upload, setupload] = useState(false);\r\n  const divRef = useRef(null);\r\n  const [mflag, setmflag] = useState(null);\r\n  const [mimage, setmimage] = useState(null);\r\n  const scrollref = useRef(null);\r\n  const [heights, widths] = useWindowSize();\r\n  const [typemsg, settypemsg] = useState(\"\");\r\n  // var [showChat,setShowChat] = useState(false);\r\n\r\n  db.collection(\"users\")\r\n    .doc(firebase.auth().currentUser.uid)\r\n    .collection(\"adpost\")\r\n    .doc(props.chat.orderid)\r\n    .get()\r\n    .then((snap) => {\r\n      setordst(snap.data().orderstate);\r\n      //console.log(snap.data())\r\n    });\r\n\r\n  useEffect(async () => {\r\n    let data;\r\n    console.log(\"fetching partner details..\");\r\n    data = await getpdetailsbyid(props.chat.partnerid);\r\n    console.log(data);\r\n    setpdetails(data);\r\n    console.log(\"effect1\");\r\n  }, [props.chat.partnerid]);\r\n\r\n  //const divRef = useRef(null);\r\n  const onKeyDownHandler = (e) => {\r\n    if (e.keyCode === 13) {\r\n      // this.sendMessage();\r\n      console.log(\"enter key\");\r\n      // document.getElementById(props.chat.id).click();\r\n      // divRef.current.click();\r\n      click(props.chat.id);\r\n    }\r\n  };\r\n\r\n  let chat = [];\r\n  chat = props.chat;\r\n  let onNameChange = props.onNameChange;\r\n  // console.log(JSON.parse(chat.body));\r\n  useEffect(async () => {\r\n    console.log(\"new message\");\r\n\r\n    executeScroll();\r\n    console.log(\"effect2\");\r\n    console.log(chat);\r\n  }, [chat.body]);\r\n\r\n  const click = (prop) => {\r\n    if (typemsg != \"\") {\r\n      let newbody = [];\r\n      newbody = chat.body;\r\n\r\n      console.log(\"click\", prop);\r\n      let timestamp = Math.round(+new Date() / 1000);\r\n      //let msg = typemsg + \"`\" + timestamp + \"`\";\r\n      var msg2 = {};\r\n      msg2.msg = typemsg;\r\n      msg2.timestamp = timestamp;\r\n      msg2.type = \"text\";\r\n      msg2.sender = \"u\";\r\n      var msg = JSON.stringify(msg2);\r\n      if (msg != \"\") {\r\n        newbody.push(msg);\r\n        db.collection(\"messaging\")\r\n          .doc(prop)\r\n          .update({\r\n            body: newbody,\r\n            createdAt: new Date(),\r\n            pread: false,\r\n          })\r\n          .then(() => {\r\n            settypemsg(\"\");\r\n            // tempChat=[];\r\n            // executeScroll();\r\n          });\r\n      }\r\n    }\r\n  };\r\n\r\n  const click2 = (id, msg) => {\r\n    let newbody = [];\r\n    newbody = chat.body;\r\n\r\n    console.log(\"click\");\r\n    let timestamp = Math.round(+new Date() / 1000);\r\n    //let msg = typemsg + \"`\" + timestamp + \"`\";\r\n    var msg2 = {};\r\n    msg2.msg = msg;\r\n    msg2.timestamp = timestamp;\r\n    msg2.type = \"photo\";\r\n    msg2.sender = \"u\";\r\n    var msgg = JSON.stringify(msg2);\r\n    newbody.push(msgg);\r\n\r\n    // let timestamp = Math.round(+new Date() / 1000);\r\n\r\n    db.collection(\"messaging\")\r\n      .doc(id)\r\n      .update({\r\n        body: newbody,\r\n        createdAt: new Date(),\r\n        pread: false,\r\n      })\r\n      .then(() => {});\r\n  };\r\n  const umread = async () => {\r\n    await db.collection(\"messaging\").doc(chat.id).update({\r\n      uread: true,\r\n    });\r\n    return true;\r\n  };\r\n  function orderstatus(e) {\r\n    console.log(e.target.innerText, e.target.parentElement.id);\r\n    console.log(ordst);\r\n  }\r\n\r\n  const handleInputChange = useCallback(\r\n    (event) => {\r\n      onNameChange(false);\r\n    },\r\n    [onNameChange]\r\n  );\r\n\r\n  const inputFile = useRef(null);\r\n\r\n  const mediashare = (e) => {\r\n    inputFile.current.click();\r\n    console.log(image);\r\n    console.log(image2);\r\n    setchid(props.chat.id);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (upload == true) {\r\n      console.log(\"uploading..\");\r\n      //  toast.info(\"uploading...\");\r\n      uitf();\r\n    }\r\n    console.log(\"effect4\");\r\n  }, [upload]);\r\n\r\n  async function uitf() {\r\n    let image3 = tempimg;\r\n    for (var i = 0; i < image3.length; i++) {\r\n      let k = Number(i);\r\n      const uploadTask = storage\r\n        .ref(`users/${firebase.auth().currentUser.uid}/chat/${image3[k].name}`)\r\n        .put(image3[k]);\r\n      let upldtask = await uploadTask.on(\r\n        \"state_changed\",\r\n        (snapshot) => {},\r\n        (error) => {\r\n          console.log(error);\r\n          toast.info(error);\r\n        },\r\n        () => {\r\n          storage\r\n            .ref(`users/${firebase.auth().currentUser.uid}/chat/`)\r\n            .child(image3[k].name)\r\n            .getDownloadURL()\r\n            .then((url) => {\r\n              console.log(url);\r\n              // toast.info(url);\r\n              setimage2((temp) => [...temp, url]);\r\n            });\r\n        }\r\n      );\r\n    }\r\n    setupload(false);\r\n    settempimg([]);\r\n    setimage2([]);\r\n  }\r\n\r\n  useEffect(() => {\r\n    console.log(image2);\r\n    if (image2.length > 0) {\r\n      click2(chid, image2[image2.length - 1]);\r\n    }\r\n    console.log(\"effect5\");\r\n  }, [image2]);\r\n\r\n  async function compressimage(e) {\r\n    const options = {\r\n      maxSizeMB: 0.15,\r\n      maxWidthOrHeight: 800,\r\n      useWebWorker: true,\r\n    };\r\n    let cfile;\r\n    setimage([]);\r\n\r\n    for (var i = 0; i < e.target.files.length; i++) {\r\n      let k = Number(i);\r\n      //  toast.info(\"loop start\");\r\n      imageCompression(e.target.files[k], options)\r\n        .then((x) => {\r\n          cfile = x;\r\n          // setimage(temp=>[...temp,cfile]);\r\n          settempimg((temp) => [...temp, cfile]);\r\n          //   toast.info(`image compressed ${k}`);\r\n        })\r\n        .catch(function (error) {\r\n          console.log(error.message);\r\n          //  toast.info(error.message);\r\n          //  toast.info(error);\r\n        });\r\n      // settempimg((temp) => [...temp, e.target.files[k]]);\r\n    }\r\n    // setimage(temp=>[...temp,\"dummy\"]);\r\n  }\r\n  async function uploadmedia(e) {\r\n    setimage([]);\r\n    setimage2([]);\r\n    compressimage(e);\r\n  }\r\n  function uploadmediatemp(e) {\r\n    //  toast.info(\"func called\");\r\n    console.log(e);\r\n    compressimage(e);\r\n  }\r\n\r\n  const showimage = (e) => {\r\n    setmflag(true);\r\n    setmimage(e.target.src);\r\n    console.log(e);\r\n  };\r\n\r\n  const pdet = (e, prop) => {\r\n    history.push(`pdetails/${prop}`);\r\n    console.log(prop);\r\n  };\r\n  const vieworder = (prop) => {\r\n    console.log(\"click\", prop);\r\n    history.push(`mybookings/id/${prop}`);\r\n  };\r\n  const delchat = async (prop) => {\r\n    if ((await disablechat(prop)) == 200) toast.info(\"chat deleted\");\r\n    else toast.info(\"unable to delete chat try again later\");\r\n  };\r\n\r\n  async function sharemydet() {\r\n    let details = await sharemydetails(firebase.auth().currentUser.uid);\r\n    console.log(details);\r\n    settypemsg(\r\n      `contact me at name : ${details.name}  phone: ${details.phone} / ${details.altnum}`\r\n    );\r\n  }\r\n\r\n  const [scrollDisplay, setScrolldisplay] = useState(false);\r\n  const [tbody, settbody] = useState([]);\r\n  const myRef = useRef(null);\r\n  const executeScroll = () => myRef.current.scrollIntoView({behavior: \"smooth\"});\r\n  function scrollhandle(e) {\r\n    //console.log(e,\"scrolling mobile\");\r\n    const scrolly = scrollref.current.scrollHeight;\r\n    const scrolltop = scrollref.current.scrollTop;\r\n    const clientheight = scrollref.current.clientHeight;\r\n    //console.log(scrolly, scrolltop, clientheight);\r\n    if (scrolly - scrolltop == clientheight) {\r\n      setScrolldisplay(false);\r\n      if (tbody != chat.body) {\r\n        umread();\r\n        settbody(chat.body);\r\n        console.log(\"message read\");\r\n      }\r\n      //console.log(\"bottom scroll\");\r\n    } else {\r\n      //console.log(\"top scroll\")\r\n      setScrolldisplay(true);\r\n    }\r\n  }\r\n\r\n  if (widths <= 1000) {\r\n    return (\r\n      <div style={{ float: \"right\", width: \"100%\", overflowY: \"auto\" }}>\r\n        {/* {showChat ?  */}\r\n        <List className=\"chatHead\" horizontal>\r\n          <List.Item>\r\n            <BiArrowBack\r\n              style={{\r\n                width: \"50px\",\r\n                fontSize: \"24px\",\r\n                background: \"rgba(255, 255, 255, 0.92)\",\r\n              }}\r\n              onClick={handleInputChange}\r\n            />\r\n            <Image avatar src={props.chat.ppic} />\r\n            <List.Content>\r\n              <List.Header>{props.chat.pname}</List.Header>\r\n              computer technician\r\n            </List.Content>\r\n          </List.Item>\r\n          <List.Item style={{ float: \"right\", marginRight: \"20px\" }}>\r\n            <a href={\"tel: +91 \" + pdetails.phone}>\r\n              <MdPhone\r\n                size=\"1.5rem\"\r\n                id=\"hgffj\"\r\n                color=\"black\"\r\n                style={{ marginRight: \"10px\" }}\r\n                onClick={console.log(\"phone number clicked\")}\r\n              />\r\n            </a>\r\n            <Dropdown\r\n              item\r\n              icon=\"ellipsis vertical\"\r\n              backgroundColor=\"white\"\r\n              simple\r\n              direction=\"left\"\r\n              color=\"white\"\r\n            >\r\n              <Dropdown.Menu>\r\n                <Dropdown.Item\r\n                  onClick={(e) => {\r\n                    // alert(\"make a call\");\r\n                    toast.info(`+91 ${pdetails.phone}`);\r\n                    setmimage(`+91 ${pdetails.phone}`);\r\n                  }}\r\n                >\r\n                  <MdPhone /> Make A Call\r\n                </Dropdown.Item>\r\n\r\n                <Dropdown.Item\r\n                  onClick={(e) => {\r\n                    pdet(e, props.chat.partnerid);\r\n                  }}\r\n                >\r\n                  <MdPerson /> Technician details\r\n                </Dropdown.Item>\r\n                <Dropdown.Item\r\n                  onClick={() => {\r\n                    vieworder(props.chat.orderid);\r\n                  }}\r\n                >\r\n                  <MdRemoveRedEye /> View job\r\n                </Dropdown.Item>\r\n                <Dropdown.Divider />\r\n                <Dropdown.Item\r\n                  onClick={() => {\r\n                    delchat(props.chat.id);\r\n                  }}\r\n                >\r\n                  <MdDelete /> Delete\r\n                </Dropdown.Item>\r\n              </Dropdown.Menu>\r\n            </Dropdown>\r\n          </List.Item>\r\n        </List>\r\n        {/* : null} */}\r\n\r\n        {ordst == 0 ? (\r\n          <Button.Group\r\n            style={{ width: \"100%\" }}\r\n            onClick={orderstatus}\r\n            id={props.chat.id}\r\n          >\r\n            <Button>\r\n              <MdThumbDown /> Cancel partner\r\n            </Button>\r\n            <Button.Or />\r\n            <Button primary>\r\n              <MdThumbUp />\r\n              Confirm partner\r\n            </Button>\r\n          </Button.Group>\r\n        ) : null}\r\n\r\n        <div\r\n          className=\"chatdiv\"\r\n          style={{ overflow: \"auto\" }}\r\n          ref={scrollref}\r\n          onScroll={(e) => {\r\n            scrollhandle(e);\r\n          }}\r\n        >\r\n          {chat.body.map((nap, key, array) => {\r\n            var chatobj = JSON.parse(nap);\r\n            return (\r\n              <div className={chatobj.sender == \"u\" ? \"out-chat\" : \"in-chat\"}>\r\n                <p className={cmpmsg(nap, array[key - 1]) ? \"cmpmsg\" : null}>\r\n                  {cmpmsg(nap, array[key - 1])}\r\n                </p>\r\n\r\n                <div\r\n                  className={\r\n                    chatobj.sender == \"u\" ? \"out-chatbox\" : \"in-chatbox\"\r\n                  }\r\n                  key={key}\r\n                >\r\n                  {chatobj.type == \"text\" ? (\r\n                    <p\r\n                      className={\r\n                        chatobj.sender == \"u\" ? \"chatList\" : \"chatListp\"\r\n                      }\r\n                    >\r\n                      {chatobj.msg}\r\n\r\n                      <small\r\n                        className={\r\n                          chatobj.sender == \"u\" ? \"textTime\" : \"textTimep\"\r\n                        }\r\n                      >\r\n                        {\" \"}\r\n                        {getmsgtime(chatobj.timestamp)}\r\n                      </small>\r\n                    </p>\r\n                  ) : chatobj.type == \"photo\" ? (\r\n                    <Image\r\n                      floated={chatobj.sender == \"u\" ? \"right\" : \"left\"}\r\n                      className=\"chatPic\"\r\n                      onClick={showimage}\r\n                      src={chatobj.msg}\r\n                      size=\"small\"\r\n                    />\r\n                  ) : null}\r\n                </div>\r\n                {/* <UniversalM /> */}\r\n              </div>\r\n            );\r\n          })}\r\n\r\n          {JSON.parse(chat.body[chat.body.length - 1]).sender == \"u\" ? (\r\n            <div>\r\n              <p>\r\n                <small\r\n                  ref={myRef}\r\n                  className={chat.pread ? \"readText\" : \"unreadText\"}\r\n                >\r\n                  {chat.pread ? \"seen\" : \"unseen\"}\r\n                </small>\r\n              </p>\r\n            </div>\r\n          ) : (\r\n            <span ref={myRef}></span>\r\n          )}\r\n          {scrollDisplay ? (\r\n            <IoIosArrowDropdown\r\n              size=\"2rem\"\r\n              color=\"007bff\"\r\n              onClick={executeScroll}\r\n              style={{\r\n                position: \"fixed\",\r\n                bottom: \"60px\",\r\n                float: \"right\",\r\n                right: \"10px\",\r\n                width: \"50px\",\r\n                backgroundColor: \"white\",\r\n                borderRadius: \"10px\",\r\n              }}\r\n            />\r\n          ) : null}\r\n        </div>\r\n\r\n        <Form.Group\r\n          className=\"chat-form\"\r\n          style={{\r\n            position: \"fixed\",\r\n            bottom: \"2px\",\r\n            margin: \"0\",\r\n            backgroundColor: \"#f6f6f6\",\r\n          }}\r\n        >\r\n          <Row className=\"align-items-center\" noGutters>\r\n            {/* <input type='file' id={props.chat.id} ref={inputFile} accept=\"image/x-png,image/gif,image/jpeg\" onChange={uploadmedia} style={{display: 'none'}} multiple/> */}\r\n            <input\r\n              type=\"file\"\r\n              id={props.chat.id}\r\n              ref={inputFile}\r\n              accept=\"image/x-png,image/gif,image/jpeg\"\r\n              onChange={uploadmediatemp}\r\n              style={{ display: \"none\" }}\r\n              multiple\r\n            />\r\n\r\n            <Col className=\"chatformicons\" xs={2}>\r\n              {\" \"}\r\n              <MdAddToPhotos\r\n                style={{ marginLeft: \"20px\" }}\r\n                onClick={mediashare}\r\n                size=\"2rem\"\r\n                color=\"gray\"\r\n              />\r\n              <Dropdown style={{ marginLeft: \"15px\" }}>\r\n                <Dropdown.Menu>\r\n                  <Dropdown.Item\r\n                    icon=\"address card\"\r\n                    text=\"Share your Contact Details\"\r\n                    onClick={sharemydet}\r\n                  />\r\n                  <Dropdown.Item icon=\"trash\" text=\"Move to trash\" />\r\n                  <Dropdown.Divider />\r\n                  <Dropdown.Item text=\"E-mail Collaborators\" />\r\n                </Dropdown.Menu>\r\n              </Dropdown>\r\n            </Col>\r\n            <Col xs={6}>\r\n              <Form.Control\r\n                type=\"text\"\r\n                placeholder=\"Message Here\"\r\n                value={typemsg}\r\n                onChange={(e) => {\r\n                  settypemsg(e.target.value);\r\n                }}\r\n                id=\"msgtext\"\r\n              />\r\n            </Col>\r\n            <Col className=\"chatformicons\" xs={4}>\r\n              <Button\r\n                primary\r\n                style={{ marginLeft: \"20px\" }}\r\n                className=\"chatSend\"\r\n                id={props.chat.id}\r\n                ref={divRef}\r\n                onClick={(e) => click(props.chat.id)}\r\n              >\r\n                Send\r\n                <MdSend />\r\n              </Button>\r\n            </Col>\r\n          </Row>\r\n        </Form.Group>\r\n        <ImageModal\r\n          className=\"uploadModal\"\r\n          image={mimage}\r\n          setflag={setmimage}\r\n        />\r\n        <ImageModal2\r\n          image={tempimg}\r\n          flag={setupload}\r\n          setimage={settempimg}\r\n          addmore={mediashare}\r\n          removeitems={removeitems}\r\n        />\r\n      </div>\r\n    );\r\n  } else {\r\n    return (\r\n      <div style={{ float: \"right\", width: \"100%\", overflowY: \"auto\" }}>\r\n        <List className=\"chatHead\" horizontal>\r\n          <List.Item\r\n            onClick={(e) => {\r\n              pdet(e, props.chat.partnerid);\r\n            }}\r\n            style={{ cursor: \"pointer\" }}\r\n          >\r\n            <Image avatar src={pdetails.profilepic} />\r\n            <List.Content>\r\n              <List.Header>\r\n                <b style={{ fontSize: \"19px\" }}>{pdetails.name}</b>{\" \"}\r\n                <small>\r\n                  {pdetails.rate > 5 ? pdetails.rate / 20 : pdetails.rate}\r\n                  <MdStar color=\"yellow\" size=\"1.1rem\" />\r\n                </small>\r\n              </List.Header>\r\n              {/* {pdetails.businessname} */}\r\n              Title here\r\n            </List.Content>\r\n          </List.Item>\r\n          <List.Item style={{ float: \"right\", marginRight: \"20px\" }}>\r\n            <a href={\"tel: +91 \" + pdetails.phone}>\r\n              <MdPhone\r\n                size=\"1.5rem\"\r\n                id=\"hgffj\"\r\n                color=\"black\"\r\n                style={{ marginRight: \"10px\" }}\r\n                onClick={console.log(\"phone number clicked\")}\r\n              />\r\n            </a>\r\n\r\n            <Dropdown\r\n              item\r\n              icon=\"ellipsis vertical\"\r\n              backgroundColor=\"white\"\r\n              simple\r\n              direction=\"left\"\r\n              color=\"white\"\r\n            >\r\n              <Dropdown.Menu>\r\n                <Dropdown.Item\r\n                  onClick={(e) => {\r\n                    // alert(\"make a call\");\r\n                    toast.info(`+91 ${pdetails.phone}`);\r\n                    setmimage(`+91 ${pdetails.phone}`);\r\n                  }}\r\n                >\r\n                  <MdPhone /> Make A Call\r\n                </Dropdown.Item>\r\n\r\n                <Dropdown.Item\r\n                  onClick={(e) => {\r\n                    pdet(e, props.chat.partnerid);\r\n                  }}\r\n                >\r\n                  <MdPerson /> Technician details\r\n                </Dropdown.Item>\r\n                <Dropdown.Item\r\n                  onClick={() => {\r\n                    vieworder(props.chat.orderid);\r\n                  }}\r\n                >\r\n                  <MdRemoveRedEye /> View job\r\n                </Dropdown.Item>\r\n                <Dropdown.Divider />\r\n                <Dropdown.Item\r\n                  onClick={() => {\r\n                    delchat(props.chat.id);\r\n                  }}\r\n                >\r\n                  <MdDelete /> Delete\r\n                </Dropdown.Item>\r\n              </Dropdown.Menu>\r\n            </Dropdown>\r\n          </List.Item>\r\n        </List>\r\n        {ordst == 0 ? (\r\n          <Button.Group\r\n            style={{ width: \"100%\" }}\r\n            onClick={orderstatus}\r\n            id={props.chat.id}\r\n          >\r\n            <Button>\r\n              <MdThumbDown /> Cancel partner\r\n            </Button>\r\n            <Button.Or />\r\n            <Button primary>\r\n              <MdThumbUp />\r\n              Confirm partner\r\n            </Button>\r\n          </Button.Group>\r\n        ) : null}\r\n\r\n        <div\r\n          className=\"chatdiv\"\r\n          // style={{ overflow: \"auto\", paddingBottom: \"10px\" }}\r\n          ref={scrollref}\r\n          onScroll={(e) => {\r\n            scrollhandle(e);\r\n          }}\r\n        >\r\n          {chat.body.map((nap, key, array) => {\r\n            var chatobj = JSON.parse(nap);\r\n            return (\r\n              <div className={chatobj.sender == \"u\" ? \"out-chat\" : \"in-chat\"}>\r\n                <p className={cmpmsg(nap, array[key - 1]) ? \"cmpmsg\" : null}>\r\n                  {cmpmsg(nap, array[key - 1])}\r\n                </p>\r\n\r\n                <div\r\n                  className={\r\n                    chatobj.sender == \"u\" ? \"out-chatbox\" : \"in-chatbox\"\r\n                  }\r\n                  key={key}\r\n                  // id={key == chat.body.length - 1 ? \"scrolltobottom\" : null}\r\n                >\r\n                  {chatobj.type == \"text\" ? (\r\n                    <p\r\n                      className={\r\n                        chatobj.sender == \"u\" ? \"chatList\" : \"chatListp\"\r\n                      }\r\n                    >\r\n                      {chatobj.msg}\r\n\r\n                      <small\r\n                        className={\r\n                          chatobj.sender == \"u\" ? \"textTime\" : \"textTimep\"\r\n                        }\r\n                      >\r\n                        {\" \"}\r\n                        {getmsgtime(chatobj.timestamp)}\r\n                      </small>\r\n                    </p>\r\n                  ) : chatobj.type == \"photo\" ? (\r\n                    <Image\r\n                      floated={chatobj.sender == \"u\" ? \"right\" : \"left\"}\r\n                      className=\"chatPic\"\r\n                      onClick={showimage}\r\n                      src={chatobj.msg}\r\n                      size=\"small\"\r\n                    />\r\n                  ) : null}\r\n                </div>\r\n                {/* <UniversalM /> */}\r\n              </div>\r\n            );\r\n          })}\r\n\r\n          {JSON.parse(chat.body[chat.body.length - 1]).sender == \"u\" ? (\r\n            <div>\r\n              <p>\r\n                <small\r\n                  ref={myRef}\r\n                  className={chat.pread ? \"readText\" : \"unreadText\"}\r\n                >\r\n                  {chat.pread ? \"seen\" : \"unseen\"}\r\n                </small>\r\n              </p>\r\n            </div>\r\n          ) : (\r\n            <span ref={myRef}></span>\r\n          )}\r\n          {scrollDisplay ? (\r\n            <IoIosArrowDropdown\r\n              onClick={executeScroll}\r\n              size=\"2rem\"\r\n              color=\"007bff\"\r\n              style={{\r\n                position: \"fixed\",\r\n                bottom: \"80px\",\r\n                float: \"right\",\r\n                right: \"0px\",\r\n                width: \"50px\",\r\n                backgroundColor: \"white\",\r\n                borderRadius: \"10px\",\r\n              }}\r\n            />\r\n          ) : null}\r\n        </div>\r\n\r\n        <Form.Group\r\n          className=\"chat-form\"\r\n          onKeyDown={onKeyDownHandler}\r\n          style={{\r\n            position: \"fixed\",\r\n            bottom: \"2px\",\r\n            margin: \"0\",\r\n            backgroundColor: \"#f6f6f6\",\r\n            minHeight: \"50px\",\r\n          }}\r\n        >\r\n          <Row style={{ margin: \"0\", marginTop: \"20px\" }}>\r\n            <input\r\n              type=\"file\"\r\n              id={props.chat.id}\r\n              ref={inputFile}\r\n              accept=\"image/x-png,image/gif,image/jpeg\"\r\n              onChange={uploadmediatemp}\r\n              style={{ display: \"none\" }}\r\n              multiple\r\n            />\r\n\r\n            <Col xs={2}>\r\n              {\" \"}\r\n              <MdAddToPhotos\r\n                onClick={mediashare}\r\n                style={{ cursor: \"pointer\" }}\r\n                size=\"2rem\"\r\n                color=\"gray\"\r\n              />\r\n              <Dropdown text=\"More\" style={{ marginLeft: \"15px\" }}>\r\n                <Dropdown.Menu>\r\n                  <Dropdown.Item\r\n                    icon=\"address card\"\r\n                    text=\"Share your Contact Details\"\r\n                    onClick={sharemydet}\r\n                  />\r\n                  <Dropdown.Item icon=\"trash\" text=\"Move to trash\" />\r\n                  <Dropdown.Divider />\r\n                  <Dropdown.Item text=\"E-mail Collaborators\" />\r\n                </Dropdown.Menu>\r\n              </Dropdown>\r\n            </Col>\r\n            <Col xs={8} style={{ marginRight: \"0\" }}>\r\n              <Form.Control\r\n                type=\"text\"\r\n                //   style={{ height: \"100px\" }}\r\n                placeholder=\"Message Here\"\r\n                value={typemsg}\r\n                onChange={(e) => {\r\n                  settypemsg(e.target.value);\r\n                }}\r\n                id=\"msgtext\"\r\n              />\r\n              {/* <TextArea\r\n                style={{ minHeight: \"50px\", minWidth: \"300px\" }}\r\n                placeholder=\"Enter Message Here\"\r\n                onKeyDown={handleKeyDown}\r\n              /> */}\r\n            </Col>\r\n            <Col xs={2} style={{ marginRight: \"0\" }}>\r\n              <Button\r\n                primary\r\n                className=\"chatSend\"\r\n                id={props.chat.id}\r\n                ref={divRef}\r\n                onClick={(e) => click(props.chat.id)}\r\n              >\r\n                Sendw\r\n                <MdSend />\r\n              </Button>\r\n              {/* <MdSend size=\"2rem\" color=\"grey\" /> */}\r\n            </Col>\r\n            {/* <Button primary className=\"chatSend\" id={props.chat.id} ref={divRef} onClick={(e)=>tsend(e,props.chat.id)}>tSend<MdSend /></Button></Col> */}\r\n          </Row>\r\n        </Form.Group>\r\n        {/* <Imageviewer image={mimage} /> */}\r\n        <ImageModal\r\n          className=\"uploadModal\"\r\n          image={mimage}\r\n          setflag={setmimage}\r\n        />\r\n        <ImageModal2\r\n          image={tempimg}\r\n          flag={setupload}\r\n          setimage={settempimg}\r\n          addmore={mediashare}\r\n          removeitems={removeitems}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n\r\n  function cmpmsg(msg1, msg2) {\r\n    let temp1 = JSON.parse(msg1);\r\n    let temp2 = msg2 == undefined ? JSON.parse(msg1) : JSON.parse(msg2);\r\n\r\n    let ct = Number(temp1.timestamp);\r\n    let pt = Number(temp2.timestamp);\r\n    if (gettbystamps(ct, \"date\") != gettbystamps(pt, \"date\")) {\r\n      let temp = gettbystamps(ct, \"fulldate\");\r\n      return temp;\r\n    } else if (msg2 == undefined) {\r\n      let temp = gettbystamps(ct, \"fulldate\");\r\n      return temp;\r\n    } else return null;\r\n  }\r\n\r\n  function removeitems(data) {\r\n    console.log(data);\r\n    settempimg(data);\r\n  }\r\n}\r\nfunction getmsgtime(nap) {\r\n  // let stamps = countSpecial(nap);\r\n  let msgtime = gettbystamps(Number(nap), \"time\");\r\n  return msgtime;\r\n}\r\nfunction Headings() {\r\n  return (\r\n    <div className=\"resHead\">\r\n      <Row style={{ width: \"100%\", textAlign: \"center\" }}>\r\n        <Col>\r\n          <Link to=\"/chat\" style={{ color: \"gray\", textDecoration: \"none\" }}>\r\n            <h2>\r\n              <MdFeaturedPlayList size=\"2.1rem\" color=\"gray\" /> Responses\r\n            </h2>\r\n          </Link>\r\n        </Col>\r\n        <Col style={{ borderBottom: \"3px solid #007bff\", marginBottom: \"0\" }}>\r\n          <Link\r\n            to=\"/chats-section\"\r\n            style={{ color: \"#007bff\", textDecoration: \"none\" }}\r\n          >\r\n            <h2>\r\n              {\" \"}\r\n              <MdChatBubble size=\"2.1rem\" color=\"#007bff\" /> Chats\r\n            </h2>\r\n          </Link>\r\n        </Col>\r\n      </Row>\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction ImageModal(props) {\r\n  const [open, setOpen] = useState(false);\r\n  var image = props.image;\r\n  var setflag = props.setflag;\r\n\r\n  const handleInputChange = useCallback(\r\n    (event) => {\r\n      setflag(false);\r\n    },\r\n    [setflag]\r\n  );\r\n\r\n  const closemodal = () => {\r\n    handleInputChange();\r\n    setOpen(false);\r\n  };\r\n  useEffect(() => {\r\n    if (image != false && image != null) {\r\n      setOpen(true);\r\n    }\r\n    console.log(image);\r\n  }, [image]);\r\n\r\n  // function ValidURL(str) {\r\n  //   var regex = /(http|https):\\/\\/(\\w+:{0,1}\\w*)?(\\S+)(:[0-9]+)?(\\/|\\/([\\w#!:.?+=&%!\\-\\/]))?/;\r\n  //   if (!regex.test(str)) {\r\n  //     // alert(\"Please enter valid URL.\");\r\n  //     return false;\r\n  //   } else {\r\n  //     return true;\r\n  //   }\r\n  // }\r\n  return (\r\n    <Modal\r\n      basic\r\n      onClose={closemodal}\r\n      onOpen={() => setOpen(true)}\r\n      open={open}\r\n      // size=\"tiny\"\r\n      className=\"uploadModal\"\r\n      // trigger={<Button>Show Modal</Button>}\r\n    >\r\n      {/* <Modal.Header>Photo</Modal.Header> */}\r\n      {image != null ? (\r\n        <Modal.Content image>\r\n          {ValidURL(image) ? (\r\n            <Image centered src={image} wrapped />\r\n          ) : (\r\n            <Modal.Description>\r\n              <p>{image}</p>\r\n            </Modal.Description>\r\n          )}\r\n        </Modal.Content>\r\n      ) : null}\r\n      <Modal.Actions>\r\n        <Button basic color=\"red\" inverted onClick={closemodal}>\r\n          <MdClose /> Close\r\n        </Button>\r\n      </Modal.Actions>\r\n    </Modal>\r\n  );\r\n}\r\n\r\nfunction ImageModal2(props) {\r\n  const [open, setOpen] = useState(false);\r\n  const [image, setimage] = useState([]);\r\n\r\n  useEffect(() => {\r\n    setimage(props.image);\r\n    console.log(\"images change\");\r\n  }, [props.image]);\r\n\r\n  useEffect(() => {\r\n    if (image.length > 0) setOpen(true);\r\n    if (image.length <= 0) setOpen(false);\r\n    console.log(image);\r\n  }, [image]);\r\n\r\n  const handleInputChange = useCallback(\r\n    (event) => {\r\n      props.flag(true);\r\n      setOpen(false);\r\n    },\r\n    [props.flag]\r\n  );\r\n\r\n  const sekhararr = (e) => {\r\n    console.log(e.target.parentElement.parentElement.id);\r\n    let ritem = image[e.target.parentElement.parentElement.id];\r\n\r\n    props.setimage(image.filter((e) => e !== ritem));\r\n  };\r\n  return (\r\n    <Modal\r\n      basic\r\n      onClose={() => setOpen(false)}\r\n      onOpen={() => setOpen(true)}\r\n      open={open}\r\n      centered\r\n      size=\"tiny\"\r\n      className=\"uploadModal\"\r\n      // trigger={<Button>Show Modal</Button>}\r\n    >\r\n      <Modal.Header>Upload image</Modal.Header>\r\n      <Modal.Content scrolling>\r\n        {image.length > 0 ? (\r\n          <Image.Group size=\"small\">\r\n            {image.map((nap, key) => (\r\n              <Image\r\n                key={key}\r\n                id={key}\r\n                label={{\r\n                  as: \"a\",\r\n                  corner: \"right\",\r\n                  icon: \"trash\",\r\n                  onClick: sekhararr,\r\n                }}\r\n                src={URL.createObjectURL(nap)}\r\n              />\r\n            ))}\r\n            <RiImageAddFill\r\n              onClick={props.addmore}\r\n              color=\"gray\"\r\n              style={{ cursor: \"pointer\" }}\r\n            />\r\n          </Image.Group>\r\n        ) : null}\r\n      </Modal.Content>\r\n\r\n      <Modal.Actions>\r\n        <Button\r\n          onClick={() => {\r\n            setOpen(false);\r\n          }}\r\n        >\r\n          Cancel\r\n        </Button>\r\n        <Button onClick={handleInputChange} positive>\r\n          Send\r\n        </Button>\r\n      </Modal.Actions>\r\n    </Modal>\r\n  );\r\n}\r\n\r\nfunction Empty() {\r\n  return <div></div>;\r\n}\r\n","E:\\hemanth files\\js practise\\spotmies\\firstapp\\src\\components\\editpost2.jsx",["282","283","284","285","286","287","288","289","290","291","292","293","294","295","296","297","298"],"import React, { Component, useRef } from \"react\";\r\n\r\nimport {\r\n  Button,\r\n  Form,\r\n  Input,\r\n  TextArea,\r\n  Card,\r\n  Label,\r\n  Image,\r\n  Modal,\r\n  Header,\r\n  Menu,\r\n} from \"semantic-ui-react\";\r\n\r\nimport { InputGroup } from \"react-bootstrap\";\r\nimport DatePicker from \"react-datepicker\";\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\n\r\nimport imageCompression from \"browser-image-compression\";\r\n\r\nimport {\r\n  MdLaptopMac,\r\n  MdTv,\r\n  MdEventNote,\r\n  MdEvent,\r\n  MdDriveEta,\r\n  MdFace,\r\n} from \"react-icons/md\";\r\nimport { BiCodeBlock } from \"react-icons/bi\";\r\nimport { FaChalkboardTeacher, FaTools } from \"react-icons/fa\";\r\nimport { IoCameraSharp } from \"react-icons/io5\";\r\nimport { MdPhotoCamera } from \"react-icons/md\";\r\nimport firebase from \"../firebase\";\r\nimport \"firebase/storage\";\r\nimport { createHashHistory } from \"history\";\r\nimport { useState, useEffect } from \"react\";\r\nimport { toast } from \"react-toastify\";\r\n\r\nimport \"../post.css\";\r\n\r\nconst history = createHashHistory();\r\n\r\nconst db = firebase.firestore();\r\nconst storage = firebase.storage();\r\n\r\nvar imgarr = [];\r\nvar jobcate = 1;\r\nlet avoid = 0;\r\nlet avoid2 = 0;\r\n\r\nfunction useTimes() {\r\n  const [postdata, setdata] = useState([]);\r\n  const [posttime, setposttime] = useState([]);\r\n  const [madia, setmadia] = useState([]);\r\n  useEffect(() => {\r\n    //\r\n    firebase.auth().onAuthStateChanged(function (user) {\r\n      if (user) {\r\n        let arr = [];\r\n        let inj = [];\r\n        avoid = 0;\r\n        avoid2 = 0;\r\n        console.log(\"usetime\");\r\n        var personId;\r\n\r\n        personId = window.location.pathname;\r\n        personId = personId.replace(\"/mybookings/id/edit/\", \"\");\r\n        console.log(personId);\r\n        db.collection(\"users\")\r\n          .doc(firebase.auth().currentUser.uid)\r\n          .collection(\"adpost\")\r\n          .doc(personId)\r\n          .get()\r\n          .then((snap) => {\r\n            console.log(snap.data().posttime.toDate());\r\n            setdata(snap.data());\r\n            arr.push(String(snap.data().posttime.toDate()));\r\n            arr.push(snap.data().schedule.toDate());\r\n            setposttime(arr);\r\n            inj.push(snap.data().media);\r\n            setmadia(inj);\r\n            document.querySelector(\"#nameofserv\").value = snap.data().problem;\r\n            document.querySelector(\"#sdesc\").value = snap.data().description;\r\n            //  document.querySelector('.cate').value=snap.data().job;\r\n            document.querySelector(\"#sprice\").value = snap.data().money;\r\n            snap.data().media.map((nap) => src.push(nap));\r\n          })\r\n          .then(() => {});\r\n      }\r\n    });\r\n    //\r\n  }, []);\r\n  return { postdata, posttime };\r\n}\r\n\r\nexport default function newpost2() {\r\n  return (\r\n    <div>\r\n      <Postnew />\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction Postnew() {\r\n  const { postdata, posttime } = useTimes();\r\n\r\n  return (\r\n    <div style={{ paddingTop: \"20px\" }}>\r\n      <Card centered id=\"formcard\">\r\n        <Card.Content>\r\n          <Card.Header style={{ textAlign: \"center\" }}>New Post</Card.Header>\r\n        </Card.Content>\r\n        <Card.Content>\r\n          {/* <Postform data={src}/> */}\r\n          <Postform2 />\r\n        </Card.Content>\r\n      </Card>\r\n      <ModalExampleModal />\r\n    </div>\r\n  );\r\n}\r\n// var src=['https://www.w3schools.com/howto/img_snow.jpg']\r\nvar src = [];\r\n\r\nfunction Postform2() {\r\n  const { postdata, posttime } = useTimes();\r\n  console.log(postdata);\r\n  const [startDate, setState] = useState(\"\");\r\n  const [arrayvar, setarrayvar] = useState([]);\r\n  const [arrayvar2, setarrayvar2] = useState([]);\r\n  const [image, setimage] = useState([]);\r\n  const [progress, setprogress] = useState(0);\r\n  const photoUpload = useRef(null);\r\n\r\n  //console.log(postdata)\r\n\r\n  if (posttime[1] && avoid2 == 0) {\r\n    console.log(posttime[1]);\r\n    setState(posttime[1]);\r\n    setarrayvar2(postdata.media);\r\n    console.log(\"setstate\");\r\n    avoid2 = 1;\r\n  }\r\n  function handleChange(date) {\r\n    setState(date);\r\n    console.log(date);\r\n  }\r\n\r\n  const handleSubmit = (newar) => {\r\n    // event.preventDefault();\r\n    console.log(arrayvar);\r\n    let schedule = startDate;\r\n    let name = document.querySelector(\"#nameofserv\").value;\r\n    let desc = document.querySelector(\"#sdesc\").value;\r\n    // let cat=document.querySelector('#scate').value\r\n    let cat = jobcate;\r\n    let price = document.querySelector(\"#sprice\").value;\r\n    if (desc == NaN) desc = \"\";\r\n    if (cat == \"true\") {\r\n      //alert(\"please select category\");\r\n      toast.warning(\"please select category\");\r\n    } else {\r\n      cat = parseInt(cat);\r\n      price = parseInt(price);\r\n      console.log(name, desc, cat, price, imgarr, schedule);\r\n      const newpost = db\r\n        .collection(\"users\")\r\n        .doc(firebase.auth().currentUser.uid)\r\n        .collection(\"adpost\")\r\n        .doc(postdata.orderid);\r\n      var d = new Date();\r\n      console.log(d);\r\n      newpost\r\n        .update({\r\n          job: cat,\r\n          problem: name,\r\n          description: desc,\r\n          money: price,\r\n          media: newar,\r\n          request: \"nothing\",\r\n          utime: d,\r\n          schedule: schedule,\r\n        })\r\n        .then(() => {\r\n          return db.collection(\"allads\").doc(newpost.id).update({\r\n            job: cat,\r\n            problem: name,\r\n            description: desc,\r\n            money: price,\r\n            media: arrayvar,\r\n            utime: d,\r\n            schedule: schedule,\r\n          });\r\n        })\r\n        .then(() => {\r\n          //  alert(\"post added successfully\");\r\n          toast.success(\"post added successfully\");\r\n          history.go(-1);\r\n          imgarr = [];\r\n        });\r\n    }\r\n  };\r\n\r\n  const handleChangeg = (e) => {\r\n    console.log(\"console handle change\");\r\n    const options = {\r\n      maxSizeMB: 0.15,\r\n      maxWidthOrHeight: 800,\r\n      useWebWorker: true,\r\n    };\r\n    let cfile;\r\n\r\n    // setimage([]);\r\n    for (var i = 0; i < e.target.files.length; i++) {\r\n      let k = Number(i);\r\n\r\n      imageCompression(e.target.files[k], options)\r\n        .then((x) => {\r\n          cfile = x;\r\n\r\n          //     setimage(image.concat([cfile]))\r\n          setimage((nap) => [...nap, cfile]);\r\n          document.getElementById(\"upldbtn\").style.display = \"block\";\r\n        })\r\n        .catch(function (error) {\r\n          console.log(error.message);\r\n        });\r\n    }\r\n  };\r\n  useEffect(() => {\r\n    if (arrayvar.length > 0) {\r\n      if (arrayvar.length == image.length) {\r\n        let newar = arrayvar2.concat(arrayvar);\r\n        setarrayvar(newar);\r\n        handleSubmit(newar);\r\n      }\r\n    }\r\n  }, [arrayvar]);\r\n\r\n  const handleUpload = (e) => {\r\n    e.preventDefault();\r\n    //  document.getElementById(\"uploaderb\").style.display=\"block\"\r\n    // document.getElementById('upldbtn').style.display=\"none\"\r\n\r\n    if (image.length > 0) {\r\n      for (var i = 0; i < image.length; i++) {\r\n        let k = Number(i);\r\n        const uploadTask = storage\r\n          .ref(\r\n            `users/${firebase.auth().currentUser.uid}/adpost/${image[k].name}`\r\n          )\r\n          .put(image[k]);\r\n        uploadTask.on(\r\n          \"state_changed\",\r\n          (snapshot) => {\r\n            const progress = Math.round(\r\n              (snapshot.bytesTransferred / snapshot.totalBytes) * 100\r\n            );\r\n            setprogress(progress);\r\n          },\r\n          (error) => {\r\n            console.log(error);\r\n          },\r\n          () => {\r\n            storage\r\n              .ref(`users/${firebase.auth().currentUser.uid}/adpost/`)\r\n              .child(image[k].name)\r\n              .getDownloadURL()\r\n              .then((url) => {\r\n                console.log(url);\r\n                setarrayvar((nap) => [...nap, url]);\r\n              })\r\n              .catch((err) => console.log(err));\r\n          }\r\n        );\r\n      }\r\n    } else {\r\n      setarrayvar([]);\r\n      let newar = arrayvar2.concat(arrayvar);\r\n      setarrayvar(newar);\r\n      handleSubmit(newar);\r\n    }\r\n    //document.getElementById(\"uploaderb\").style.display=\"none\"\r\n  };\r\n\r\n  const sekhararr = (e) => {\r\n    console.log(e.target.parentElement.parentElement.id);\r\n    var array = [...image]; // make a separate copy of the array\r\n    // var index = array.indexOf(e.target.parentElement.parentElement.id)\r\n    let index2 = Number(e.target.parentElement.parentElement.id);\r\n    console.log(e);\r\n    if (index2 !== -1) {\r\n      array.splice(index2, 1);\r\n      setimage(array);\r\n    }\r\n  };\r\n\r\n  const sekhararr2 = (e) => {\r\n    console.log(e.target.parentElement.parentElement.id);\r\n    var array = [...arrayvar2]; // make a separate copy of the array\r\n    // var index = array.indexOf(e.target.parentElement.parentElement.id)\r\n    let index2 = Number(e.target.parentElement.parentElement.id);\r\n    console.log(e);\r\n    if (index2 !== -1) {\r\n      array.splice(index2, 1);\r\n      setarrayvar2(array);\r\n    }\r\n  };\r\n\r\n  const photoHandle = (e) => {\r\n    // photoUpload.current.click();\r\n    document.querySelector(\".photoUploads\").click();\r\n    console.log(\"photoClicked\");\r\n  };\r\n\r\n  return (\r\n    <div className=\"postjobdiv\">\r\n      <Form className=\"postjobb\" onSubmit={handleUpload}>\r\n        <Form.Group widths=\"equal\">\r\n          <Form.Field\r\n            required\r\n            control={Input}\r\n            label=\"First name\"\r\n            placeholder=\"enter name of service\"\r\n            id=\"nameofserv\"\r\n            className=\"nameofser\"\r\n          />\r\n        </Form.Group>\r\n\r\n        <Form.Field\r\n          control={TextArea}\r\n          label=\"Description\"\r\n          id=\"sdesc\"\r\n          placeholder=\"Tell us more about your problem or any note here...\"\r\n        />\r\n        <Form.Field>\r\n          Enter Amount\r\n          <Input\r\n            labelPosition=\"right\"\r\n            type=\"number\"\r\n            id=\"sprice\"\r\n            placeholder=\"Amount\"\r\n          >\r\n            <Label basic>₹</Label>\r\n            <input />\r\n            <Label>.00</Label>\r\n          </Input>\r\n        </Form.Field>\r\n\r\n        <Form.Field>\r\n          <InputGroup className=\"mb-2\">\r\n            <InputGroup.Prepend className=\"nameofser\">\r\n              <InputGroup.Text>\r\n                {\" \"}\r\n                <MdEvent size=\"1.3em\" />\r\n              </InputGroup.Text>\r\n            </InputGroup.Prepend>\r\n            <DatePicker\r\n              className=\"datepicker\"\r\n              selected={startDate}\r\n              placeholderText=\"when you want service\"\r\n              minDate={new Date()}\r\n              name=\"startDate\"\r\n              showTimeSelect\r\n              timeFormat=\"HH:mm\"\r\n              todayButton=\"Today\"\r\n              timeIntervals={60}\r\n              timeCaption=\"time\"\r\n              // dateFormat=\"dd/MM/yyyy\"\r\n              dateFormat=\"MMMM d, yyyy h:mm aa\"\r\n              withPortal\r\n              required\r\n            />\r\n          </InputGroup>\r\n        </Form.Field>\r\n\r\n        {/* <MdPhotoCamera\r\n          style={{ height: \"150px\", width: \"100px\" }}\r\n          onClick={photoHandle}\r\n        /> */}\r\n\r\n        <Form.Field>\r\n          <Input\r\n            icon=\"photo\"\r\n            iconPosition=\"Right\"\r\n            type=\"file\"\r\n            placeholder=\"Enter tags\"\r\n            //   onChange={upldimg}\r\n            ref={photoUpload}\r\n            accept=\".gif,.jpg,.jpeg,.png\"\r\n            onChange={handleChangeg}\r\n            style={{ display: \"block\" }}\r\n            className=\"photoUploads\"\r\n            multiple\r\n          />\r\n        </Form.Field>\r\n        {/* <Form.Field control={Button} color=\"green\" id=\"upldbtn\" type=\"button\" onClick={handleUpload}>\r\n              upload images\r\n            </Form.Field> */}\r\n        <progress value={progress} max=\"100\" id=\"uploaderb\">\r\n          progress\r\n        </progress>\r\n\r\n        <div className=\"imgdiv\">\r\n          <div className=\"gallery\"></div>\r\n        </div>\r\n\r\n        <div>\r\n          <Image.Group size=\"small\">\r\n            {arrayvar2.map((nap, key) => (\r\n              <Image\r\n                fluid\r\n                key={key}\r\n                id={key}\r\n                label={{\r\n                  as: \"a\",\r\n                  corner: \"right\",\r\n                  icon: \"trash\",\r\n                  onClick: sekhararr2,\r\n                }}\r\n                src={nap}\r\n              />\r\n            ))}\r\n          </Image.Group>\r\n\r\n          <Image.Group size=\"small\">\r\n            {image.map((nap, key) => (\r\n              <Image\r\n                fluid\r\n                key={key}\r\n                id={key}\r\n                label={{\r\n                  as: \"a\",\r\n                  corner: \"right\",\r\n                  icon: \"trash\",\r\n                  onClick: sekhararr,\r\n                }}\r\n                src={URL.createObjectURL(nap)}\r\n              />\r\n            ))}\r\n          </Image.Group>\r\n        </div>\r\n\r\n        <Form.Field\r\n          control={Button}\r\n          style={{ textAlign: \"Center\" }}\r\n          type=\"submit\"\r\n          centered\r\n        >\r\n          Submit\r\n        </Form.Field>\r\n      </Form>\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction ModalExampleModal() {\r\n  var imgsrc =\r\n    \"https://www.google.com/url?sa=i&url=https%3A%2F%2Fwww.vectorgraphit.com%2Ffree-svg-illustrations-for-your-next-website-or-blog%2Famp&psig=AOvVaw28FMPvsnbckOWg5KwrbFDM&ust=1614586813687000&source=images&cd=vfe&ved=0CAIQjRxqFwoTCLDUruGSjO8CFQAAAAAdAAAAABAJ\";\r\n  const [open, setOpen] = React.useState(true);\r\n\r\n  function click(e) {\r\n    console.log(e.target.dataset.txt);\r\n    jobcate = e.target.dataset.txt;\r\n    setOpen(false);\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Modal\r\n        size=\"small\"\r\n        className=\"ModalEdit\"\r\n        style={{\r\n          marginLeft: \"auto\",\r\n          marginRight: \"auto\",\r\n          display: \"block\",\r\n          width: \"70%\",\r\n        }}\r\n        onOpen={() => setOpen(true)}\r\n        open={open}\r\n      >\r\n        <Modal.Header>Select Job Category</Modal.Header>\r\n        <Modal.Content></Modal.Content>\r\n        <Card centered id=\"jobcate\">\r\n          <Card.Content>\r\n            <Card.Header>Select Category here</Card.Header>\r\n          </Card.Content>\r\n          <Card.Content>\r\n            <Menu vertical centered style={{ width: \"auto\" }}>\r\n              <Menu.Item link data-txt=\"0\" onClick={click}>\r\n                <FaTools size=\"1.5rem\" />\r\n                &nbsp;&nbsp;&nbsp;&nbsp; Ac Service\r\n              </Menu.Item>\r\n              <Menu.Item link data-txt=\"1\" onClick={click}>\r\n                <MdLaptopMac size=\"1.5rem\" />\r\n                &nbsp;&nbsp;&nbsp;&nbsp; Computer/Laptop Service\r\n              </Menu.Item>\r\n              <Menu.Item link data-txt=\"2\" onClick={click}>\r\n                <MdTv size=\"1.5rem\" />\r\n                &nbsp;&nbsp;&nbsp;&nbsp; Tv Repair\r\n              </Menu.Item>\r\n              <Menu.Item link data-txt=\"3\" onClick={click}>\r\n                <BiCodeBlock size=\"1.5rem\" />\r\n                &nbsp;&nbsp;&nbsp;&nbsp; Development\r\n              </Menu.Item>\r\n              <Menu.Item link data-txt=\"4\" onClick={click}>\r\n                <FaChalkboardTeacher size=\"1.5rem\" />\r\n                &nbsp;&nbsp;&nbsp;&nbsp; Tutor\r\n              </Menu.Item>\r\n              <Menu.Item link data-txt=\"5\" onClick={click}>\r\n                <MdFace size=\"1.5rem\" />\r\n                &nbsp;&nbsp;&nbsp;&nbsp; Beuty\r\n              </Menu.Item>\r\n              <Menu.Item link data-txt=\"6\" onClick={click}>\r\n                <IoCameraSharp size=\"1.5rem\" />\r\n                &nbsp;&nbsp;&nbsp;&nbsp; Photographer\r\n              </Menu.Item>\r\n              <Menu.Item link data-txt=\"7\" onClick={click}>\r\n                <MdDriveEta size=\"1.5rem\" />\r\n                &nbsp;&nbsp;&nbsp;&nbsp; Driver\r\n              </Menu.Item>\r\n              <Menu.Item link data-txt=\"8\" onClick={click}>\r\n                <MdEventNote size=\"1.5rem\" />\r\n                &nbsp;&nbsp;&nbsp;&nbsp; Events\r\n              </Menu.Item>\r\n            </Menu>\r\n          </Card.Content>\r\n        </Card>\r\n      </Modal>\r\n    </>\r\n  );\r\n}\r\n","E:\\hemanth files\\js practise\\spotmies\\firstapp\\src\\components\\bikerental.jsx",["299","300","301","302","303","304","305","306","307","308","309","310","311","312","313","314","315","316","317","318","319","320","321","322","323","324","325","326","327","328","329","330","331","332","333","334","335","336","337","338","339","340","341","342","343","344","345","346","347","348","349","350"],"import React from \"react\";\r\nimport \"semantic-ui-css/semantic.min.css\";\r\nimport {\r\n  Card,\r\n  Icon,\r\n  Button,\r\n  Header,\r\n  Image,\r\n  Modal,\r\n  Step,\r\n  Menu,\r\n  Dropdown,\r\n  Checkbox,\r\n  Segment,\r\n  Dimmer,\r\n  Loader,\r\n} from \"semantic-ui-react\";\r\nimport \"./rental.css\";\r\nimport { Row, Col } from \"react-bootstrap\";\r\nimport { SiCoronaengine } from \"react-icons/si\";\r\nimport { BsFillGearFill } from \"react-icons/bs\";\r\nimport { IoSpeedometerOutline } from \"react-icons/io5\";\r\nimport { FaPeopleCarry } from \"react-icons/fa\";\r\nimport { useState, useEffect } from \"react\";\r\nimport firebase from \"../firebase\";\r\nimport ScrollEvent from \"react-onscroll\";\r\nimport { toast } from \"react-toastify\";\r\n\r\nconst db = firebase.firestore();\r\n\r\nfunction Rentals() {\r\n  //  var times=useTimes()\r\n  const [times, setTimes] = useState([]);\r\n\r\n  function useWindowSize() {\r\n    const [size, setSize] = useState([window.innerHeight, window.innerWidth]);\r\n    useEffect(() => {\r\n      const handleResize = () => {\r\n        setSize([window.innerHeight, window.innerWidth]);\r\n      };\r\n      window.addEventListener(\"resize\", handleResize);\r\n      return () => {\r\n        window.removeEventListener(\"resize\", handleResize);\r\n      };\r\n    }, []);\r\n    return size;\r\n  }\r\n\r\n  //cartype filter\r\n  const [count, setcount] = useState(\"true\");\r\n  const [ftype, settype] = useState(\"status\");\r\n\r\n  //fuel filter\r\n  const [count2, setcount2] = useState(\"true\");\r\n  const [ftype2, settype2] = useState(\"status\");\r\n\r\n  //seats filter\r\n  const [count3, setcount3] = useState(\"true\");\r\n  const [ftype3, settype3] = useState(\"status\");\r\n\r\n  //gear type\r\n  const [count4, setcount4] = useState(\"true\");\r\n  const [ftype4, settype4] = useState(\"status\");\r\n\r\n  //toc filter typ of car petrol or diesel\r\n  const [count5, setcount5] = useState(\"true\");\r\n  const [ftype5, settype5] = useState(\"status\");\r\n\r\n  const [checkt, setcheck] = useState(true);\r\n\r\n  const [scr, setscr] = useState(true);\r\n\r\n  // filter function\r\n\r\n  function uncheckall(data) {\r\n    setTimes([]);\r\n    if (data == \"ctype\") settype(\"cartype\");\r\n    else {\r\n      settype(\"status\");\r\n      setcount(\"true\");\r\n    }\r\n    settype2(\"status\");\r\n    setcount2(\"true\");\r\n    settype3(\"status\");\r\n    setcount3(\"true\");\r\n    settype4(\"status\");\r\n    setcount4(\"true\");\r\n    settype5(\"status\");\r\n    setcount5(\"true\");\r\n\r\n    var box = document.querySelector(\".check1\");\r\n    box.isChecked = true;\r\n    setcheck(false);\r\n    // for(var i=0;i<=2;i++){\r\n    //   let box=document.querySelector(`.check${i}`)\r\n    //   box.checked=false;\r\n    // }\r\n  }\r\n\r\n  function newfunk(e) {\r\n    //if(ftype==\"status\") setTimes([]);\r\n\r\n    uncheckall(\"ctype\");\r\n    // setcount(e.target.innerText)\r\n    // settype(\"cartype\")\r\n    setcount(e.target.innerText);\r\n\r\n    // for(var i=0;i<=2;i++){\r\n    //   let ctype=document.getElementById(`type${i}`)\r\n    //   if(ctype.checked){\r\n    //     console.log(ctype.value,\"is checked\")\r\n    //     //  setTimes([]);\r\n    //       settype(\"cartype\")\r\n    //        setcount(ctype.value)\r\n    //        console.log(count)\r\n    //   }\r\n    //   else{\r\n    //     console.log(ctype.value,\"nocheck\")\r\n    //   }\r\n    // }\r\n  }\r\n\r\n  //fuel filter\r\n  function fuelf(e) {\r\n    setTimes([]);\r\n    if (e.target.checked) {\r\n      settype2(\"fuelincl\");\r\n      setcount2(\"true\");\r\n    } else {\r\n      settype2(\"fuelincl\");\r\n      setcount2(\"false\");\r\n    }\r\n  }\r\n\r\n  //tranmission filter\r\n  function transfilt(e) {\r\n    setTimes([]);\r\n    settype4(\"geartype\");\r\n    //if(e.target.checked)console.log(\"checkd\",e.target.value)\r\n    if (\r\n      (document.getElementById(\"trans1\").checked &&\r\n        document.getElementById(\"trans2\").checked) ||\r\n      (!document.getElementById(\"trans1\").checked &&\r\n        !document.getElementById(\"trans2\").checked)\r\n    ) {\r\n      settype4(\"status\");\r\n      setcount4(\"true\");\r\n    } else {\r\n      if (document.getElementById(\"trans1\").checked) setcount4(\"automatic\");\r\n      else if (document.getElementById(\"trans2\").checked) setcount4(\"manual\");\r\n    }\r\n  }\r\n\r\n  //type of car filter petrol or diesel fitelr\r\n  function toc(e) {\r\n    setTimes([]);\r\n    settype5(\"toc\");\r\n    //if(e.target.checked)console.log(\"checkd\",e.target.value)\r\n    if (\r\n      (document.getElementById(\"toc1\").checked &&\r\n        document.getElementById(\"toc2\").checked) ||\r\n      (!document.getElementById(\"toc1\").checked &&\r\n        !document.getElementById(\"toc2\").checked)\r\n    ) {\r\n      settype5(\"status\");\r\n      setcount5(\"true\");\r\n    } else {\r\n      if (document.getElementById(\"toc1\").checked) {\r\n        setcount5(\"petrol\");\r\n        console.log(\"petr\");\r\n      } else if (document.getElementById(\"toc2\").checked) setcount5(\"diesel\");\r\n    }\r\n  }\r\n\r\n  function satish(e) {\r\n    if (!e.target.checked) {\r\n      setTimes([]);\r\n    } else {\r\n    }\r\n    console.log(\"stish\");\r\n  }\r\n\r\n  function seatfil(e) {\r\n    setTimes([]);\r\n    settype3(\"seats\");\r\n    if (e.target.checked) console.log(\"checkd\", e.target.value);\r\n    if (\r\n      (document.getElementById(\"seat0\").checked &&\r\n        document.getElementById(\"seat1\").checked) ||\r\n      (!document.getElementById(\"seat0\").checked &&\r\n        !document.getElementById(\"seat1\").checked)\r\n    ) {\r\n      settype3(\"status\");\r\n      setcount3(\"true\");\r\n    } else {\r\n      if (e.target.checked) {\r\n        settype3(\"seats\");\r\n        setcount3(e.target.value);\r\n      } else {\r\n        if (document.getElementById(\"seat0\").checked) setcount3(\"5\");\r\n        else if (document.getElementById(\"seat1\").checked) setcount3(\"7\");\r\n      }\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    let newtimes;\r\n    db.collection(\"rentals\")\r\n      .get()\r\n      .then((snap) => {\r\n        snap.docs.forEach((nap) => {\r\n          if (nap.data().permission) {\r\n            // if(keys==0){\r\n            db.collection(\"rentals\")\r\n              .doc(nap.id)\r\n              .collection(\"products\")\r\n              .where(ftype, \"==\", count)\r\n              .where(ftype2, \"==\", count2)\r\n              .where(ftype3, \"==\", count3)\r\n              .where(ftype4, \"==\", count4)\r\n              .where(ftype5, \"==\", count5)\r\n              // .orderBy(\"price\")\r\n              .get()\r\n              .then((snap) => {\r\n                newtimes = snap.docs.map((doc) => ({\r\n                  id: doc.id,\r\n                  ...doc.data(),\r\n                }));\r\n                setTimes((cap) => [...cap, ...newtimes]);\r\n                // console.log(times)\r\n              });\r\n          }\r\n        });\r\n      });\r\n  }, [\r\n    count,\r\n    ftype,\r\n    count2,\r\n    ftype2,\r\n    count3,\r\n    ftype3,\r\n    count4,\r\n    ftype4,\r\n    count5,\r\n    ftype5,\r\n  ]);\r\n\r\n  //console.log(times)\r\n\r\n  var arr = [];\r\n  for (var i = 0; i <= 100; i++) {\r\n    arr.push(false);\r\n  }\r\n  const [open, setOpen] = useState(arr);\r\n  const [menu, setMenu] = useState(false);\r\n\r\n  function settrue() {\r\n    setMenu(!menu);\r\n  }\r\n  const scrollevent = () => {\r\n    // console.log(\"scroll\")\r\n    setscr(false);\r\n    setTimeout(() => {\r\n      console.log(\"scroll\");\r\n      setscr(true);\r\n    }, 500);\r\n  };\r\n\r\n  const [heights, widths] = useWindowSize();\r\n  return (\r\n    <div>\r\n      {/* <div className=\"comingSoon\">\r\n        <h1 className=\"soonText\">Coming Soon ...</h1>\r\n        </div> */}\r\n\r\n      <div>\r\n        {/* <  car Filtering /> */}\r\n        {scr ? (\r\n          <Button\r\n            primary\r\n            onClick={() => {\r\n              settrue();\r\n            }}\r\n            style={{\r\n              position: \"fixed\",\r\n              zIndex: \"200\",\r\n              margin: \"10px 0 0 17px\",\r\n            }}\r\n          >\r\n            Filters\r\n          </Button>\r\n        ) : null}\r\n        {menu ? (\r\n          <div className=\"filter-div\">\r\n            <Dropdown\r\n              text=\"Filter\"\r\n              icon=\"filter\"\r\n              labeled\r\n              button\r\n              className=\"icon\"\r\n              style={{ marginTop: \"40px\" }}\r\n            >\r\n              <Dropdown.Menu id=\"filtmenu\" onClick={newfunk}>\r\n                <Dropdown.Item>\r\n                  <Icon name=\"attention\" className=\"right floated\" />\r\n                  sport\r\n                </Dropdown.Item>\r\n                <Dropdown.Item>\r\n                  <Icon name=\"comment\" className=\"right floated\" />\r\n                  suv\r\n                </Dropdown.Item>\r\n                <Dropdown.Item>\r\n                  <Icon name=\"conversation\" className=\"right floated\" />\r\n                  sedan\r\n                </Dropdown.Item>\r\n              </Dropdown.Menu>\r\n            </Dropdown>\r\n            <br />\r\n            <Button\r\n              onClick={(e) => uncheckall(\"all\")}\r\n              style={{ marginTop: \"20px\" }}\r\n            >\r\n              Show me all cars\r\n            </Button>\r\n            <br />\r\n\r\n            {/* <Segment compact \r\n    onClick={newfunk} \r\n    id=\"segmttype\">\r\n      <Checkbox label=\"sport\" id=\"type0\" value=\"sport\" onClick={satish}/><br/>\r\n      <Checkbox label=\"sedan\" id=\"type1\" value=\"sedan\" onClick={satish}/><br/>\r\n      <Checkbox label=\"suv\" id=\"type2\" value=\"suv\" onClick={satish}/><br/>\r\n    </Segment> */}\r\n\r\n            <Checkbox\r\n              toggle\r\n              style={{ marginTop: \"20px\" }}\r\n              onChange={fuelf}\r\n              id=\"fuelid\"\r\n              label=\"petrol\"\r\n              className=\"check0\"\r\n            />\r\n\r\n            <Segment compact onClick={seatfil} id=\"segmttype\">\r\n              <Checkbox\r\n                label=\"5seats\"\r\n                id=\"seat0\"\r\n                value=\"5\"\r\n                className=\"check1\"\r\n              />\r\n              <br />\r\n              <Checkbox\r\n                label=\"7seats\"\r\n                id=\"seat1\"\r\n                value=\"7\"\r\n                className=\"check2\"\r\n              />\r\n              <br />\r\n            </Segment>\r\n\r\n            <Segment compact onClick={transfilt} id=\"segmttype2\">\r\n              <Checkbox label=\"Automatic\" id=\"trans1\" value=\"automatic\" />\r\n              <br />\r\n              <Checkbox label=\"Manual\" id=\"trans2\" value=\"manual\" />\r\n              <br />\r\n            </Segment>\r\n\r\n            <Segment compact onClick={toc} id=\"segmttype3\">\r\n              <Checkbox label=\"Petrol\" id=\"toc1\" value=\"petrol\" />\r\n              <br />\r\n              <Checkbox label=\"Diesel\" id=\"toc2\" value=\"diesel\" />\r\n              <br />\r\n            </Segment>\r\n          </div>\r\n        ) : null}\r\n\r\n        {/* car display cards */}\r\n        <div className=\"newdiv\">\r\n          <div\r\n            style={{ padding: \"10px\", marginLeft: \"auto\", marginRight: \"auto\" }}\r\n            className=\"maindiv\"\r\n            id=\"scrollcard\"\r\n          >\r\n            {widths <= 420 ? (\r\n              <ScrollEvent handleScrollCallback={scrollevent} />\r\n            ) : null}\r\n            {times.length == 0 ? (\r\n              //            <Row>\r\n              //    <Col xs={12} lg={4}> <Segment className=\"rentcard\">\r\n              //       <Dimmer active inverted>\r\n              //         <Loader size='large'>Loading</Loader>\r\n              //       </Dimmer>\r\n\r\n              //       <Image src='/images/wireframe/paragraph.png' />\r\n              //     </Segment></Col>\r\n\r\n              //    <Col xs={12} lg={4}> <Segment className=\"rentcard\">\r\n              //     <Dimmer active inverted>\r\n              //       <Loader size='large'>Loading</Loader>\r\n              //     </Dimmer>\r\n\r\n              //     <Image src='/images/wireframe/paragraph.png' />\r\n              //   </Segment></Col>\r\n\r\n              //        <Col xs={12} lg={4}>  <Segment className=\"rentcard\">\r\n              //          <Dimmer active inverted>\r\n              //           <Loader size='large'>Loading</Loader>\r\n              //          </Dimmer>\r\n\r\n              //   <Image src='/images/wireframe/paragraph.png' />\r\n              // </Segment></Col>\r\n\r\n              //         <Col xs={12} lg={4}> <Segment className=\"rentcard\">\r\n              //            <Dimmer active inverted>\r\n              //                <Loader size='large'>Loading</Loader>\r\n              //            </Dimmer>\r\n\r\n              //              <Image src='/images/wireframe/paragraph.png' />\r\n              //           </Segment></Col>\r\n\r\n              //           <Col xs={12} lg={4}> <Segment className=\"rentcard\">\r\n              //             <Dimmer active inverted>\r\n              //               <Loader size='large'>Loading</Loader>\r\n              //             </Dimmer>\r\n\r\n              //             <Image src='/images/wireframe/paragraph.png' />\r\n              //            </Segment></Col></Row>\r\n              <Card.Group>\r\n                <Card className=\"rentcard\">\r\n                  <Segment className=\"loaderSegment\">\r\n                    <Dimmer active inverted>\r\n                      <Loader size=\"large\">Loading</Loader>\r\n                    </Dimmer>\r\n\r\n                    <Image\r\n                      className=\"loaderImg\"\r\n                      src=\"/images/wireframe/paragraph.png\"\r\n                    />\r\n                  </Segment>\r\n                  <Card.Content>\r\n                    <Card.Header\r\n                      style={{ textAlign: \"center\", height: \"fit-content\" }}\r\n                    ></Card.Header>\r\n                  </Card.Content>\r\n\r\n                  <Card.Content className=\"carBtn\" extra>\r\n                    <div style={{ display: \"inline-flex\" }}>\r\n                      <p className=\"carContent\">\r\n                        <a>\r\n                          <BsFillGearFill />\r\n                          -- &nbsp;\r\n                        </a>\r\n                      </p>\r\n                      <p className=\"carContent\">\r\n                        <a>\r\n                          <SiCoronaengine />\r\n                          --&nbsp;\r\n                        </a>\r\n                      </p>\r\n                      <p className=\"carContent\">\r\n                        {\" \"}\r\n                        <a>\r\n                          <Icon name=\"wheelchair\" />\r\n                          --&nbsp;seats\r\n                        </a>\r\n                      </p>\r\n\r\n                      <p className=\"carContent\">\r\n                        <a>\r\n                          <IoSpeedometerOutline />\r\n                          <br />\r\n                          --&nbsp;km\r\n                        </a>\r\n                      </p>\r\n                    </div>\r\n                    <div>\r\n                      <Button.Group className=\"priceBar\">\r\n                        <Button>\r\n                          {\" \"}\r\n                          &#8377; <br /> <small> 50km </small>\r\n                        </Button>\r\n\r\n                        <Button>\r\n                          {\" \"}\r\n                          &#8377;\r\n                          <br /> <small> 100km </small>\r\n                        </Button>\r\n                        <Button>\r\n                          &#8377; <br /> <small> 150km </small>\r\n                        </Button>\r\n                      </Button.Group>\r\n                    </div>\r\n                  </Card.Content>\r\n\r\n                  <Button color=\"blue\">Book now</Button>\r\n                </Card>\r\n\r\n                <Card className=\"rentcard\">\r\n                  <Segment className=\"loaderSegment\">\r\n                    <Dimmer active inverted>\r\n                      <Loader size=\"large\">Loading</Loader>\r\n                    </Dimmer>\r\n\r\n                    <Image\r\n                      className=\"loaderImg\"\r\n                      src=\"/images/wireframe/paragraph.png\"\r\n                    />\r\n                  </Segment>\r\n                  <Card.Content>\r\n                    <Card.Header\r\n                      style={{ textAlign: \"center\", height: \"fit-content\" }}\r\n                    ></Card.Header>\r\n                  </Card.Content>\r\n\r\n                  <Card.Content className=\"carBtn\" extra>\r\n                    <div style={{ display: \"inline-flex\" }}>\r\n                      <p className=\"carContent\">\r\n                        <a>\r\n                          <BsFillGearFill />\r\n                          -- &nbsp;\r\n                        </a>\r\n                      </p>\r\n                      <p className=\"carContent\">\r\n                        <a>\r\n                          <SiCoronaengine />\r\n                          --&nbsp;\r\n                        </a>\r\n                      </p>\r\n                      <p className=\"carContent\">\r\n                        {\" \"}\r\n                        <a>\r\n                          <Icon name=\"wheelchair\" />\r\n                          --&nbsp;seats\r\n                        </a>\r\n                      </p>\r\n\r\n                      <p className=\"carContent\">\r\n                        <a>\r\n                          <IoSpeedometerOutline />\r\n                          <br />\r\n                          --&nbsp;km\r\n                        </a>\r\n                      </p>\r\n                    </div>\r\n                    <div>\r\n                      <Button.Group className=\"priceBar\">\r\n                        <Button>\r\n                          {\" \"}\r\n                          &#8377; <br /> <small> 50km </small>\r\n                        </Button>\r\n\r\n                        <Button>\r\n                          {\" \"}\r\n                          &#8377;\r\n                          <br /> <small> 100km </small>\r\n                        </Button>\r\n                        <Button>\r\n                          &#8377; <br /> <small> 150km </small>\r\n                        </Button>\r\n                      </Button.Group>\r\n                    </div>\r\n                  </Card.Content>\r\n\r\n                  <Button color=\"blue\">Book now</Button>\r\n                </Card>\r\n\r\n                <Card className=\"rentcard\">\r\n                  <Segment className=\"loaderSegment\">\r\n                    <Dimmer active inverted>\r\n                      <Loader size=\"large\">Loading</Loader>\r\n                    </Dimmer>\r\n\r\n                    <Image\r\n                      className=\"loaderImg\"\r\n                      src=\"/images/wireframe/paragraph.png\"\r\n                    />\r\n                  </Segment>\r\n                  <Card.Content>\r\n                    <Card.Header\r\n                      style={{ textAlign: \"center\", height: \"fit-content\" }}\r\n                    ></Card.Header>\r\n                  </Card.Content>\r\n\r\n                  <Card.Content className=\"carBtn\" extra>\r\n                    <div style={{ display: \"inline-flex\" }}>\r\n                      <p className=\"carContent\">\r\n                        <a>\r\n                          <BsFillGearFill />\r\n                          -- &nbsp;\r\n                        </a>\r\n                      </p>\r\n                      <p className=\"carContent\">\r\n                        <a>\r\n                          <SiCoronaengine />\r\n                          --&nbsp;\r\n                        </a>\r\n                      </p>\r\n                      <p className=\"carContent\">\r\n                        {\" \"}\r\n                        <a>\r\n                          <Icon name=\"wheelchair\" />\r\n                          --&nbsp;seats\r\n                        </a>\r\n                      </p>\r\n\r\n                      <p className=\"carContent\">\r\n                        <a>\r\n                          <IoSpeedometerOutline />\r\n                          <br />\r\n                          --&nbsp;km\r\n                        </a>\r\n                      </p>\r\n                    </div>\r\n                    <div>\r\n                      <Button.Group className=\"priceBar\">\r\n                        <Button>\r\n                          {\" \"}\r\n                          &#8377; <br /> <small> 50km </small>\r\n                        </Button>\r\n\r\n                        <Button>\r\n                          {\" \"}\r\n                          &#8377;\r\n                          <br /> <small> 100km </small>\r\n                        </Button>\r\n                        <Button>\r\n                          &#8377; <br /> <small> 150km </small>\r\n                        </Button>\r\n                      </Button.Group>\r\n                    </div>\r\n                  </Card.Content>\r\n\r\n                  <Button color=\"blue\">Book now</Button>\r\n                </Card>\r\n\r\n                <Card className=\"rentcard\">\r\n                  <Segment className=\"loaderSegment\">\r\n                    <Dimmer active inverted>\r\n                      <Loader size=\"large\">Loading</Loader>\r\n                    </Dimmer>\r\n\r\n                    <Image\r\n                      className=\"loaderImg\"\r\n                      src=\"/images/wireframe/paragraph.png\"\r\n                    />\r\n                  </Segment>\r\n                  <Card.Content>\r\n                    <Card.Header\r\n                      style={{ textAlign: \"center\", height: \"fit-content\" }}\r\n                    ></Card.Header>\r\n                  </Card.Content>\r\n\r\n                  <Card.Content className=\"carBtn\" extra>\r\n                    <div style={{ display: \"inline-flex\" }}>\r\n                      <p className=\"carContent\">\r\n                        <a>\r\n                          <BsFillGearFill />\r\n                          -- &nbsp;\r\n                        </a>\r\n                      </p>\r\n                      <p className=\"carContent\">\r\n                        <a>\r\n                          <SiCoronaengine />\r\n                          --&nbsp;\r\n                        </a>\r\n                      </p>\r\n                      <p className=\"carContent\">\r\n                        {\" \"}\r\n                        <a>\r\n                          <Icon name=\"wheelchair\" />\r\n                          --&nbsp;seats\r\n                        </a>\r\n                      </p>\r\n\r\n                      <p className=\"carContent\">\r\n                        <a>\r\n                          <IoSpeedometerOutline />\r\n                          <br />\r\n                          --&nbsp;km\r\n                        </a>\r\n                      </p>\r\n                    </div>\r\n                    <div>\r\n                      <Button.Group className=\"priceBar\">\r\n                        <Button>\r\n                          {\" \"}\r\n                          &#8377; <br /> <small> 50km </small>\r\n                        </Button>\r\n\r\n                        <Button>\r\n                          {\" \"}\r\n                          &#8377;\r\n                          <br /> <small> 100km </small>\r\n                        </Button>\r\n                        <Button>\r\n                          &#8377; <br /> <small> 150km </small>\r\n                        </Button>\r\n                      </Button.Group>\r\n                    </div>\r\n                  </Card.Content>\r\n\r\n                  <Button color=\"blue\">Book now</Button>\r\n                </Card>\r\n\r\n                <Card className=\"rentcard\">\r\n                  <Segment className=\"loaderSegment\">\r\n                    <Dimmer active inverted>\r\n                      <Loader size=\"large\">Loading</Loader>\r\n                    </Dimmer>\r\n\r\n                    <Image\r\n                      className=\"loaderImg\"\r\n                      src=\"/images/wireframe/paragraph.png\"\r\n                    />\r\n                  </Segment>\r\n                  <Card.Content>\r\n                    <Card.Header\r\n                      style={{ textAlign: \"center\", height: \"fit-content\" }}\r\n                    ></Card.Header>\r\n                  </Card.Content>\r\n\r\n                  <Card.Content className=\"carBtn\" extra>\r\n                    <div style={{ display: \"inline-flex\" }}>\r\n                      <p className=\"carContent\">\r\n                        <a>\r\n                          <BsFillGearFill />\r\n                          -- &nbsp;\r\n                        </a>\r\n                      </p>\r\n                      <p className=\"carContent\">\r\n                        <a>\r\n                          <SiCoronaengine />\r\n                          --&nbsp;\r\n                        </a>\r\n                      </p>\r\n                      <p className=\"carContent\">\r\n                        {\" \"}\r\n                        <a>\r\n                          <Icon name=\"wheelchair\" />\r\n                          --&nbsp;seats\r\n                        </a>\r\n                      </p>\r\n\r\n                      <p className=\"carContent\">\r\n                        <a>\r\n                          <IoSpeedometerOutline />\r\n                          <br />\r\n                          --&nbsp;km\r\n                        </a>\r\n                      </p>\r\n                    </div>\r\n                    <div>\r\n                      <Button.Group className=\"priceBar\">\r\n                        <Button>\r\n                          {\" \"}\r\n                          &#8377; <br /> <small> 50km </small>\r\n                        </Button>\r\n\r\n                        <Button>\r\n                          {\" \"}\r\n                          &#8377;\r\n                          <br /> <small> 100km </small>\r\n                        </Button>\r\n                        <Button>\r\n                          &#8377; <br /> <small> 150km </small>\r\n                        </Button>\r\n                      </Button.Group>\r\n                    </div>\r\n                  </Card.Content>\r\n\r\n                  <Button color=\"blue\">Book now</Button>\r\n                </Card>\r\n\r\n                <Card className=\"rentcard\">\r\n                  <Segment className=\"loaderSegment\">\r\n                    <Dimmer active inverted>\r\n                      <Loader size=\"large\">Loading</Loader>\r\n                    </Dimmer>\r\n\r\n                    <Image\r\n                      className=\"loaderImg\"\r\n                      src=\"/images/wireframe/paragraph.png\"\r\n                    />\r\n                  </Segment>\r\n                  <Card.Content>\r\n                    <Card.Header\r\n                      style={{ textAlign: \"center\", height: \"fit-content\" }}\r\n                    ></Card.Header>\r\n                  </Card.Content>\r\n\r\n                  <Card.Content className=\"carBtn\" extra>\r\n                    <div style={{ display: \"inline-flex\" }}>\r\n                      <p className=\"carContent\">\r\n                        <a>\r\n                          <BsFillGearFill />\r\n                          -- &nbsp;\r\n                        </a>\r\n                      </p>\r\n                      <p className=\"carContent\">\r\n                        <a>\r\n                          <SiCoronaengine />\r\n                          --&nbsp;\r\n                        </a>\r\n                      </p>\r\n                      <p className=\"carContent\">\r\n                        {\" \"}\r\n                        <a>\r\n                          <Icon name=\"wheelchair\" />\r\n                          --&nbsp;seats\r\n                        </a>\r\n                      </p>\r\n\r\n                      <p className=\"carContent\">\r\n                        <a>\r\n                          <IoSpeedometerOutline />\r\n                          <br />\r\n                          --&nbsp;km\r\n                        </a>\r\n                      </p>\r\n                    </div>\r\n                    <div>\r\n                      <Button.Group className=\"priceBar\">\r\n                        <Button>\r\n                          {\" \"}\r\n                          &#8377; <br /> <small> 50km </small>\r\n                        </Button>\r\n\r\n                        <Button>\r\n                          {\" \"}\r\n                          &#8377;\r\n                          <br /> <small> 100km </small>\r\n                        </Button>\r\n                        <Button>\r\n                          &#8377; <br /> <small> 150km </small>\r\n                        </Button>\r\n                      </Button.Group>\r\n                    </div>\r\n                  </Card.Content>\r\n\r\n                  <Button color=\"blue\">Book now</Button>\r\n                </Card>\r\n\r\n                <Card className=\"rentcard\">\r\n                  <Segment className=\"loaderSegment\">\r\n                    <Dimmer active inverted>\r\n                      <Loader size=\"large\">Loading</Loader>\r\n                    </Dimmer>\r\n\r\n                    <Image\r\n                      className=\"loaderImg\"\r\n                      src=\"/images/wireframe/paragraph.png\"\r\n                    />\r\n                  </Segment>\r\n                  <Card.Content>\r\n                    <Card.Header\r\n                      style={{ textAlign: \"center\", height: \"fit-content\" }}\r\n                    ></Card.Header>\r\n                  </Card.Content>\r\n\r\n                  <Card.Content className=\"carBtn\" extra>\r\n                    <div style={{ display: \"inline-flex\" }}>\r\n                      <p className=\"carContent\">\r\n                        <a>\r\n                          74\r\n                          <BsFillGearFill />\r\n                          -- &nbsp;\r\n                        </a>\r\n                      </p>\r\n                      <p className=\"carContent\">\r\n                        <a>\r\n                          <SiCoronaengine />\r\n                          --&nbsp;\r\n                        </a>\r\n                      </p>\r\n                      <p className=\"carContent\">\r\n                        {\" \"}\r\n                        <a>\r\n                          <Icon name=\"wheelchair\" />\r\n                          --&nbsp;seats\r\n                        </a>\r\n                      </p>\r\n\r\n                      <p className=\"carContent\">\r\n                        <a>\r\n                          <IoSpeedometerOutline />\r\n                          <br />\r\n                          --&nbsp;km\r\n                        </a>\r\n                      </p>\r\n                    </div>\r\n                    <div>\r\n                      <Button.Group className=\"priceBar\">\r\n                        <Button>\r\n                          {\" \"}\r\n                          &#8377; <br /> <small> 50km </small>\r\n                        </Button>\r\n\r\n                        <Button>\r\n                          {\" \"}\r\n                          &#8377;\r\n                          <br /> <small> 100km </small>\r\n                        </Button>\r\n                        <Button>\r\n                          &#8377; <br /> <small> 150km </small>\r\n                        </Button>\r\n                      </Button.Group>\r\n                    </div>\r\n                  </Card.Content>\r\n\r\n                  <Button color=\"blue\">Book now</Button>\r\n                </Card>\r\n              </Card.Group>\r\n            ) : (\r\n              //  real cars card appearance\r\n              <Card.Group>\r\n                {times.map((nap, key) => (\r\n                  <Card className=\"rentcard\" id={nap.id} key={key}>\r\n                    <Image\r\n                      className=\"carPic\"\r\n                      src={nap.photo}\r\n                      wrapped\r\n                      ui={true}\r\n                    />\r\n                    <Card.Content>\r\n                      <Card.Header\r\n                        style={{ textAlign: \"center\", height: \"fit-content\" }}\r\n                      >\r\n                        {nap.model}\r\n                      </Card.Header>\r\n\r\n                      {/* <Card.Description>\r\n     <b> &#8377; {nap.price}/Day</b>\r\n      </Card.Description> */}\r\n                    </Card.Content>\r\n                    {/* loader images */}\r\n\r\n                    <Card.Content className=\"carBtn\" extra>\r\n                      <div style={{ display: \"inline-flex\" }}>\r\n                        <p className=\"carContent\">\r\n                          <a>\r\n                            <BsFillGearFill />\r\n                            &nbsp; {nap.geartype}\r\n                          </a>\r\n                        </p>\r\n                        <p className=\"carContent\">\r\n                          <a>\r\n                            <SiCoronaengine />\r\n                            &nbsp; {nap.toc}\r\n                          </a>\r\n                        </p>\r\n                        <p className=\"carContent\">\r\n                          {\" \"}\r\n                          <a>\r\n                            <Icon name=\"wheelchair\" />\r\n                            {nap.seats}&nbsp;seats\r\n                          </a>\r\n                        </p>\r\n\r\n                        <p className=\"carContent\">\r\n                          <a>\r\n                            <IoSpeedometerOutline />\r\n                            <br />\r\n                            {nap.kmslimit}&nbsp;km\r\n                          </a>\r\n                        </p>\r\n                      </div>\r\n                      <div>\r\n                        <Button.Group className=\"priceBar\">\r\n                          <Button>\r\n                            {\" \"}\r\n                            &#8377;{nap.price * 50} <br /> <small> 50km </small>\r\n                          </Button>\r\n\r\n                          <Button>\r\n                            {\" \"}\r\n                            &#8377;{nap.price * 100}\r\n                            <br /> <small> 100km </small>\r\n                          </Button>\r\n                          <Button>\r\n                            &#8377;{nap.price * 150} <br />{\" \"}\r\n                            <small> 150km </small>\r\n                          </Button>\r\n                        </Button.Group>\r\n                      </div>\r\n                    </Card.Content>\r\n                    {nap.status ? (\r\n                      <Button\r\n                        id={nap.id}\r\n                        color=\"blue\"\r\n                        onClick={(e) => blynk(key, true)}\r\n                      >\r\n                        Book now\r\n                      </Button>\r\n                    ) : (\r\n                      <Button\r\n                        disabled\r\n                        id={nap.id}\r\n                        color=\"brown\"\r\n                        onClick={(e) => setOpen(true)}\r\n                      >\r\n                        Sold out\r\n                      </Button>\r\n                    )}\r\n\r\n                    <div>\r\n                      <Modal\r\n                        onClose={() => setOpen({ key: false })}\r\n                        onOpen={() => setOpen({ key: true })}\r\n                        open={open[key]}\r\n                        className=\"categoryModal\"\r\n                      >\r\n                        <Modal.Header>{nap.model}</Modal.Header>\r\n                        <Modal.Content image>\r\n                          <Image size=\"medium\" src={nap.photo} wrapped />\r\n                          <Modal.Description>\r\n                            <Header>\r\n                              <h1>{nap.model}</h1>\r\n                            </Header>\r\n                            <p>{/* <b> &#8377; {nap.price}/Day</b> */}</p>\r\n                            <div style={{ display: \"inline-flex\" }}>\r\n                              <p>\r\n                                <a>\r\n                                  <SiCoronaengine />\r\n                                  &nbsp; {nap.toc}\r\n                                </a>\r\n                              </p>\r\n\r\n                              <p style={{ marginLeft: \"20px\" }}>\r\n                                <a>\r\n                                  <BsFillGearFill />\r\n                                  &nbsp; {nap.geartype}\r\n                                </a>\r\n                              </p>\r\n\r\n                              <p style={{ marginLeft: \"20px\" }}>\r\n                                {\" \"}\r\n                                <a>\r\n                                  <Icon name=\"wheelchair\" />\r\n                                  {nap.seats}seats\r\n                                </a>\r\n                              </p>\r\n\r\n                              <p style={{ marginLeft: \"20px\" }}>\r\n                                <a>\r\n                                  <IoSpeedometerOutline />\r\n                                  &nbsp;{nap.kmslimit} km\r\n                                </a>\r\n                              </p>\r\n\r\n                              {nap.fuelincl == \"true\" ? (\r\n                                <p style={{ marginLeft: \"20px\" }}>\r\n                                  {\" \"}\r\n                                  <Icon name=\"tint\" />\r\n                                  fuel: include\r\n                                </p>\r\n                              ) : (\r\n                                <p style={{ marginLeft: \"20px\" }}>\r\n                                  {\" \"}\r\n                                  <Icon name=\"tint\" />\r\n                                  fuel: exclude\r\n                                </p>\r\n                              )}\r\n                            </div>\r\n                            <div style={{ display: \"inline-flex\" }}>\r\n                              {nap.delivery ? (\r\n                                <p>\r\n                                  <FaPeopleCarry />\r\n                                  &nbsp;door delivery: yes\r\n                                </p>\r\n                              ) : (\r\n                                <p style={{ marginLeft: \"20px\" }}>\r\n                                  <FaPeopleCarry />\r\n                                  delivery: no\r\n                                </p>\r\n                              )}\r\n                              <p style={{ marginLeft: \"20px\" }}>\r\n                                <a>\r\n                                  <IoSpeedometerOutline />\r\n                                  &nbsp;{nap.maxspeed} kmph\r\n                                </a>\r\n                              </p>\r\n\r\n                              <p style={{ marginLeft: \"20px\" }}>\r\n                                <a>\r\n                                  <IoSpeedometerOutline />\r\n                                  &nbsp;Model by: {nap.carcomp}\r\n                                </a>\r\n                              </p>\r\n                            </div>\r\n                            <p>{nap.descr}</p>\r\n                            <div>\r\n                              <Button.Group className=\"priceBar\">\r\n                                <Button>\r\n                                  {\" \"}\r\n                                  &#8377;{nap.price * 50} <br />{\" \"}\r\n                                  <small> 50km </small>\r\n                                </Button>\r\n\r\n                                <Button>\r\n                                  {\" \"}\r\n                                  &#8377;{nap.price * 100}\r\n                                  <br /> <small> 100km </small>\r\n                                </Button>\r\n                                <Button>\r\n                                  &#8377;{nap.price * 150} <br />{\" \"}\r\n                                  <small> 150km </small>\r\n                                </Button>\r\n                              </Button.Group>\r\n                            </div>\r\n                            <div></div>\r\n                          </Modal.Description>\r\n                        </Modal.Content>\r\n                        <Modal.Actions>\r\n                          <Button\r\n                            color=\"black\"\r\n                            onClick={(e) => blynk(key, false)}\r\n                          >\r\n                            Exit\r\n                          </Button>\r\n                          <Button\r\n                            content=\"Rent Now\"\r\n                            labelPosition=\"right\"\r\n                            icon=\"checkmark\"\r\n                            onClick={() => setOpen({ key: false })}\r\n                            positive\r\n                          />\r\n                        </Modal.Actions>\r\n                      </Modal>\r\n                    </div>\r\n                  </Card>\r\n                ))}\r\n              </Card.Group>\r\n            )}\r\n          </div>\r\n        </div>\r\n        {/* <ModalExampleModal state={open} /> */}\r\n      </div>\r\n    </div>\r\n  );\r\n  function blynk(props, crops) {\r\n    arr[props] = crops;\r\n    // console.log(arr)\r\n    setOpen(arr);\r\n  }\r\n}\r\n\r\nfunction useTimes() {\r\n  const [times, setTimes] = useState([]);\r\n  useEffect(() => {\r\n    var newtimes;\r\n    let count = 0;\r\n    db.collection(\"rentals\")\r\n      .get()\r\n      .then((snap) => {\r\n        snap.docs.forEach((nap) => {\r\n          if (nap.data().permission) {\r\n            db.collection(\"rentals\")\r\n              .doc(nap.id)\r\n              .collection(\"products\")\r\n              .get()\r\n              .then((snap) => {\r\n                newtimes = snap.docs.map((doc) => ({\r\n                  id: doc.id,\r\n                  ...doc.data(),\r\n                }));\r\n                setTimes((cap) => [...cap, ...newtimes]);\r\n              });\r\n          }\r\n        });\r\n      });\r\n  }, []);\r\n  return times;\r\n}\r\n\r\nfunction Empty() {\r\n  return (\r\n    <div>\r\n      <p>this is empalyt</p>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Rentals;\r\n","E:\\hemanth files\\js practise\\spotmies\\firstapp\\src\\components\\partnerRegistration.jsx",["351","352","353","354","355","356","357","358","359","360","361","362","363","364","365","366","367","368","369","370","371","372","373","374","375","376","377","378"],"E:\\hemanth files\\js practise\\spotmies\\firstapp\\src\\components\\slide1.jsx",["379","380","381","382","383","384","385","386","387","388","389","390","391","392","393","394","395","396","397","398","399","400","401","402","403","404","405","406"],"E:\\hemanth files\\js practise\\spotmies\\firstapp\\src\\components\\pdetails.jsx",["407","408","409","410","411","412","413","414","415","416","417","418","419","420","421","422","423","424","425","426","427","428"],"import React ,{Component} from 'react'\r\nimport firebase from '../firebase';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport {Carousel } from 'react-bootstrap';\r\nimport { Card, Icon, Image,Dropdown,Label,Step,Button,Rating } from 'semantic-ui-react'\r\nimport react,{useState,useEffect} from \"react\";\r\nimport {MdDelete,MdLocationOn,MdAccessTime,MdWatchLater,MdCheckCircle,MdAssignmentTurnedIn,MdBuild,MdThumbDown,MdAccountCircle,MdSmartphone,MdPhone,MdEmail} from 'react-icons/md';\r\nimport {AiFillEdit} from 'react-icons/ai';\r\nimport {FaTools,FaAddressCard} from 'react-icons/fa'\r\nimport { useHistory } from 'react-router-dom'\r\n\r\nconst db=firebase.firestore();\r\n\r\nexport default function pdetails() {\r\n   var personId=window.location.pathname;\r\n    personId=personId.replace('/pdetails/','');\r\n    return (\r\n        <div>\r\n            < Partdetail id={personId}/>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\n\r\nfunction Partdetail(props){\r\n    const[pdata,setpdata]=useState([])\r\n    console.log(props.id)\r\n    useEffect(() => {\r\n    db.collection(\"partner\").doc(props.id).collection(\"ProfileInfo\").doc(props.id).get().then(snap=>{\r\n    setpdata(snap.data())\r\n    }).then(()=>{console.log(pdata)})\r\n    }, [])\r\n    \r\n    var dhref=\"tel: +91 \"+pdata.phone; \r\n    \r\n    return  <div style={{paddingBottom:\"50px\",paddingTop:\"40px\"}}>\r\n    \r\n     <Card centered color=\"blue\" style={{borderRadius:\"1rem\",width:\"80%\"}}>\r\n      <Card.Content>\r\n        <Card.Header style={{textAlign:\"center\"}}><Card.Meta><MdAccountCircle size=\"2rem\"/> Technician Details</Card.Meta></Card.Header>\r\n      </Card.Content>\r\n      <Card.Content>\r\n    <img src={pdata.profilepic} style={{width:\"100%\",borderRadius:\"1rem\",height:\"100%\"}}/>\r\n    </Card.Content>\r\n    <Card.Content style={{textAlign:\"center\"}}>\r\n     <Card.Header><h2><MdAccountCircle />  {pdata.name}</h2></Card.Header>\r\n     <Card.Meta>\r\n       <span ><small><MdSmartphone /> {pdata.phone}</small></span>\r\n       <span ><small><MdPhone /> {pdata.altNum}</small></span>\r\n       <span ><small><MdEmail /> {pdata.email}</small></span>\r\n     </Card.Meta>\r\n     <Card.Description>\r\n       {pdata.desc}\r\n     </Card.Description>\r\n    </Card.Content>\r\n    \r\n    <Card centered color=\"orange\" style={{borderRadius:\"1rem\"}}>\r\n      <Card.Content>\r\n      <Card.Header>\r\n       <FaAddressCard /> Technician address\r\n      </Card.Header>\r\n      </Card.Content>\r\n      <Card.Content>\r\n        <Card.Description>{pdata.addrs}</Card.Description>\r\n      </Card.Content>\r\n    </Card>\r\n    <Card.Content extra>\r\n     <a href={dhref}>\r\n     <MdPhone size=\"1.3rem\"/>\r\n       Call\r\n      \r\n     </a>\r\n    <a style={{float:\"right\"}}><Icon name='setting'/><Dropdown text='more' >\r\n    <Dropdown.Menu>\r\n     <Dropdown.Item text='Raise complaint' />\r\n     <Dropdown.Item text='Report' />\r\n    \r\n    </Dropdown.Menu>\r\n    </Dropdown>\r\n    </a>\r\n    </Card.Content>\r\n    </Card> \r\n    </div>\r\n    \r\n    }","E:\\hemanth files\\js practise\\spotmies\\firstapp\\src\\components\\scroll.jsx",["429","430","431","432"],"\r\nimport React, { Component,useCallback } from 'react';\r\nimport ScrollToBottom, { useScrollToBottom, useSticky } from 'react-scroll-to-bottom';\r\n\r\nconst Content = () => {\r\n  const scrollToBottom = useScrollToBottom();\r\n  const [sticky] = useSticky();\r\n\r\n  return (\r\n    <React.Fragment>\r\n        <button onClick={scrollToBottom}>Click me to scroll to bottom</button>\r\n      <p>\r\n        Labore commodo consectetur commodo et Lorem mollit voluptate velit adipisicing proident sit. Dolor consequat\r\n        nostrud aliquip ea anim enim. Culpa quis tempor et quis esse proident cupidatat reprehenderit laborum ullamco.\r\n      </p>\r\n      <p>\r\n        Incididunt labore nulla cupidatat occaecat elit esse occaecat culpa irure et nisi excepteur. Duis Lorem labore\r\n        consectetur nostrud et voluptate culpa consequat enim reprehenderit. Id voluptate occaecat anim consequat id ea\r\n        eiusmod laborum proident irure veniam esse. Aliquip nostrud culpa nostrud laborum cillum adipisicing dolore. Est\r\n        tempor labore Lorem ad cupidatat reprehenderit exercitation pariatur officia ex adipisicing cupidatat\r\n        exercitation.\r\n      </p>\r\n      <p>\r\n        Est labore cupidatat exercitation est laboris et tempor Lorem irure velit ea commodo sint officia. Ullamco\r\n        exercitation cillum est fugiat do. Enim qui eu veniam nostrud tempor elit. Duis elit mollit ut reprehenderit sit\r\n        adipisicing proident culpa veniam sint veniam consectetur fugiat Lorem. Sint dolor proident commodo proident non\r\n        cupidatat labore.\r\n      </p>\r\n       \r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default () => (\r\n  <ScrollToBottom>\r\n    <Content />\r\n  </ScrollToBottom>\r\n);","E:\\hemanth files\\js practise\\spotmies\\firstapp\\src\\firebase.js",["433"],"import firebase from 'firebase';\r\nimport firestore from 'firebase/firestore'\r\n\r\nconst settings = {timestampsInSnapshots: true};\r\nconst firebaseConfig = {\r\n    apiKey: \"AIzaSyDUAqHmXwTZU1caOWJ-LC-dBl3R7uzOkPo\",\r\n    authDomain: \"spotmiess.firebaseapp.com\",\r\n    databaseURL: \"https://spotmiess.firebaseio.com\",\r\n    projectId: \"spotmiess\",\r\n    storageBucket: \"spotmiess.appspot.com\",\r\n    messagingSenderId: \"277034750528\",\r\n    appId: \"1:277034750528:web:9ff791aa208640225b45a5\",\r\n    measurementId: \"G-CB9E1ZNL3C\"\r\n  };\r\n  firebase.initializeApp(firebaseConfig);\r\n\r\nfirebase.firestore().settings(settings);\r\n\r\nexport default firebase;\r\n\r\n// import  firebase from \"firebase\";\r\n// import \"firebase/firestore\";\r\n\r\n// let config = {\r\n//   apiKey: \"xxx\",\r\n//   authDomain: \"bezkoder-firebase.firebaseapp.com\",\r\n//   databaseURL: \"https://bezkoder-firebase.firebaseio.com\",\r\n//   projectId: \"bezkoder-firebase\",\r\n//   storageBucket: \"bezkoder-firebase.appspot.com\",\r\n//   messagingSenderId: \"xxx\",\r\n//   appId: \"xxx\",\r\n// };\r\n\r\n// firebase.initializeApp(config);\r\n\r\n// export default firebase.firestore();","E:\\hemanth files\\js practise\\spotmies\\firstapp\\src\\mservices\\userDB.js",[],"E:\\hemanth files\\js practise\\spotmies\\firstapp\\src\\components\\reusable\\categories.js",[],"E:\\hemanth files\\js practise\\spotmies\\firstapp\\src\\mservices\\contactUs.js",[],"E:\\hemanth files\\js practise\\spotmies\\firstapp\\src\\mservices\\dateconv.js",["434","435","436","437","438","439","440","441","442","443","444","445","446","447","448","449","450"],"function lastMessage(msg) {\r\n  if (msg.slice(msg.length - 1) == \"u\" || msg.slice(msg.length - 1) == \"um\") {\r\n    return true;\r\n  } else {\r\n    return false;\r\n  }\r\n}\r\n\r\nfunction gettbystamps(stamps, id) {\r\n  const monthNames = [\r\n    \"Jan\",\r\n    \"Feb\",\r\n    \"March\",\r\n    \"April\",\r\n    \"May\",\r\n    \"June\",\r\n    \"July\",\r\n    \"Aug\",\r\n    \"Sep\",\r\n    \"Oct\",\r\n    \"Nov\",\r\n    \"Dec\",\r\n  ];\r\n\r\n  const dayName = [\"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\"];\r\n\r\n  //today\r\n  let today = new Date();\r\n  let tday = today.getDay(); //return day sun=0;mon=1...\r\n  let tthedate = today.getDate(); //returns date 1,2,3,4..\r\n  let tmonth = today.getMonth();\r\n\r\n  let yesterday = today;\r\n  yesterday.setDate(yesterday.getDate() - 1);\r\n  let yday = yesterday.getDay(); //return day sun=0;mon=1...\r\n  let ythedate = yesterday.getDate(); //returns date 1,2,3,4..\r\n  let ymonth = yesterday.getMonth();\r\n\r\n  let date = new Date(stamps * 1000);\r\n  let year = date.getFullYear();\r\n  let month = date.getMonth();\r\n  let thedate = date.getDate();\r\n  let day = date.getDay();\r\n  let hours = date.getHours();\r\n  let minutes = date.getMinutes();\r\n\r\n  const formatAMPM = (date) => {\r\n    // var hours = date.getHours();\r\n    // var minutes = date.getMinutes();\r\n    var ampm = hours >= 12 ? \"pm\" : \"am\";\r\n    hours = hours % 12;\r\n    hours = hours ? hours : 12; // the hour '0' should be '12'\r\n    minutes = minutes < 10 ? \"0\" + minutes : minutes;\r\n    var strTime = hours + \":\" + minutes + \" \" + ampm;\r\n    return strTime;\r\n  };\r\n\r\n  const fullDate = () => {\r\n    let temp = dayName[day] + \" \" + thedate + \" \" + monthNames[month];\r\n    let temp2 = dayName[tday] + \" \" + tthedate + \" \" + monthNames[tmonth];\r\n    let temp3 = dayName[yday] + \" \" + ythedate + \" \" + monthNames[ymonth];\r\n    if (temp == temp2) return \"Today\";\r\n    else if (temp == temp3) return \"Yesterday\";\r\n    else return temp;\r\n  };\r\n\r\n  switch (id) {\r\n    case \"strmonth\":\r\n      return monthNames[month];\r\n      break;\r\n\r\n    case \"strday\":\r\n      return dayName[day];\r\n      break;\r\n    case \"date\":\r\n      return thedate;\r\n      break;\r\n    case \"strmonth\":\r\n      return dayName[day];\r\n      break;\r\n\r\n    case \"hours\":\r\n      return hours;\r\n      break;\r\n    case \"minutes\":\r\n      return minutes;\r\n      break;\r\n    case \"time\":\r\n      return formatAMPM();\r\n      break;\r\n    case \"fulldate\":\r\n      return fullDate();\r\n      break;\r\n    default:\r\n      return \"invalid id\";\r\n      break;\r\n  }\r\n}\r\nfunction countSpecial(str) {\r\n  const punct = \"`\";\r\n  let count = 0;\r\n  let position = [];\r\n  for (let i = 0; i < str.length; i++) {\r\n    if (!punct.includes(str[i])) {\r\n      continue;\r\n    }\r\n    count++;\r\n    position.push(i);\r\n  }\r\n  return position;\r\n}\r\nfunction getorgnl(msg) {\r\n  let temp = countSpecial(msg);\r\n  let temp2 = msg.slice(0, temp[temp.length - 2]);\r\n  return temp2;\r\n}\r\nfunction getstamp(raw) {\r\n  let temp = countSpecial(raw);\r\n  let findex = temp[temp.length - 2] + 1;\r\n  let temp2 = raw.substring(findex, temp[temp.length - 1]);\r\n  return temp2;\r\n}\r\n\r\nfunction ValidURL(str) {\r\n  var regex = /(http|https):\\/\\/(\\w+:{0,1}\\w*)?(\\S+)(:[0-9]+)?(\\/|\\/([\\w#!:.?+=&%!\\-\\/]))?/;\r\n  if (!regex.test(str)) {\r\n    // alert(\"Please enter valid URL.\");\r\n    return false;\r\n  } else {\r\n    return true;\r\n  }\r\n}\r\n\r\nexport { gettbystamps, getorgnl, getstamp, lastMessage, ValidURL };\r\n","E:\\hemanth files\\js practise\\spotmies\\firstapp\\src\\components\\reusable\\Modal.jsx",["451","452","453","454","455","456","457","458","459","460","461","462","463","464","465","466","467","468","469","470","471","472","473","474","475","476","477","478","479"],"import react, { useState, useEffect, useRef } from \"react\";\r\nimport React, { Component, useCallback } from \"react\";\r\nimport \"../../assets/css/home.css\";\r\nimport { feedBack1 } from \"../../mservices/contactUs\";\r\n\r\nimport { Modal, Form, Button, Header, TextArea, Icon } from \"semantic-ui-react\";\r\nimport { toast } from \"react-toastify\";\r\n\r\n//icons\r\nimport {\r\n  MdFeedback,\r\n  MdHelp,\r\n  MdKeyboardArrowLeft,\r\n  MdSentimentSatisfied,\r\n  MdThumbDown,\r\n  MdThumbUp,\r\n} from \"react-icons/md\";\r\n\r\nfunction UniversalM(props) {\r\n  const [open, setOpen] = useState(false);\r\n\r\n  //closeModal = () => {};\r\n\r\n  return (\r\n    <Modal\r\n      basic\r\n      onClose={() => setOpen(false)}\r\n      onOpen={() => setOpen(true)}\r\n      open={open}\r\n      size=\"tiny\"\r\n      trigger={<Button>Basic Modal</Button>}\r\n    >\r\n      <Header icon>\r\n        <Icon name=\"archive\" />\r\n        Archive Old Messages\r\n      </Header>\r\n      <Modal.Content>\r\n        <p>\r\n          Your inbox is getting full, would you like us to enable automatic\r\n          archiving of old messages?\r\n        </p>\r\n      </Modal.Content>\r\n      <Modal.Actions>\r\n        <Button basic color=\"red\" inverted onClick={() => setOpen(false)}>\r\n          <Icon name=\"remove\" /> No\r\n        </Button>\r\n        <Button color=\"green\" inverted onClick={() => setOpen(false)}>\r\n          <Icon name=\"checkmark\" /> Yes\r\n        </Button>\r\n      </Modal.Actions>\r\n    </Modal>\r\n  );\r\n}\r\n\r\nfunction FeedbackForm(props) {\r\n  const [open, setOpen] = useState(false);\r\n  const [count, setcount] = useState(0);\r\n  const [que, setque] = useState([]);\r\n\r\n  useEffect(() => {\r\n    setOpen(props.open);\r\n    setcount(0);\r\n    setque([]);\r\n  }, [props.open]);\r\n\r\n  useEffect(() => {\r\n    if (count == 10) {\r\n      setTimeout(() => {\r\n        onClose();\r\n      }, 1000);\r\n    }\r\n  }, [count]);\r\n\r\n  const onClose = useCallback(() => {\r\n    props.close();\r\n  });\r\n\r\n  const nextQue = (ans, index) => {\r\n    setcount(index + 1);\r\n    let tempque = que;\r\n    tempque[index] = ans;\r\n    setque(tempque);\r\n  };\r\n\r\n  const prevQue = () => {\r\n    if (count != 0) setcount(count - 1);\r\n  };\r\n\r\n  const textArea = (e, index) => {\r\n    // console.log(e);\r\n    let ans = e.target.value;\r\n    let tempque = que;\r\n    tempque[index] = ans;\r\n    setque(tempque);\r\n  };\r\n\r\n  const formSubmit = async () => {\r\n    console.log(que);\r\n    var obj = {\r\n      q0: que[0],\r\n      q1: que[1],\r\n      q2: que[2],\r\n      q3: que[3],\r\n      q4: que[4] == undefined ? \"\" : que[4],\r\n      submitedAt: Math.round(+new Date() / 1000),\r\n    };\r\n    console.log(obj);\r\n    console.log(JSON.stringify(obj));\r\n    var strobj = JSON.stringify(obj);\r\n    let result = await feedBack1(strobj);\r\n    if (result == 200) {\r\n      localStorage.setItem(\"isFeedBackGiven\", true);\r\n      toast.success(\"Thanks For Your Feedback\");\r\n      setcount(10);\r\n    } else {\r\n      localStorage.setItem(\"isFeedBackGiven\", false);\r\n      toast.error(\"Something went wrong please try again\");\r\n      onClose();\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Modal\r\n      className=\"fbModal\"\r\n      onClose={onClose}\r\n      onOpen={() => setOpen(true)}\r\n      open={open}\r\n      size=\"tiny\"\r\n      // trigger={<Button>Show Modal</Button>}\r\n    >\r\n      <Modal.Header>Feedback Here</Modal.Header>\r\n      <Modal.Content className=\"modalContent\">\r\n        {count > 0 ? (\r\n          <p className=\"modalBack\" onClick={prevQue}>\r\n            <MdKeyboardArrowLeft size=\"2rem\" />\r\n            <span style={{ marginTop: \"4px\", fontWeight: \"800\" }}> Back </span>\r\n          </p>\r\n        ) : (\r\n          <p className=\"modalBack\"></p>\r\n        )}\r\n        <Modal.Description>\r\n          {count == 0 ? (\r\n            <div className=\"modalDiv\">\r\n              <Header>Do You Understand What Does This Website Means</Header>\r\n              <div className=\"feedBbtn2\">\r\n                <Button\r\n                  basic\r\n                  color={que[0] == \"yes\" ? \"blue\" : \"grey\"}\r\n                  onClick={() => {\r\n                    nextQue(\"yes\", 0);\r\n                  }}\r\n                >\r\n                  <MdThumbUp /> Yeah\r\n                </Button>\r\n                <Button\r\n                  basic\r\n                  color={que[0] == \"no\" ? \"blue\" : \"grey\"}\r\n                  onClick={() => {\r\n                    nextQue(\"no\", 0);\r\n                  }}\r\n                >\r\n                  <MdThumbDown /> Nope\r\n                </Button>\r\n                <Button\r\n                  basic\r\n                  color={que[0] == \"no idea\" ? \"blue\" : \"grey\"}\r\n                  onClick={() => {\r\n                    nextQue(\"no idea\", 0);\r\n                  }}\r\n                >\r\n                  <MdHelp /> No Idea\r\n                </Button>\r\n              </div>\r\n            </div>\r\n          ) : null}\r\n\r\n          {count == 1 ? (\r\n            <div className=\"modalDiv\">\r\n              <Header>Is This Platform Is Useful</Header>\r\n              <div>\r\n                <Button\r\n                  basic\r\n                  color={que[1] == \"yes\" ? \"blue\" : \"grey\"}\r\n                  onClick={() => {\r\n                    nextQue(\"yes\", 1);\r\n                  }}\r\n                >\r\n                  <MdThumbUp /> Yes\r\n                </Button>\r\n                <Button\r\n                  basic\r\n                  color={que[1] == \"no\" ? \"blue\" : \"grey\"}\r\n                  onClick={() => {\r\n                    nextQue(\"no\", 1);\r\n                  }}\r\n                >\r\n                  <MdThumbDown /> No\r\n                </Button>\r\n                <Button\r\n                  basic\r\n                  color={que[1] == \"maybe\" ? \"blue\" : \"grey\"}\r\n                  onClick={() => {\r\n                    nextQue(\"maybe\", 1);\r\n                  }}\r\n                >\r\n                  <MdSentimentSatisfied /> Maybe\r\n                </Button>\r\n                <Button\r\n                  basic\r\n                  color={que[1] == \"i don't know\" ? \"blue\" : \"grey\"}\r\n                  onClick={() => {\r\n                    nextQue(\"i don't know\", 1);\r\n                  }}\r\n                >\r\n                  <MdHelp /> I Don't Know\r\n                </Button>\r\n              </div>\r\n            </div>\r\n          ) : null}\r\n\r\n          {count == 2 ? (\r\n            <div className=\"modalDiv\">\r\n              <Header>How This Website Looks</Header>\r\n              <div>\r\n                <Button\r\n                  basic\r\n                  color={que[2] == \"good\" ? \"blue\" : \"grey\"}\r\n                  onClick={() => {\r\n                    nextQue(\"good\", 2);\r\n                  }}\r\n                >\r\n                  <MdThumbUp /> Looks Good\r\n                </Button>\r\n                <Button\r\n                  basic\r\n                  color={que[2] == \"its ok\" ? \"blue\" : \"grey\"}\r\n                  onClick={() => {\r\n                    nextQue(\"its ok\", 2);\r\n                  }}\r\n                >\r\n                  <MdSentimentSatisfied /> It's Ok\r\n                </Button>\r\n                <Button\r\n                  basic\r\n                  color={que[2] == \"bad\" ? \"blue\" : \"grey\"}\r\n                  onClick={() => {\r\n                    nextQue(\"bad\", 2);\r\n                  }}\r\n                >\r\n                  <MdThumbDown /> Looks Bad\r\n                </Button>\r\n                <Button\r\n                  basic\r\n                  color={que[2] == \"i don't know\" ? \"blue\" : \"grey\"}\r\n                  onClick={() => {\r\n                    nextQue(\"i don't know\", 2);\r\n                  }}\r\n                >\r\n                  <MdHelp /> I Don't Know\r\n                </Button>\r\n              </div>\r\n            </div>\r\n          ) : null}\r\n\r\n          {count == 3 ? (\r\n            <div className=\"modalDiv\">\r\n              <Header>Have You Face Any Issue With The Website</Header>\r\n              <div>\r\n                <Button\r\n                  basic\r\n                  color={que[3] == \"no\" ? \"blue\" : \"grey\"}\r\n                  onClick={() => {\r\n                    nextQue(\"no\", 3);\r\n                  }}\r\n                >\r\n                  <MdThumbUp /> No\r\n                </Button>\r\n                <Button\r\n                  basic\r\n                  color={que[3] == \"yes\" ? \"blue\" : \"grey\"}\r\n                  onClick={() => {\r\n                    nextQue(\"yes\", 3);\r\n                  }}\r\n                >\r\n                  <MdThumbDown /> Yes\r\n                </Button>\r\n              </div>\r\n            </div>\r\n          ) : null}\r\n\r\n          {count == 4 ? (\r\n            <div className=\"modalDiv\">\r\n              <Header>\r\n                If You Have Any Other Feedback Please Tell Us Here. We Love To\r\n                Improve Our Service\r\n              </Header>\r\n              <div>\r\n                <Form>\r\n                  <TextArea\r\n                    onChange={(e) => {\r\n                      textArea(e, 4);\r\n                    }}\r\n                    placeholder=\"Tell us more\"\r\n                    value={que[4]}\r\n                  />\r\n                </Form>\r\n              </div>\r\n            </div>\r\n          ) : null}\r\n\r\n          {count == 10 ? (\r\n            <div>\r\n              <Header>Thanks For Your Feedback</Header>\r\n            </div>\r\n          ) : null}\r\n        </Modal.Description>\r\n      </Modal.Content>\r\n      <Modal.Actions className=\"modalAction\">\r\n        <Button color=\"black\" onClick={onClose}>\r\n          Cancel\r\n        </Button>\r\n        {count > 3 ? (\r\n          <Button\r\n            content=\"Submit\"\r\n            labelPosition=\"right\"\r\n            icon=\"checkmark\"\r\n            onClick={formSubmit}\r\n            positive\r\n          />\r\n        ) : null}\r\n      </Modal.Actions>\r\n    </Modal>\r\n  );\r\n}\r\n\r\nexport { UniversalM, FeedbackForm };\r\n","E:\\hemanth files\\js practise\\spotmies\\firstapp\\src\\components\\usertext.js",[],"E:\\hemanth files\\js practise\\spotmies\\firstapp\\src\\components\\txtRotate.js",[],"E:\\hemanth files\\js practise\\spotmies\\firstapp\\src\\components\\partnerText.js",["480","481","482","483","484","485"],"E:\\hemanth files\\js practise\\spotmies\\firstapp\\src\\components\\reusable\\msgdot.js",[],"E:\\hemanth files\\js practise\\spotmies\\firstapp\\src\\mservices\\upldmedia.js",["486","487"],"import firebase from '../firebase';\r\nimport 'firebase/storage';\r\nconst storage = firebase.storage();\r\nconst db=firebase.firestore();\r\n\r\nasync function handleUpload(mfile){\r\n      \r\n let image=mfile;\r\n var surl=\"null\";\r\n        console.log(image.length)\r\n        for(var i=0;i<image.length;i++){\r\n          let k=Number(i)\r\n       const uploadTask = storage.ref(`users/${firebase.auth().currentUser.uid}/chat/${image[k].name}`).put(image[k]);\r\n      let upldtask= uploadTask.on(\"state_changed\",snapshot => {},\r\n         error => {\r\n           console.log(error);\r\n         },\r\n         () => {\r\n           storage\r\n             .ref(`users/${firebase.auth().currentUser.uid}/chat/`)\r\n             .child(image[k].name)\r\n             .getDownloadURL()\r\n             .then(url => {\r\n               //console.log(url)\r\n               console.log(\"image uploaded\")\r\n                surl=url;\r\n                return url;\r\n \r\n             });\r\n         }\r\n       )\r\n        }\r\n        \r\n        return surl;\r\n     }\r\n\r\n     function temp(){\r\n         return null\r\n     }\r\n\r\n\r\n     async function getlink(image){\r\n       try{\r\n        let urll= await  storage.ref(`users/${firebase.auth().currentUser.uid}/chat/`).child(image[image.length-1].name)\r\n        .getDownloadURL()\r\n        .then(url => {\r\n  \r\n           return url;\r\n  \r\n        });\r\n    return urll;\r\n       }\r\n       catch{\r\n        return null\r\n       }\r\n\r\n     }\r\n\r\nasync function getpdetailsbyid(id){\r\n  let data;\r\n await db.collection(\"partner\").doc(id).collection(\"ProfileInfo\").doc(id).get().then(snap=>{\r\n   console.log(snap.data());\r\n   data=snap.data();\r\n });\r\n console.log(\"data fetched\")\r\n return data;\r\n\r\n}     \r\nasync function disablechat(id){\r\n  let status;\r\n  try{\r\n   await db.collection(\"messaging\").doc(id).update({\r\n     chatbuild:false\r\n   })\r\n    .then(()=>{status=200})\r\n    .catch((e)=>\r\n    {\r\n      console.log(e)\r\n      status=100;\r\n    })\r\n  }\r\n  catch{\r\n    status=404\r\n  }\r\n  return status;\r\n}\r\n\r\n\r\n\r\n\r\nexport {handleUpload,temp,getlink,getpdetailsbyid,disablechat}",{"ruleId":"488","replacedBy":"489"},{"ruleId":"490","replacedBy":"491"},{"ruleId":"492","severity":1,"message":"493","line":10,"column":6,"nodeType":"494","endLine":10,"endColumn":8,"suggestions":"495"},{"ruleId":"496","severity":1,"message":"497","line":1,"column":22,"nodeType":"498","messageId":"499","endLine":1,"endColumn":31},{"ruleId":"496","severity":1,"message":"497","line":1,"column":20,"nodeType":"498","messageId":"499","endLine":1,"endColumn":29},{"ruleId":"496","severity":1,"message":"500","line":5,"column":10,"nodeType":"498","messageId":"499","endLine":5,"endColumn":15},{"ruleId":"496","severity":1,"message":"501","line":45,"column":5,"nodeType":"498","messageId":"499","endLine":45,"endColumn":13},{"ruleId":"496","severity":1,"message":"502","line":46,"column":5,"nodeType":"498","messageId":"499","endLine":46,"endColumn":8},{"ruleId":"503","severity":1,"message":"504","line":103,"column":19,"nodeType":"505","endLine":103,"endColumn":39},{"ruleId":"506","severity":1,"message":"507","line":127,"column":39,"nodeType":"508","messageId":"509","endLine":127,"endColumn":41},{"ruleId":"503","severity":1,"message":"504","line":154,"column":21,"nodeType":"505","endLine":165,"endColumn":23},{"ruleId":"496","severity":1,"message":"510","line":1,"column":17,"nodeType":"498","messageId":"499","endLine":1,"endColumn":26},{"ruleId":"496","severity":1,"message":"511","line":3,"column":8,"nodeType":"498","messageId":"499","endLine":3,"endColumn":13},{"ruleId":"496","severity":1,"message":"512","line":5,"column":10,"nodeType":"498","messageId":"499","endLine":5,"endColumn":13},{"ruleId":"496","severity":1,"message":"513","line":5,"column":15,"nodeType":"498","messageId":"499","endLine":5,"endColumn":18},{"ruleId":"496","severity":1,"message":"514","line":26,"column":10,"nodeType":"498","messageId":"499","endLine":26,"endColumn":21},{"ruleId":"496","severity":1,"message":"515","line":31,"column":10,"nodeType":"498","messageId":"499","endLine":31,"endColumn":18},{"ruleId":"496","severity":1,"message":"516","line":31,"column":35,"nodeType":"498","messageId":"499","endLine":31,"endColumn":49},{"ruleId":"496","severity":1,"message":"517","line":32,"column":10,"nodeType":"498","messageId":"499","endLine":32,"endColumn":20},{"ruleId":"496","severity":1,"message":"518","line":33,"column":10,"nodeType":"498","messageId":"499","endLine":33,"endColumn":26},{"ruleId":"496","severity":1,"message":"519","line":75,"column":9,"nodeType":"498","messageId":"499","endLine":75,"endColumn":14},{"ruleId":"496","severity":1,"message":"520","line":80,"column":9,"nodeType":"498","messageId":"499","endLine":80,"endColumn":13},{"ruleId":"496","severity":1,"message":"521","line":84,"column":9,"nodeType":"498","messageId":"499","endLine":84,"endColumn":16},{"ruleId":"506","severity":1,"message":"507","line":97,"column":26,"nodeType":"508","messageId":"509","endLine":97,"endColumn":28},{"ruleId":"506","severity":1,"message":"522","line":224,"column":38,"nodeType":"508","messageId":"509","endLine":224,"endColumn":40},{"ruleId":"506","severity":1,"message":"507","line":248,"column":31,"nodeType":"508","messageId":"509","endLine":248,"endColumn":33},{"ruleId":"496","severity":1,"message":"510","line":1,"column":17,"nodeType":"498","messageId":"499","endLine":1,"endColumn":26},{"ruleId":"496","severity":1,"message":"523","line":8,"column":3,"nodeType":"498","messageId":"499","endLine":8,"endColumn":8},{"ruleId":"496","severity":1,"message":"511","line":15,"column":8,"nodeType":"498","messageId":"499","endLine":15,"endColumn":13},{"ruleId":"496","severity":1,"message":"515","line":19,"column":3,"nodeType":"498","messageId":"499","endLine":19,"endColumn":11},{"ruleId":"496","severity":1,"message":"524","line":21,"column":3,"nodeType":"498","messageId":"499","endLine":21,"endColumn":15},{"ruleId":"496","severity":1,"message":"517","line":32,"column":10,"nodeType":"498","messageId":"499","endLine":32,"endColumn":20},{"ruleId":"496","severity":1,"message":"525","line":34,"column":10,"nodeType":"498","messageId":"499","endLine":34,"endColumn":25},{"ruleId":"496","severity":1,"message":"526","line":35,"column":10,"nodeType":"498","messageId":"499","endLine":35,"endColumn":17},{"ruleId":"496","severity":1,"message":"527","line":75,"column":21,"nodeType":"498","messageId":"499","endLine":75,"endColumn":29},{"ruleId":"506","severity":1,"message":"522","line":194,"column":45,"nodeType":"508","messageId":"509","endLine":194,"endColumn":47},{"ruleId":"506","severity":1,"message":"507","line":206,"column":42,"nodeType":"508","messageId":"509","endLine":206,"endColumn":44},{"ruleId":"506","severity":1,"message":"507","line":287,"column":36,"nodeType":"508","messageId":"509","endLine":287,"endColumn":38},{"ruleId":"506","severity":1,"message":"507","line":307,"column":36,"nodeType":"508","messageId":"509","endLine":307,"endColumn":38},{"ruleId":"506","severity":1,"message":"522","line":323,"column":34,"nodeType":"508","messageId":"509","endLine":323,"endColumn":36},{"ruleId":"506","severity":1,"message":"507","line":329,"column":29,"nodeType":"508","messageId":"509","endLine":329,"endColumn":31},{"ruleId":"528","severity":1,"message":"529","line":337,"column":15,"nodeType":"505","endLine":337,"endColumn":59},{"ruleId":"528","severity":1,"message":"529","line":341,"column":15,"nodeType":"505","endLine":341,"endColumn":61},{"ruleId":"506","severity":1,"message":"507","line":344,"column":36,"nodeType":"508","messageId":"509","endLine":344,"endColumn":38},{"ruleId":"492","severity":1,"message":"530","line":460,"column":6,"nodeType":"494","endLine":460,"endColumn":8,"suggestions":"531"},{"ruleId":"503","severity":1,"message":"504","line":479,"column":11,"nodeType":"505","endLine":482,"endColumn":13},{"ruleId":"528","severity":1,"message":"529","line":525,"column":11,"nodeType":"505","endLine":525,"endColumn":41},{"ruleId":"496","severity":1,"message":"532","line":2,"column":8,"nodeType":"498","messageId":"499","endLine":2,"endColumn":11},{"ruleId":"496","severity":1,"message":"533","line":4,"column":10,"nodeType":"498","messageId":"499","endLine":4,"endColumn":18},{"ruleId":"496","severity":1,"message":"497","line":4,"column":20,"nodeType":"498","messageId":"499","endLine":4,"endColumn":29},{"ruleId":"496","severity":1,"message":"523","line":6,"column":22,"nodeType":"498","messageId":"499","endLine":6,"endColumn":27},{"ruleId":"496","severity":1,"message":"534","line":8,"column":10,"nodeType":"498","messageId":"499","endLine":8,"endColumn":20},{"ruleId":"506","severity":1,"message":"507","line":46,"column":33,"nodeType":"508","messageId":"509","endLine":46,"endColumn":35},{"ruleId":"503","severity":1,"message":"504","line":186,"column":15,"nodeType":"505","endLine":186,"endColumn":71},{"ruleId":"528","severity":1,"message":"529","line":215,"column":15,"nodeType":"505","endLine":215,"endColumn":18},{"ruleId":"528","severity":1,"message":"529","line":230,"column":15,"nodeType":"505","endLine":230,"endColumn":71},{"ruleId":"506","severity":1,"message":"507","line":339,"column":11,"nodeType":"508","messageId":"509","endLine":339,"endColumn":13},{"ruleId":"496","severity":1,"message":"535","line":2,"column":10,"nodeType":"498","messageId":"499","endLine":2,"endColumn":14},{"ruleId":"496","severity":1,"message":"536","line":17,"column":10,"nodeType":"498","messageId":"499","endLine":17,"endColumn":28},{"ruleId":"506","severity":1,"message":"507","line":131,"column":17,"nodeType":"508","messageId":"509","endLine":131,"endColumn":19},{"ruleId":"506","severity":1,"message":"507","line":74,"column":16,"nodeType":"508","messageId":"509","endLine":74,"endColumn":18},{"ruleId":"496","severity":1,"message":"537","line":32,"column":3,"nodeType":"498","messageId":"499","endLine":32,"endColumn":15},{"ruleId":"496","severity":1,"message":"538","line":80,"column":5,"nodeType":"498","messageId":"499","endLine":80,"endColumn":8},{"ruleId":"506","severity":1,"message":"507","line":117,"column":35,"nodeType":"508","messageId":"509","endLine":117,"endColumn":37},{"ruleId":"539","severity":1,"message":"540","line":132,"column":9,"nodeType":"508","messageId":"541","endLine":132,"endColumn":20},{"ruleId":"506","severity":1,"message":"507","line":132,"column":14,"nodeType":"508","messageId":"509","endLine":132,"endColumn":16},{"ruleId":"506","severity":1,"message":"507","line":133,"column":13,"nodeType":"508","messageId":"509","endLine":133,"endColumn":15},{"ruleId":"542","severity":1,"message":"543","line":205,"column":15,"nodeType":"544","messageId":"545","endLine":212,"endColumn":10},{"ruleId":"506","severity":1,"message":"507","line":283,"column":14,"nodeType":"508","messageId":"509","endLine":283,"endColumn":16},{"ruleId":"496","severity":1,"message":"546","line":288,"column":13,"nodeType":"498","messageId":"499","endLine":288,"endColumn":18},{"ruleId":"496","severity":1,"message":"547","line":435,"column":7,"nodeType":"498","messageId":"499","endLine":435,"endColumn":13},{"ruleId":"496","severity":1,"message":"510","line":1,"column":17,"nodeType":"498","messageId":"499","endLine":1,"endColumn":26},{"ruleId":"496","severity":1,"message":"511","line":3,"column":8,"nodeType":"498","messageId":"499","endLine":3,"endColumn":13},{"ruleId":"496","severity":1,"message":"548","line":12,"column":3,"nodeType":"498","messageId":"499","endLine":12,"endColumn":11},{"ruleId":"496","severity":1,"message":"549","line":24,"column":3,"nodeType":"498","messageId":"499","endLine":24,"endColumn":8},{"ruleId":"496","severity":1,"message":"550","line":26,"column":3,"nodeType":"498","messageId":"499","endLine":26,"endColumn":13},{"ruleId":"496","severity":1,"message":"551","line":28,"column":3,"nodeType":"498","messageId":"499","endLine":28,"endColumn":9},{"ruleId":"496","severity":1,"message":"552","line":40,"column":10,"nodeType":"498","messageId":"499","endLine":40,"endColumn":19},{"ruleId":"496","severity":1,"message":"553","line":41,"column":10,"nodeType":"498","messageId":"499","endLine":41,"endColumn":20},{"ruleId":"496","severity":1,"message":"554","line":42,"column":10,"nodeType":"498","messageId":"499","endLine":42,"endColumn":27},{"ruleId":"496","severity":1,"message":"524","line":49,"column":3,"nodeType":"498","messageId":"499","endLine":49,"endColumn":15},{"ruleId":"496","severity":1,"message":"555","line":51,"column":3,"nodeType":"498","messageId":"499","endLine":51,"endColumn":10},{"ruleId":"496","severity":1,"message":"556","line":53,"column":3,"nodeType":"498","messageId":"499","endLine":53,"endColumn":9},{"ruleId":"496","severity":1,"message":"557","line":56,"column":3,"nodeType":"498","messageId":"499","endLine":56,"endColumn":24},{"ruleId":"496","severity":1,"message":"558","line":58,"column":3,"nodeType":"498","messageId":"499","endLine":58,"endColumn":12},{"ruleId":"496","severity":1,"message":"517","line":66,"column":10,"nodeType":"498","messageId":"499","endLine":66,"endColumn":20},{"ruleId":"496","severity":1,"message":"559","line":67,"column":10,"nodeType":"498","messageId":"499","endLine":67,"endColumn":25},{"ruleId":"496","severity":1,"message":"560","line":68,"column":10,"nodeType":"498","messageId":"499","endLine":68,"endColumn":22},{"ruleId":"496","severity":1,"message":"561","line":73,"column":5,"nodeType":"498","messageId":"499","endLine":73,"endColumn":11},{"ruleId":"496","severity":1,"message":"562","line":100,"column":13,"nodeType":"498","messageId":"499","endLine":100,"endColumn":21},{"ruleId":"496","severity":1,"message":"563","line":141,"column":10,"nodeType":"498","messageId":"499","endLine":141,"endColumn":17},{"ruleId":"496","severity":1,"message":"564","line":147,"column":9,"nodeType":"498","messageId":"499","endLine":147,"endColumn":16},{"ruleId":"496","severity":1,"message":"565","line":151,"column":10,"nodeType":"498","messageId":"499","endLine":151,"endColumn":17},{"ruleId":"496","severity":1,"message":"566","line":151,"column":19,"nodeType":"498","messageId":"499","endLine":151,"endColumn":29},{"ruleId":"496","severity":1,"message":"567","line":152,"column":10,"nodeType":"498","messageId":"499","endLine":152,"endColumn":17},{"ruleId":"506","severity":1,"message":"507","line":180,"column":21,"nodeType":"508","messageId":"509","endLine":180,"endColumn":23},{"ruleId":"506","severity":1,"message":"507","line":261,"column":72,"nodeType":"508","messageId":"509","endLine":261,"endColumn":74},{"ruleId":"506","severity":1,"message":"507","line":274,"column":40,"nodeType":"508","messageId":"509","endLine":274,"endColumn":42},{"ruleId":"506","severity":1,"message":"507","line":375,"column":68,"nodeType":"508","messageId":"509","endLine":375,"endColumn":70},{"ruleId":"506","severity":1,"message":"507","line":387,"column":36,"nodeType":"508","messageId":"509","endLine":387,"endColumn":38},{"ruleId":"496","severity":1,"message":"568","line":434,"column":10,"nodeType":"498","messageId":"499","endLine":434,"endColumn":15},{"ruleId":"496","severity":1,"message":"567","line":437,"column":10,"nodeType":"498","messageId":"499","endLine":437,"endColumn":17},{"ruleId":"492","severity":1,"message":"569","line":451,"column":13,"nodeType":"544","endLine":458,"endColumn":4},{"ruleId":"492","severity":1,"message":"569","line":475,"column":13,"nodeType":"544","endLine":481,"endColumn":4},{"ruleId":"492","severity":1,"message":"570","line":481,"column":6,"nodeType":"494","endLine":481,"endColumn":17,"suggestions":"571"},{"ruleId":"506","severity":1,"message":"522","line":484,"column":17,"nodeType":"508","messageId":"509","endLine":484,"endColumn":19},{"ruleId":"506","severity":1,"message":"522","line":497,"column":15,"nodeType":"508","messageId":"509","endLine":497,"endColumn":17},{"ruleId":"506","severity":1,"message":"507","line":569,"column":16,"nodeType":"508","messageId":"509","endLine":569,"endColumn":18},{"ruleId":"492","severity":1,"message":"572","line":575,"column":6,"nodeType":"494","endLine":575,"endColumn":14,"suggestions":"573"},{"ruleId":"496","severity":1,"message":"574","line":584,"column":11,"nodeType":"498","messageId":"499","endLine":584,"endColumn":19},{"ruleId":"492","severity":1,"message":"575","line":615,"column":6,"nodeType":"494","endLine":615,"endColumn":14,"suggestions":"576"},{"ruleId":"542","severity":1,"message":"577","line":630,"column":15,"nodeType":"544","messageId":"545","endLine":635,"endColumn":10},{"ruleId":"496","severity":1,"message":"578","line":645,"column":18,"nodeType":"498","messageId":"499","endLine":645,"endColumn":29},{"ruleId":"506","severity":1,"message":"507","line":671,"column":35,"nodeType":"508","messageId":"509","endLine":671,"endColumn":37},{"ruleId":"506","severity":1,"message":"507","line":693,"column":29,"nodeType":"508","messageId":"509","endLine":693,"endColumn":31},{"ruleId":"506","severity":1,"message":"522","line":695,"column":17,"nodeType":"508","messageId":"509","endLine":695,"endColumn":19},{"ruleId":"506","severity":1,"message":"507","line":784,"column":16,"nodeType":"508","messageId":"509","endLine":784,"endColumn":18},{"ruleId":"506","severity":1,"message":"507","line":812,"column":46,"nodeType":"508","messageId":"509","endLine":812,"endColumn":48},{"ruleId":"506","severity":1,"message":"507","line":819,"column":36,"nodeType":"508","messageId":"509","endLine":819,"endColumn":38},{"ruleId":"506","severity":1,"message":"507","line":823,"column":33,"nodeType":"508","messageId":"509","endLine":823,"endColumn":35},{"ruleId":"506","severity":1,"message":"507","line":826,"column":40,"nodeType":"508","messageId":"509","endLine":826,"endColumn":42},{"ruleId":"506","severity":1,"message":"507","line":833,"column":42,"nodeType":"508","messageId":"509","endLine":833,"endColumn":44},{"ruleId":"506","severity":1,"message":"507","line":840,"column":36,"nodeType":"508","messageId":"509","endLine":840,"endColumn":38},{"ruleId":"506","severity":1,"message":"507","line":842,"column":47,"nodeType":"508","messageId":"509","endLine":842,"endColumn":49},{"ruleId":"506","severity":1,"message":"507","line":855,"column":63,"nodeType":"508","messageId":"509","endLine":855,"endColumn":65},{"ruleId":"506","severity":1,"message":"507","line":1048,"column":16,"nodeType":"508","messageId":"509","endLine":1048,"endColumn":18},{"ruleId":"506","severity":1,"message":"507","line":1076,"column":46,"nodeType":"508","messageId":"509","endLine":1076,"endColumn":48},{"ruleId":"506","severity":1,"message":"507","line":1083,"column":36,"nodeType":"508","messageId":"509","endLine":1083,"endColumn":38},{"ruleId":"506","severity":1,"message":"507","line":1088,"column":33,"nodeType":"508","messageId":"509","endLine":1088,"endColumn":35},{"ruleId":"506","severity":1,"message":"507","line":1091,"column":40,"nodeType":"508","messageId":"509","endLine":1091,"endColumn":42},{"ruleId":"506","severity":1,"message":"507","line":1098,"column":42,"nodeType":"508","messageId":"509","endLine":1098,"endColumn":44},{"ruleId":"506","severity":1,"message":"507","line":1105,"column":36,"nodeType":"508","messageId":"509","endLine":1105,"endColumn":38},{"ruleId":"506","severity":1,"message":"507","line":1107,"column":47,"nodeType":"508","messageId":"509","endLine":1107,"endColumn":49},{"ruleId":"506","severity":1,"message":"507","line":1120,"column":63,"nodeType":"508","messageId":"509","endLine":1120,"endColumn":65},{"ruleId":"506","severity":1,"message":"507","line":1247,"column":22,"nodeType":"508","messageId":"509","endLine":1247,"endColumn":24},{"ruleId":"506","severity":1,"message":"522","line":1251,"column":34,"nodeType":"508","messageId":"509","endLine":1251,"endColumn":36},{"ruleId":"506","severity":1,"message":"507","line":1254,"column":21,"nodeType":"508","messageId":"509","endLine":1254,"endColumn":23},{"ruleId":"506","severity":1,"message":"522","line":1314,"column":15,"nodeType":"508","messageId":"509","endLine":1314,"endColumn":17},{"ruleId":"492","severity":1,"message":"579","line":1380,"column":5,"nodeType":"494","endLine":1380,"endColumn":17,"suggestions":"580"},{"ruleId":"496","severity":1,"message":"510","line":1,"column":17,"nodeType":"498","messageId":"499","endLine":1,"endColumn":26},{"ruleId":"496","severity":1,"message":"551","line":12,"column":3,"nodeType":"498","messageId":"499","endLine":12,"endColumn":9},{"ruleId":"496","severity":1,"message":"581","line":33,"column":10,"nodeType":"498","messageId":"499","endLine":33,"endColumn":23},{"ruleId":"496","severity":1,"message":"582","line":55,"column":10,"nodeType":"498","messageId":"499","endLine":55,"endColumn":15},{"ruleId":"496","severity":1,"message":"583","line":62,"column":9,"nodeType":"498","messageId":"499","endLine":62,"endColumn":14},{"ruleId":"496","severity":1,"message":"584","line":106,"column":11,"nodeType":"498","messageId":"499","endLine":106,"endColumn":19},{"ruleId":"496","severity":1,"message":"527","line":106,"column":21,"nodeType":"498","messageId":"499","endLine":106,"endColumn":29},{"ruleId":"506","severity":1,"message":"507","line":138,"column":29,"nodeType":"508","messageId":"509","endLine":138,"endColumn":31},{"ruleId":"496","severity":1,"message":"585","line":145,"column":12,"nodeType":"498","messageId":"499","endLine":145,"endColumn":24},{"ruleId":"539","severity":1,"message":"540","line":159,"column":9,"nodeType":"508","messageId":"541","endLine":159,"endColumn":20},{"ruleId":"506","severity":1,"message":"507","line":159,"column":14,"nodeType":"508","messageId":"509","endLine":159,"endColumn":16},{"ruleId":"506","severity":1,"message":"507","line":160,"column":13,"nodeType":"508","messageId":"509","endLine":160,"endColumn":15},{"ruleId":"542","severity":1,"message":"577","line":219,"column":15,"nodeType":"544","messageId":"545","endLine":225,"endColumn":10},{"ruleId":"506","severity":1,"message":"507","line":233,"column":27,"nodeType":"508","messageId":"509","endLine":233,"endColumn":29},{"ruleId":"492","severity":1,"message":"586","line":239,"column":6,"nodeType":"494","endLine":239,"endColumn":16,"suggestions":"587"},{"ruleId":"496","severity":1,"message":"588","line":311,"column":9,"nodeType":"498","messageId":"499","endLine":311,"endColumn":20},{"ruleId":"496","severity":1,"message":"547","line":459,"column":7,"nodeType":"498","messageId":"499","endLine":459,"endColumn":13},{"ruleId":"496","severity":1,"message":"589","line":10,"column":3,"nodeType":"498","messageId":"499","endLine":10,"endColumn":7},{"ruleId":"496","severity":1,"message":"590","line":11,"column":3,"nodeType":"498","messageId":"499","endLine":11,"endColumn":7},{"ruleId":"496","severity":1,"message":"513","line":19,"column":10,"nodeType":"498","messageId":"499","endLine":19,"endColumn":13},{"ruleId":"496","severity":1,"message":"512","line":19,"column":15,"nodeType":"498","messageId":"499","endLine":19,"endColumn":18},{"ruleId":"496","severity":1,"message":"500","line":27,"column":10,"nodeType":"498","messageId":"499","endLine":27,"endColumn":15},{"ruleId":"496","severity":1,"message":"591","line":69,"column":10,"nodeType":"498","messageId":"499","endLine":69,"endColumn":16},{"ruleId":"506","severity":1,"message":"507","line":77,"column":14,"nodeType":"508","messageId":"509","endLine":77,"endColumn":16},{"ruleId":"496","severity":1,"message":"592","line":175,"column":12,"nodeType":"498","messageId":"499","endLine":175,"endColumn":18},{"ruleId":"496","severity":1,"message":"567","line":269,"column":10,"nodeType":"498","messageId":"499","endLine":269,"endColumn":17},{"ruleId":"506","severity":1,"message":"507","line":387,"column":27,"nodeType":"508","messageId":"509","endLine":387,"endColumn":29},{"ruleId":"528","severity":1,"message":"529","line":449,"column":25,"nodeType":"505","endLine":449,"endColumn":28},{"ruleId":"528","severity":1,"message":"529","line":455,"column":25,"nodeType":"505","endLine":455,"endColumn":28},{"ruleId":"528","severity":1,"message":"529","line":462,"column":25,"nodeType":"505","endLine":462,"endColumn":28},{"ruleId":"528","severity":1,"message":"529","line":469,"column":25,"nodeType":"505","endLine":469,"endColumn":28},{"ruleId":"528","severity":1,"message":"529","line":518,"column":25,"nodeType":"505","endLine":518,"endColumn":28},{"ruleId":"528","severity":1,"message":"529","line":524,"column":25,"nodeType":"505","endLine":524,"endColumn":28},{"ruleId":"528","severity":1,"message":"529","line":531,"column":25,"nodeType":"505","endLine":531,"endColumn":28},{"ruleId":"528","severity":1,"message":"529","line":538,"column":25,"nodeType":"505","endLine":538,"endColumn":28},{"ruleId":"528","severity":1,"message":"529","line":587,"column":25,"nodeType":"505","endLine":587,"endColumn":28},{"ruleId":"528","severity":1,"message":"529","line":593,"column":25,"nodeType":"505","endLine":593,"endColumn":28},{"ruleId":"528","severity":1,"message":"529","line":600,"column":25,"nodeType":"505","endLine":600,"endColumn":28},{"ruleId":"528","severity":1,"message":"529","line":607,"column":25,"nodeType":"505","endLine":607,"endColumn":28},{"ruleId":"528","severity":1,"message":"529","line":656,"column":25,"nodeType":"505","endLine":656,"endColumn":28},{"ruleId":"528","severity":1,"message":"529","line":662,"column":25,"nodeType":"505","endLine":662,"endColumn":28},{"ruleId":"528","severity":1,"message":"529","line":669,"column":25,"nodeType":"505","endLine":669,"endColumn":28},{"ruleId":"528","severity":1,"message":"529","line":676,"column":25,"nodeType":"505","endLine":676,"endColumn":28},{"ruleId":"528","severity":1,"message":"529","line":725,"column":25,"nodeType":"505","endLine":725,"endColumn":28},{"ruleId":"528","severity":1,"message":"529","line":731,"column":25,"nodeType":"505","endLine":731,"endColumn":28},{"ruleId":"528","severity":1,"message":"529","line":738,"column":25,"nodeType":"505","endLine":738,"endColumn":28},{"ruleId":"528","severity":1,"message":"529","line":745,"column":25,"nodeType":"505","endLine":745,"endColumn":28},{"ruleId":"528","severity":1,"message":"529","line":794,"column":25,"nodeType":"505","endLine":794,"endColumn":28},{"ruleId":"528","severity":1,"message":"529","line":800,"column":25,"nodeType":"505","endLine":800,"endColumn":28},{"ruleId":"528","severity":1,"message":"529","line":807,"column":25,"nodeType":"505","endLine":807,"endColumn":28},{"ruleId":"528","severity":1,"message":"529","line":814,"column":25,"nodeType":"505","endLine":814,"endColumn":28},{"ruleId":"528","severity":1,"message":"529","line":863,"column":25,"nodeType":"505","endLine":863,"endColumn":28},{"ruleId":"528","severity":1,"message":"529","line":870,"column":25,"nodeType":"505","endLine":870,"endColumn":28},{"ruleId":"528","severity":1,"message":"529","line":877,"column":25,"nodeType":"505","endLine":877,"endColumn":28},{"ruleId":"528","severity":1,"message":"529","line":884,"column":25,"nodeType":"505","endLine":884,"endColumn":28},{"ruleId":"528","severity":1,"message":"529","line":940,"column":27,"nodeType":"505","endLine":940,"endColumn":30},{"ruleId":"528","severity":1,"message":"529","line":946,"column":27,"nodeType":"505","endLine":946,"endColumn":30},{"ruleId":"528","severity":1,"message":"529","line":953,"column":27,"nodeType":"505","endLine":953,"endColumn":30},{"ruleId":"528","severity":1,"message":"529","line":960,"column":27,"nodeType":"505","endLine":960,"endColumn":30},{"ruleId":"528","severity":1,"message":"529","line":1022,"column":33,"nodeType":"505","endLine":1022,"endColumn":36},{"ruleId":"528","severity":1,"message":"529","line":1029,"column":33,"nodeType":"505","endLine":1029,"endColumn":36},{"ruleId":"528","severity":1,"message":"529","line":1037,"column":33,"nodeType":"505","endLine":1037,"endColumn":36},{"ruleId":"528","severity":1,"message":"529","line":1044,"column":33,"nodeType":"505","endLine":1044,"endColumn":36},{"ruleId":"506","severity":1,"message":"507","line":1050,"column":45,"nodeType":"508","messageId":"509","endLine":1050,"endColumn":47},{"ruleId":"528","severity":1,"message":"529","line":1077,"column":33,"nodeType":"505","endLine":1077,"endColumn":36},{"ruleId":"528","severity":1,"message":"529","line":1084,"column":33,"nodeType":"505","endLine":1084,"endColumn":36},{"ruleId":"496","severity":1,"message":"593","line":1147,"column":10,"nodeType":"498","messageId":"499","endLine":1147,"endColumn":18},{"ruleId":"496","severity":1,"message":"594","line":1151,"column":9,"nodeType":"498","messageId":"499","endLine":1151,"endColumn":14},{"ruleId":"496","severity":1,"message":"595","line":1175,"column":10,"nodeType":"498","messageId":"499","endLine":1175,"endColumn":15},{"ruleId":"496","severity":1,"message":"596","line":2,"column":10,"nodeType":"498","messageId":"499","endLine":2,"endColumn":15},{"ruleId":"496","severity":1,"message":"597","line":2,"column":17,"nodeType":"498","messageId":"499","endLine":2,"endColumn":23},{"ruleId":"506","severity":1,"message":"507","line":69,"column":21,"nodeType":"508","messageId":"509","endLine":69,"endColumn":23},{"ruleId":"506","severity":1,"message":"507","line":91,"column":21,"nodeType":"508","messageId":"509","endLine":91,"endColumn":23},{"ruleId":"506","severity":1,"message":"507","line":118,"column":16,"nodeType":"508","messageId":"509","endLine":118,"endColumn":18},{"ruleId":"496","severity":1,"message":"598","line":127,"column":10,"nodeType":"498","messageId":"499","endLine":127,"endColumn":17},{"ruleId":"496","severity":1,"message":"599","line":128,"column":23,"nodeType":"498","messageId":"499","endLine":128,"endColumn":37},{"ruleId":"506","severity":1,"message":"507","line":161,"column":28,"nodeType":"508","messageId":"509","endLine":161,"endColumn":30},{"ruleId":"506","severity":1,"message":"507","line":161,"column":43,"nodeType":"508","messageId":"509","endLine":161,"endColumn":45},{"ruleId":"506","severity":1,"message":"507","line":161,"column":58,"nodeType":"508","messageId":"509","endLine":161,"endColumn":60},{"ruleId":"503","severity":1,"message":"504","line":166,"column":19,"nodeType":"505","endLine":166,"endColumn":44},{"ruleId":"506","severity":1,"message":"507","line":200,"column":19,"nodeType":"508","messageId":"509","endLine":200,"endColumn":21},{"ruleId":"506","severity":1,"message":"507","line":211,"column":19,"nodeType":"508","messageId":"509","endLine":211,"endColumn":21},{"ruleId":"506","severity":1,"message":"507","line":211,"column":34,"nodeType":"508","messageId":"509","endLine":211,"endColumn":36},{"ruleId":"528","severity":1,"message":"529","line":302,"column":13,"nodeType":"505","endLine":302,"endColumn":80},{"ruleId":"506","severity":1,"message":"507","line":314,"column":24,"nodeType":"508","messageId":"509","endLine":314,"endColumn":26},{"ruleId":"506","severity":1,"message":"507","line":320,"column":32,"nodeType":"508","messageId":"509","endLine":320,"endColumn":34},{"ruleId":"506","severity":1,"message":"507","line":320,"column":47,"nodeType":"508","messageId":"509","endLine":320,"endColumn":49},{"ruleId":"506","severity":1,"message":"507","line":320,"column":62,"nodeType":"508","messageId":"509","endLine":320,"endColumn":64},{"ruleId":"503","severity":1,"message":"504","line":325,"column":23,"nodeType":"505","endLine":325,"endColumn":48},{"ruleId":"506","severity":1,"message":"507","line":388,"column":32,"nodeType":"508","messageId":"509","endLine":388,"endColumn":34},{"ruleId":"506","severity":1,"message":"507","line":388,"column":47,"nodeType":"508","messageId":"509","endLine":388,"endColumn":49},{"ruleId":"506","severity":1,"message":"507","line":388,"column":62,"nodeType":"508","messageId":"509","endLine":388,"endColumn":64},{"ruleId":"503","severity":1,"message":"504","line":393,"column":23,"nodeType":"505","endLine":393,"endColumn":48},{"ruleId":"506","severity":1,"message":"507","line":402,"column":19,"nodeType":"508","messageId":"509","endLine":402,"endColumn":21},{"ruleId":"506","severity":1,"message":"507","line":413,"column":19,"nodeType":"508","messageId":"509","endLine":413,"endColumn":21},{"ruleId":"506","severity":1,"message":"507","line":413,"column":34,"nodeType":"508","messageId":"509","endLine":413,"endColumn":36},{"ruleId":"528","severity":1,"message":"529","line":504,"column":13,"nodeType":"505","endLine":504,"endColumn":80},{"ruleId":"496","severity":1,"message":"500","line":7,"column":10,"nodeType":"498","messageId":"499","endLine":7,"endColumn":15},{"ruleId":"496","severity":1,"message":"600","line":22,"column":10,"nodeType":"498","messageId":"499","endLine":22,"endColumn":19},{"ruleId":"496","severity":1,"message":"601","line":37,"column":5,"nodeType":"498","messageId":"499","endLine":37,"endColumn":12},{"ruleId":"496","severity":1,"message":"602","line":59,"column":10,"nodeType":"498","messageId":"499","endLine":59,"endColumn":18},{"ruleId":"496","severity":1,"message":"603","line":60,"column":20,"nodeType":"498","messageId":"499","endLine":60,"endColumn":31},{"ruleId":"496","severity":1,"message":"604","line":63,"column":10,"nodeType":"498","messageId":"499","endLine":63,"endColumn":14},{"ruleId":"506","severity":1,"message":"507","line":141,"column":31,"nodeType":"508","messageId":"509","endLine":141,"endColumn":33},{"ruleId":"492","severity":1,"message":"605","line":154,"column":6,"nodeType":"494","endLine":154,"endColumn":8,"suggestions":"606"},{"ruleId":"506","severity":1,"message":"507","line":164,"column":24,"nodeType":"508","messageId":"509","endLine":164,"endColumn":26},{"ruleId":"506","severity":1,"message":"507","line":164,"column":37,"nodeType":"508","messageId":"509","endLine":164,"endColumn":39},{"ruleId":"506","severity":1,"message":"507","line":164,"column":50,"nodeType":"508","messageId":"509","endLine":164,"endColumn":52},{"ruleId":"503","severity":1,"message":"504","line":169,"column":17,"nodeType":"505","endLine":169,"endColumn":42},{"ruleId":"506","severity":1,"message":"507","line":178,"column":38,"nodeType":"508","messageId":"509","endLine":178,"endColumn":40},{"ruleId":"506","severity":1,"message":"507","line":204,"column":19,"nodeType":"508","messageId":"509","endLine":204,"endColumn":21},{"ruleId":"506","severity":1,"message":"507","line":217,"column":23,"nodeType":"508","messageId":"509","endLine":217,"endColumn":25},{"ruleId":"528","severity":1,"message":"529","line":264,"column":13,"nodeType":"505","endLine":264,"endColumn":80},{"ruleId":"506","severity":1,"message":"507","line":278,"column":24,"nodeType":"508","messageId":"509","endLine":278,"endColumn":26},{"ruleId":"506","severity":1,"message":"507","line":283,"column":30,"nodeType":"508","messageId":"509","endLine":283,"endColumn":32},{"ruleId":"506","severity":1,"message":"507","line":283,"column":45,"nodeType":"508","messageId":"509","endLine":283,"endColumn":47},{"ruleId":"506","severity":1,"message":"507","line":283,"column":60,"nodeType":"508","messageId":"509","endLine":283,"endColumn":62},{"ruleId":"503","severity":1,"message":"504","line":289,"column":23,"nodeType":"505","endLine":289,"endColumn":48},{"ruleId":"506","severity":1,"message":"507","line":352,"column":30,"nodeType":"508","messageId":"509","endLine":352,"endColumn":32},{"ruleId":"506","severity":1,"message":"507","line":352,"column":45,"nodeType":"508","messageId":"509","endLine":352,"endColumn":47},{"ruleId":"506","severity":1,"message":"507","line":352,"column":60,"nodeType":"508","messageId":"509","endLine":352,"endColumn":62},{"ruleId":"503","severity":1,"message":"504","line":359,"column":23,"nodeType":"505","endLine":359,"endColumn":48},{"ruleId":"506","severity":1,"message":"507","line":368,"column":19,"nodeType":"508","messageId":"509","endLine":368,"endColumn":21},{"ruleId":"506","severity":1,"message":"507","line":382,"column":23,"nodeType":"508","messageId":"509","endLine":382,"endColumn":25},{"ruleId":"528","severity":1,"message":"529","line":448,"column":13,"nodeType":"505","endLine":448,"endColumn":80},{"ruleId":"496","severity":1,"message":"510","line":1,"column":16,"nodeType":"498","messageId":"499","endLine":1,"endColumn":25},{"ruleId":"496","severity":1,"message":"607","line":4,"column":9,"nodeType":"498","messageId":"499","endLine":4,"endColumn":17},{"ruleId":"496","severity":1,"message":"523","line":5,"column":22,"nodeType":"498","messageId":"499","endLine":5,"endColumn":27},{"ruleId":"496","severity":1,"message":"608","line":5,"column":37,"nodeType":"498","messageId":"499","endLine":5,"endColumn":42},{"ruleId":"496","severity":1,"message":"589","line":5,"column":43,"nodeType":"498","messageId":"499","endLine":5,"endColumn":47},{"ruleId":"496","severity":1,"message":"609","line":5,"column":48,"nodeType":"498","messageId":"499","endLine":5,"endColumn":54},{"ruleId":"496","severity":1,"message":"610","line":5,"column":55,"nodeType":"498","messageId":"499","endLine":5,"endColumn":61},{"ruleId":"496","severity":1,"message":"511","line":6,"column":8,"nodeType":"498","messageId":"499","endLine":6,"endColumn":13},{"ruleId":"496","severity":1,"message":"515","line":7,"column":9,"nodeType":"498","messageId":"499","endLine":7,"endColumn":17},{"ruleId":"496","severity":1,"message":"611","line":7,"column":18,"nodeType":"498","messageId":"499","endLine":7,"endColumn":30},{"ruleId":"496","severity":1,"message":"524","line":7,"column":31,"nodeType":"498","messageId":"499","endLine":7,"endColumn":43},{"ruleId":"496","severity":1,"message":"612","line":7,"column":44,"nodeType":"498","messageId":"499","endLine":7,"endColumn":56},{"ruleId":"496","severity":1,"message":"613","line":7,"column":57,"nodeType":"498","messageId":"499","endLine":7,"endColumn":70},{"ruleId":"496","severity":1,"message":"614","line":7,"column":71,"nodeType":"498","messageId":"499","endLine":7,"endColumn":91},{"ruleId":"496","severity":1,"message":"615","line":7,"column":92,"nodeType":"498","messageId":"499","endLine":7,"endColumn":99},{"ruleId":"496","severity":1,"message":"616","line":7,"column":100,"nodeType":"498","messageId":"499","endLine":7,"endColumn":111},{"ruleId":"496","severity":1,"message":"517","line":8,"column":9,"nodeType":"498","messageId":"499","endLine":8,"endColumn":19},{"ruleId":"496","severity":1,"message":"526","line":9,"column":9,"nodeType":"498","messageId":"499","endLine":9,"endColumn":16},{"ruleId":"496","severity":1,"message":"534","line":10,"column":10,"nodeType":"498","messageId":"499","endLine":10,"endColumn":20},{"ruleId":"492","severity":1,"message":"530","line":33,"column":8,"nodeType":"494","endLine":33,"endColumn":10,"suggestions":"617"},{"ruleId":"503","severity":1,"message":"504","line":44,"column":5,"nodeType":"505","endLine":44,"endColumn":91},{"ruleId":"528","severity":1,"message":"529","line":74,"column":5,"nodeType":"505","endLine":74,"endColumn":32},{"ruleId":"496","severity":1,"message":"510","line":2,"column":17,"nodeType":"498","messageId":"499","endLine":2,"endColumn":26},{"ruleId":"496","severity":1,"message":"618","line":2,"column":27,"nodeType":"498","messageId":"499","endLine":2,"endColumn":38},{"ruleId":"496","severity":1,"message":"619","line":7,"column":10,"nodeType":"498","messageId":"499","endLine":7,"endColumn":16},{"ruleId":"620","severity":1,"message":"621","line":34,"column":1,"nodeType":"622","endLine":38,"endColumn":3},{"ruleId":"496","severity":1,"message":"623","line":2,"column":8,"nodeType":"498","messageId":"499","endLine":2,"endColumn":17},{"ruleId":"506","severity":1,"message":"507","line":2,"column":33,"nodeType":"508","messageId":"509","endLine":2,"endColumn":35},{"ruleId":"506","severity":1,"message":"507","line":2,"column":69,"nodeType":"508","messageId":"509","endLine":2,"endColumn":71},{"ruleId":"496","severity":1,"message":"624","line":40,"column":7,"nodeType":"498","messageId":"499","endLine":40,"endColumn":11},{"ruleId":"506","severity":1,"message":"507","line":62,"column":14,"nodeType":"508","messageId":"509","endLine":62,"endColumn":16},{"ruleId":"506","severity":1,"message":"507","line":63,"column":19,"nodeType":"508","messageId":"509","endLine":63,"endColumn":21},{"ruleId":"625","severity":1,"message":"626","line":70,"column":7,"nodeType":"627","messageId":"628","endLine":70,"endColumn":13},{"ruleId":"625","severity":1,"message":"626","line":74,"column":7,"nodeType":"627","messageId":"628","endLine":74,"endColumn":13},{"ruleId":"625","severity":1,"message":"626","line":77,"column":7,"nodeType":"627","messageId":"628","endLine":77,"endColumn":13},{"ruleId":"629","severity":1,"message":"630","line":78,"column":5,"nodeType":"631","messageId":"509","endLine":80,"endColumn":13},{"ruleId":"625","severity":1,"message":"626","line":80,"column":7,"nodeType":"627","messageId":"628","endLine":80,"endColumn":13},{"ruleId":"625","severity":1,"message":"626","line":84,"column":7,"nodeType":"627","messageId":"628","endLine":84,"endColumn":13},{"ruleId":"625","severity":1,"message":"626","line":87,"column":7,"nodeType":"627","messageId":"628","endLine":87,"endColumn":13},{"ruleId":"625","severity":1,"message":"626","line":90,"column":7,"nodeType":"627","messageId":"628","endLine":90,"endColumn":13},{"ruleId":"625","severity":1,"message":"626","line":93,"column":7,"nodeType":"627","messageId":"628","endLine":93,"endColumn":13},{"ruleId":"625","severity":1,"message":"626","line":96,"column":7,"nodeType":"627","messageId":"628","endLine":96,"endColumn":13},{"ruleId":"496","severity":1,"message":"594","line":107,"column":5,"nodeType":"498","messageId":"499","endLine":107,"endColumn":10},{"ruleId":"632","severity":1,"message":"633","line":125,"column":85,"nodeType":"634","messageId":"635","endLine":125,"endColumn":86,"suggestions":"636"},{"ruleId":"496","severity":1,"message":"511","line":1,"column":8,"nodeType":"498","messageId":"499","endLine":1,"endColumn":13},{"ruleId":"496","severity":1,"message":"637","line":1,"column":38,"nodeType":"498","messageId":"499","endLine":1,"endColumn":44},{"ruleId":"496","severity":1,"message":"510","line":2,"column":17,"nodeType":"498","messageId":"499","endLine":2,"endColumn":26},{"ruleId":"496","severity":1,"message":"638","line":11,"column":3,"nodeType":"498","messageId":"499","endLine":11,"endColumn":13},{"ruleId":"506","severity":1,"message":"507","line":67,"column":15,"nodeType":"508","messageId":"509","endLine":67,"endColumn":17},{"ruleId":"492","severity":1,"message":"639","line":72,"column":6,"nodeType":"494","endLine":72,"endColumn":13,"suggestions":"640"},{"ruleId":"492","severity":1,"message":"641","line":74,"column":19,"nodeType":"498","endLine":74,"endColumn":30},{"ruleId":"506","severity":1,"message":"522","line":86,"column":15,"nodeType":"508","messageId":"509","endLine":86,"endColumn":17},{"ruleId":"506","severity":1,"message":"507","line":104,"column":18,"nodeType":"508","messageId":"509","endLine":104,"endColumn":20},{"ruleId":"506","severity":1,"message":"507","line":111,"column":16,"nodeType":"508","messageId":"509","endLine":111,"endColumn":18},{"ruleId":"506","severity":1,"message":"507","line":142,"column":18,"nodeType":"508","messageId":"509","endLine":142,"endColumn":20},{"ruleId":"506","severity":1,"message":"507","line":148,"column":33,"nodeType":"508","messageId":"509","endLine":148,"endColumn":35},{"ruleId":"506","severity":1,"message":"507","line":157,"column":33,"nodeType":"508","messageId":"509","endLine":157,"endColumn":35},{"ruleId":"506","severity":1,"message":"507","line":166,"column":33,"nodeType":"508","messageId":"509","endLine":166,"endColumn":35},{"ruleId":"506","severity":1,"message":"507","line":177,"column":18,"nodeType":"508","messageId":"509","endLine":177,"endColumn":20},{"ruleId":"506","severity":1,"message":"507","line":183,"column":33,"nodeType":"508","messageId":"509","endLine":183,"endColumn":35},{"ruleId":"506","severity":1,"message":"507","line":192,"column":33,"nodeType":"508","messageId":"509","endLine":192,"endColumn":35},{"ruleId":"506","severity":1,"message":"507","line":201,"column":33,"nodeType":"508","messageId":"509","endLine":201,"endColumn":35},{"ruleId":"506","severity":1,"message":"507","line":210,"column":33,"nodeType":"508","messageId":"509","endLine":210,"endColumn":35},{"ruleId":"506","severity":1,"message":"507","line":221,"column":18,"nodeType":"508","messageId":"509","endLine":221,"endColumn":20},{"ruleId":"506","severity":1,"message":"507","line":227,"column":33,"nodeType":"508","messageId":"509","endLine":227,"endColumn":35},{"ruleId":"506","severity":1,"message":"507","line":236,"column":33,"nodeType":"508","messageId":"509","endLine":236,"endColumn":35},{"ruleId":"506","severity":1,"message":"507","line":245,"column":33,"nodeType":"508","messageId":"509","endLine":245,"endColumn":35},{"ruleId":"506","severity":1,"message":"507","line":254,"column":33,"nodeType":"508","messageId":"509","endLine":254,"endColumn":35},{"ruleId":"506","severity":1,"message":"507","line":265,"column":18,"nodeType":"508","messageId":"509","endLine":265,"endColumn":20},{"ruleId":"506","severity":1,"message":"507","line":271,"column":33,"nodeType":"508","messageId":"509","endLine":271,"endColumn":35},{"ruleId":"506","severity":1,"message":"507","line":280,"column":33,"nodeType":"508","messageId":"509","endLine":280,"endColumn":35},{"ruleId":"506","severity":1,"message":"507","line":291,"column":18,"nodeType":"508","messageId":"509","endLine":291,"endColumn":20},{"ruleId":"506","severity":1,"message":"507","line":311,"column":18,"nodeType":"508","messageId":"509","endLine":311,"endColumn":20},{"ruleId":"496","severity":1,"message":"642","line":1,"column":8,"nodeType":"498","messageId":"499","endLine":1,"endColumn":15},{"ruleId":"496","severity":1,"message":"643","line":2,"column":8,"nodeType":"498","messageId":"499","endLine":2,"endColumn":16},{"ruleId":"496","severity":1,"message":"644","line":6,"column":8,"nodeType":"498","messageId":"499","endLine":6,"endColumn":13},{"ruleId":"496","severity":1,"message":"645","line":7,"column":8,"nodeType":"498","messageId":"499","endLine":7,"endColumn":12},{"ruleId":"496","severity":1,"message":"646","line":9,"column":8,"nodeType":"498","messageId":"499","endLine":9,"endColumn":11},{"ruleId":"496","severity":1,"message":"647","line":10,"column":8,"nodeType":"498","messageId":"499","endLine":10,"endColumn":12},{"ruleId":"496","severity":1,"message":"574","line":14,"column":11,"nodeType":"498","messageId":"499","endLine":14,"endColumn":19},{"ruleId":"542","severity":1,"message":"648","line":18,"column":10,"nodeType":"544","messageId":"545","endLine":30,"endColumn":11},"no-native-reassign",["649"],"no-negated-in-lhs",["650"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'history'. Either include it or remove the dependency array.","ArrayExpression",["651"],"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'toast' is defined but never used.","'username' is assigned a value but never used.","'app' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'Component' is defined but never used.","'react' is defined but never used.","'Col' is defined but never used.","'Row' is defined but never used.","'IconContext' is defined but never used.","'MdDelete' is defined but never used.","'MdRemoveRedEye' is defined but never used.","'AiFillEdit' is defined but never used.","'FiMoreHorizontal' is defined but never used.","'click' is assigned a value but never used.","'edit' is assigned a value but never used.","'delpost' is assigned a value but never used.","Expected '!==' and instead saw '!='.","'Image' is defined but never used.","'MdAccessTime' is defined but never used.","'HiCurrencyRupee' is defined but never used.","'FaTools' is defined but never used.","'posttime' is assigned a value but never used.","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","React Hook useEffect has missing dependencies: 'pdata' and 'props.id'. Either include them or remove the dependency array.",["652"],"'pic' is defined but never used.","'useState' is defined but never used.","'useHistory' is defined but never used.","'Link' is defined but never used.","'RiLockPasswordFill' is defined but never used.","'MdFileUpload' is defined but never used.","'src' is assigned a value but never used.","use-isnan","Use the isNaN function to compare with NaN.","comparisonWithNaN","no-loop-func","Function declared in a loop contains unsafe references to variable(s) 'cfile', 'cfile', 'cfile'.","ArrowFunctionExpression","unsafeRefs","'value' is assigned a value but never used.","'imgsrc' is assigned a value but never used.","'TextArea' is defined but never used.","'Input' is defined but never used.","'ImageGroup' is defined but never used.","'Header' is defined but never used.","'BsEyeFill' is defined but never used.","'BiTimeFive' is defined but never used.","'RiPinDistanceFill' is defined but never used.","'MdImage' is defined but never used.","'MdList' is defined but never used.","'MdArrowDropDownCircle' is defined but never used.","'MdViewDay' is defined but never used.","'RiSendPlaneLine' is defined but never used.","'FaFolderPlus' is defined but never used.","'chatid' is defined but never used.","'tempChat' is assigned a value but never used.","'settrue' is defined but never used.","'history' is assigned a value but never used.","'unrChat' is assigned a value but never used.","'setunrChat' is assigned a value but never used.","'heights' is assigned a value but never used.","'mflag' is assigned a value but never used.","Effect callbacks are synchronous to prevent race conditions. Put the async function inside:\n\nuseEffect(() => {\n  async function fetchData() {\n    // You can await here\n    const response = await MyAPI.getData(someId);\n    // ...\n  }\n  fetchData();\n}, [someId]); // Or [] if effect doesn't need props or state\n\nLearn more about data fetching with Hooks: https://reactjs.org/link/hooks-data-fetching","React Hook useEffect has a missing dependency: 'chat'. Either include it or remove the dependency array.",["653"],"React Hook useEffect has a missing dependency: 'uitf'. Either include it or remove the dependency array.",["654"],"'upldtask' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'chid' and 'click2'. Either include them or remove the dependency array.",["655"],"Function declared in a loop contains unsafe references to variable(s) 'cfile', 'cfile'.","'uploadmedia' is defined but never used.","React Hook useCallback has a missing dependency: 'props'. Either include it or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useCallback call and refer to those specific props inside useCallback.",["656"],"'MdPhotoCamera' is defined but never used.","'madia' is assigned a value but never used.","'avoid' is assigned a value but never used.","'postdata' is assigned a value but never used.","'handleChange' is defined but never used.","React Hook useEffect has missing dependencies: 'arrayvar2', 'handleSubmit', and 'image.length'. Either include them or remove the dependency array.",["657"],"'photoHandle' is assigned a value but never used.","'Step' is defined but never used.","'Menu' is defined but never used.","'checkt' is assigned a value but never used.","'satish' is defined but never used.","'useTimes' is defined but never used.","'count' is assigned a value but never used.","'Empty' is defined but never used.","'Modal' is defined but never used.","'Select' is defined but never used.","'height1' is assigned a value but never used.","'setTextcontent' is assigned a value but never used.","'feedBack1' is defined but never used.","'newpost' is assigned a value but never used.","'sheight1' is assigned a value but never used.","'setUsertext' is assigned a value but never used.","'lock' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'swidths1'. Either include it or remove the dependency array.",["658"],"'Carousel' is defined but never used.","'Label' is defined but never used.","'Button' is defined but never used.","'Rating' is defined but never used.","'MdLocationOn' is defined but never used.","'MdWatchLater' is defined but never used.","'MdCheckCircle' is defined but never used.","'MdAssignmentTurnedIn' is defined but never used.","'MdBuild' is defined but never used.","'MdThumbDown' is defined but never used.",["659"],"'useCallback' is defined but never used.","'sticky' is assigned a value but never used.","import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration","'firestore' is defined but never used.","'year' is assigned a value but never used.","no-unreachable","Unreachable code.","BreakStatement","unreachableCode","no-duplicate-case","Duplicate case label.","SwitchCase","no-useless-escape","Unnecessary escape character: \\/.","Literal","unnecessaryEscape",["660","661"],"'useRef' is defined but never used.","'MdFeedback' is defined but never used.","React Hook useEffect has a missing dependency: 'onClose'. Either include it or remove the dependency array.",["662"],"React Hook useCallback does nothing when called with only one argument. Did you forget to pass an array of dependencies?","'takepic' is defined but never used.","'location' is defined but never used.","'about' is defined but never used.","'what' is defined but never used.","'reg' is defined but never used.","'meet' is defined but never used.","Function declared in a loop contains unsafe references to variable(s) 'surl'.","no-global-assign","no-unsafe-negation",{"desc":"663","fix":"664"},{"desc":"665","fix":"666"},{"desc":"667","fix":"668"},{"desc":"669","fix":"670"},{"desc":"671","fix":"672"},{"desc":"673","fix":"674"},{"desc":"675","fix":"676"},{"desc":"677","fix":"678"},{"desc":"665","fix":"679"},{"messageId":"680","fix":"681","desc":"682"},{"messageId":"683","fix":"684","desc":"685"},{"desc":"686","fix":"687"},"Update the dependencies array to be: [history]",{"range":"688","text":"689"},"Update the dependencies array to be: [pdata, props.id]",{"range":"690","text":"691"},"Update the dependencies array to be: [chat, chat.body]",{"range":"692","text":"693"},"Update the dependencies array to be: [uitf, upload]",{"range":"694","text":"695"},"Update the dependencies array to be: [chid, click2, image2]",{"range":"696","text":"697"},"Update the dependencies array to be: [props]",{"range":"698","text":"699"},"Update the dependencies array to be: [arrayvar, arrayvar2, handleSubmit, image.length]",{"range":"700","text":"701"},"Update the dependencies array to be: [swidths1]",{"range":"702","text":"703"},{"range":"704","text":"691"},"removeEscape",{"range":"705","text":"706"},"Remove the `\\`. This maintains the current functionality.","escapeBackslash",{"range":"707","text":"708"},"Replace the `\\` with `\\\\` to include the actual backslash character.","Update the dependencies array to be: [count, onClose]",{"range":"709","text":"710"},[275,277],"[history]",[14404,14406],"[pdata, props.id]",[15792,15803],"[chat, chat.body]",[18034,18042],"[uitf, upload]",[19110,19118],"[chid, click2, image2]",[42939,42951],"[props]",[6570,6580],"[arrayvar, arrayvar2, handleSubmit, image.length]",[5448,5450],"[swidths1]",[1197,1199],[3135,3136],"",[3135,3135],"\\",[1807,1814],"[count, onClose]"]