[{"J:\\spotmies\\website\\firstapp\\src\\index.js":"1","J:\\spotmies\\website\\firstapp\\src\\App.js":"2","J:\\spotmies\\website\\firstapp\\src\\reportWebVitals.js":"3","J:\\spotmies\\website\\firstapp\\src\\components\\profile.js":"4","J:\\spotmies\\website\\firstapp\\src\\components\\product.js":"5","J:\\spotmies\\website\\firstapp\\src\\components\\productlist.js":"6","J:\\spotmies\\website\\firstapp\\src\\components\\chat.js":"7","J:\\spotmies\\website\\firstapp\\src\\components\\signup.js":"8","J:\\spotmies\\website\\firstapp\\src\\components\\postview.js":"9","J:\\spotmies\\website\\firstapp\\src\\components\\mybooks.js":"10","J:\\spotmies\\website\\firstapp\\src\\components\\navbar.js":"11","J:\\spotmies\\website\\firstapp\\src\\components\\slide1.js":"12","J:\\spotmies\\website\\firstapp\\src\\components\\editpost.js":"13","J:\\spotmies\\website\\firstapp\\src\\components\\newpost.js":"14","J:\\spotmies\\website\\firstapp\\src\\firebase.js":"15"},{"size":736,"mtime":1612002686091,"results":"16","hashOfConfig":"17"},{"size":1955,"mtime":1612937176211,"results":"18","hashOfConfig":"17"},{"size":375,"mtime":1611395384746,"results":"19","hashOfConfig":"17"},{"size":5442,"mtime":1612963946038,"results":"20","hashOfConfig":"17"},{"size":230,"mtime":1611910340616,"results":"21","hashOfConfig":"17"},{"size":254,"mtime":1611910327164,"results":"22","hashOfConfig":"17"},{"size":2569,"mtime":1613031975827,"results":"23","hashOfConfig":"17"},{"size":4145,"mtime":1612963695087,"results":"24","hashOfConfig":"17"},{"size":2629,"mtime":1612951557605,"results":"25","hashOfConfig":"17"},{"size":2839,"mtime":1612941175071,"results":"26","hashOfConfig":"17"},{"size":4326,"mtime":1612957572287,"results":"27","hashOfConfig":"17"},{"size":1581,"mtime":1612935952419,"results":"28","hashOfConfig":"17"},{"size":9902,"mtime":1612965179383,"results":"29","hashOfConfig":"17"},{"size":7855,"mtime":1612965046060,"results":"30","hashOfConfig":"17"},{"size":1101,"mtime":1612017548675,"results":"31","hashOfConfig":"17"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},"1xiwp8s",{"filePath":"35","messages":"36","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37","usedDeprecatedRules":"34"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42","usedDeprecatedRules":"34"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"49","messages":"50","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"34"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54","usedDeprecatedRules":"34"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"34"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60","usedDeprecatedRules":"34"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"34"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66","usedDeprecatedRules":"34"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69","usedDeprecatedRules":"34"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72","usedDeprecatedRules":"34"},"J:\\spotmies\\website\\firstapp\\src\\index.js",[],["73","74"],"J:\\spotmies\\website\\firstapp\\src\\App.js",["75"],"import './App.css';\r\nimport React from 'react';\r\nimport { Switch, Route,BrowserRouter } from \"react-router-dom\";\r\nimport Navibar from \"./components/navbar\";\r\nimport Firstslide from \"./components/slide1\";\r\nimport postview from \"./components/postview\";\r\nimport Product from \"./components/product\";\r\nimport productlist from \"./components/productlist\";\r\nimport Mybooks from \"./components/mybooks\";\r\nimport newpost from \"./components/newpost\";\r\nimport chat from \"./components/chat\";\r\nimport signup from \"./components/signup\";\r\nimport profile from './components/profile';\r\nimport Editpost from './components/editpost'\r\n\r\n\r\nconst Routing = ()=>{\r\nreturn(\r\n      <Switch>\r\n      <Route exact path=\"/\" component={Firstslide} />\r\n      <Route exact path=\"/mybookings\"  ><Mybooks />\r\n      </Route>\r\n      <Route path=\"/cart\" component={productlist}/>\r\n      <Route path=\"/newpost\" component={newpost}/>\r\n      <Route path=\"/chat\" component={chat}/>\r\n      <Route path=\"/signup\" component={signup}/>\r\n      <Route path=\"/signup/home\" component={Firstslide}/>\r\n      <Route path=\"/account\" component={profile}/>\r\n      <Route path=\"/mybookings/id/edit\" component={Editpost}/>\r\n      <Route path=\"/mybookings/id\" component={postview}/>\r\n     \r\n      \r\n    </Switch>\r\n)\r\n\r\n}\r\n\r\n\r\nfunction App() {\r\n  return (\r\n//  <React.Fragment>\r\n<BrowserRouter>\r\n  <Navibar />\r\n  <Routing />\r\n  </BrowserRouter>\r\n    // {/* <Switch>\r\n    //   <Route exact path=\"/\" component={Firstslide} />\r\n    //   <Route path=\"/mybookings\" component={Mybooks} />\r\n    //   <Route path=\"/cart\" component={productlist}/>\r\n    //   <Route path=\"/newpost\" component={newpost}/>\r\n    //   <Route path=\"/chat\" component={chat}/>\r\n    //   <Route path=\"/signup\" component={signup}/>\r\n    //   <Route path=\"/signup/home\" component={Firstslide}/>\r\n    //   <Route path=\"/profile\" component={profile}/>\r\n      \r\n    // </Switch> */}\r\n   \r\n    // </React.Fragment>\r\n   \r\n  \r\n  );\r\n}\r\n\r\nexport default App;\r\n","J:\\spotmies\\website\\firstapp\\src\\reportWebVitals.js",[],"J:\\spotmies\\website\\firstapp\\src\\components\\profile.js",["76","77","78","79"],"import React, { Component } from 'react'\r\nimport pic from '../images/logo192.png'\r\nimport firebase from '../firebase';\r\nimport {useState,useEffect} from \"react\";\r\nimport {Button,Form,InputGroup,FormControl } from 'react-bootstrap';\r\nimport '../index.css';\r\n\r\nvar availuser=false;\r\n\r\nfunction useTimes(){\r\n  \r\n  const[postdata,setdata]=useState()\r\n \r\nuseEffect(()=>{\r\n  firebase.auth().onAuthStateChanged(function(user) {\r\n    if(user) {\r\n      availuser=true;\r\n      db.collection('users').doc(firebase.auth().currentUser.uid).get().then((snap)=>{\r\n     setdata({data:snap.data(),id:snap.id}) \r\n\r\n      }).then(()=>{\r\n        availuser=true;\r\n      })\r\n    }\r\n  })\r\n},[])\r\n\r\nreturn {postdata}\r\n}\r\n\r\n\r\n\r\n\r\n\r\nconst db=firebase.firestore();\r\nconst storage = firebase.storage();\r\nconst Profile=()=> {\r\n  const{postdata}= useTimes()\r\n let profile=[];\r\n let uid;\r\n if(postdata){profile=postdata.data;console.log(profile);uid=postdata.id}\r\n else console.log(\"kjdflk\")\r\n\r\n function userlogout(){\r\n  firebase.auth().signOut().then(function() {\r\n    alert(\"logout successfully\")\r\n    window.location.reload();\r\n  })\r\n\r\n}\r\n\r\nfunction editpro(e){\r\n  e.preventDefault()\r\n  db.collection('users').doc(firebase.auth().currentUser.uid).update({\r\n    name:document.getElementById('name').value,\r\n    email:document.getElementById('email').value,\r\n    pic:document.getElementById('editpic').src,\r\n    altnum:document.getElementById('altnum').value\r\n  }).then(()=>{\r\n    alert(\"details updated...\")\r\n    window.location.reload();\r\n  })\r\n}\r\n\r\nfunction upldimg(e){\r\n // alert(\"upload\")\r\n var file=e.target.files[0];\r\n//var file=document.getElementById('fileid').files[0];\r\n console.log(\"fileis\",file.name)\r\nvar uploaderb=document.querySelector('#uploaderb');\r\nuploaderb.style.display=\"block\";\r\n// crate storage ref\r\nvar storageref=storage.ref(`users/uid/profile/` + file.name);\r\n\r\n  //upload file\r\nvar task=storageref.put(file);\r\n\r\n   //update progress bar\r\ntask.on('state_changed',\r\nfunction progress(snapshot){\r\n var percentage=(snapshot.bytesTransferred / snapshot.totalBytes)*100;\r\n  uploaderb.value=percentage;\r\n\r\n},\r\n function error(err){\r\n console.log(err)\r\n},\r\nfunction complete(){\r\nconsole.log(\"adhar back uploaded successfully \")\r\ntask.snapshot.ref.getDownloadURL().then(function(downloadURL) {\r\n console.log('File available at', downloadURL);\r\n document.getElementById('editpic').setAttribute('src',downloadURL)\r\n uploaderb.style.display=\"none\";\r\n});\r\n})\r\n   }\r\n\r\n  return (\r\n    <div>\r\n      <div>\r\n        <div className=\"editpro\">\r\n        <Form onSubmit={editpro}>\r\n  <Form.Group controlId=\"formBasicEmail\">\r\n    <p className=\"close\" onClick={(e)=>document.querySelector('.editpro').style.display=\"none\"}>X</p>\r\n    <Form.Label htmlFor=\"inlineFormInputGroupUsername2\" srOnly>\r\n    Username\r\n  </Form.Label>\r\n  <InputGroup className=\"mb-2 mr-sm-2\">\r\n    <InputGroup.Prepend>\r\n      <InputGroup.Text>@</InputGroup.Text>\r\n    </InputGroup.Prepend>\r\n    <FormControl id=\"name\" placeholder=\"Enter your name\" required/>\r\n  </InputGroup>\r\n  </Form.Group>\r\n\r\n  <Form.Group controlId=\"formBasicPassword\">\r\n  <InputGroup className=\"mb-2 mr-sm-2\">\r\n    <InputGroup.Prepend>\r\n      <InputGroup.Text>@</InputGroup.Text>\r\n    </InputGroup.Prepend>\r\n    <FormControl id=\"email\" placeholder=\"Enter your email \" />\r\n  </InputGroup>\r\n  </Form.Group>\r\n\r\n\r\n  <Form.Group controlId=\"formBasicPassword\">\r\n  <InputGroup className=\"mb-2 mr-sm-2\">\r\n    <InputGroup.Prepend>\r\n      <InputGroup.Text>@</InputGroup.Text>\r\n    </InputGroup.Prepend>\r\n    <FormControl id=\"altnum\" placeholder=\"Enter your alternative phone number\" />\r\n  </InputGroup>\r\n  </Form.Group>\r\n\r\n\r\n  <InputGroup className=\"mb-2 mr-sm-2\">\r\n  <input id='fileid' type='file' onChange={upldimg} hidden/>\r\n    <img className=\"post-img\" id=\"editpic\" itemType=\"file\" onClick={uploadpic} src='' alt=''/>\r\n    <progress value=\"0\" max=\"100\" id=\"uploaderb\">0%</progress>\r\n  </InputGroup>\r\n\r\n\r\n\r\n  <Button variant=\"primary\" type=\"submit\">\r\n    Submit\r\n  </Button>\r\n</Form>\r\n        </div>\r\n        <div id={uid}>\r\n        <img className=\"post-img\" src={profile.pic} alt=\"\" />\r\n     <h1>name:{profile.name}</h1>\r\n     <h3>phone number: {profile.phone}</h3>\r\n     <h4>alternative number:{profile.altnum}</h4>\r\n     <h5>email:{profile.email}</h5>\r\n     <Button variant=\"outline-primary\" size=\"sm\" onClick={editdet}>edit profile</Button>\r\n     </div>\r\n\r\n      <Button variant=\"outline-dark\"onClick={userlogout} size=\"sm\">Logout</Button>\r\n     </div>\r\n     <Button variant=\"outline-danger\" size=\"sm\" onClick={delmyac}>Delete my account</Button>\r\n    </div>\r\n  )\r\n  function delmyac(){\r\n    var r = window.confirm(\"you can't recover to do this all data about you deleted\");\r\n    if (r == true) {\r\n      db.collection('users').doc(firebase.auth().currentUser.uid).delete()\r\n      .then(()=>\r\n      {\r\n        firebase.auth().signOut().then(function() {\r\n          window.location.href = 'http://localhost:3000/';\r\n        })\r\n        \r\n      })\r\n    }\r\n  }\r\n  function uploadpic(e){\r\n    e.preventDefault()\r\n    document.getElementById('fileid').click();\r\n  }\r\n\r\n  function editdet(e){\r\n    document.querySelector('.editpro').style.display=\"block\"\r\n    document.getElementById('name').value=profile.name;\r\n    document.getElementById('email').value=profile.email;\r\n    document.getElementById('altnum').value=profile.altnum;\r\n    document.getElementById('editpic').src=profile.pic;\r\n  }\r\n}\r\n\r\n\r\n\r\n\r\n\r\nexport default Profile","J:\\spotmies\\website\\firstapp\\src\\components\\product.js",[],"J:\\spotmies\\website\\firstapp\\src\\components\\productlist.js",[],"J:\\spotmies\\website\\firstapp\\src\\components\\chat.js",["80","81","82","83","84"],"J:\\spotmies\\website\\firstapp\\src\\components\\signup.js",["85","86","87","88","89","90"],"import React, { Component } from 'react';\r\nimport { Link } from \"react-router-dom\";\r\nimport { Button,NavDropdown,Navbar,Nav,Modal,Form,Card } from 'react-bootstrap';\r\nimport firebase from '../firebase';\r\nimport { createHashHistory } from \"history\";\r\nimport '../index.css';\r\nconst db=firebase.firestore();\r\nvar usrno;\r\nconst history = createHashHistory();\r\n\r\nexport default class signup extends Component {\r\n    render() {\r\n        return (\r\n            <div className=\"signupform\">\r\n                <Form>\r\n            <Form.Group controlId=\"formBasicEmail\">\r\n                <Form.Label style={{marginTop: \"120px\"}}>Enter your Mobile number</Form.Label>\r\n                <Form.Control type=\"phone\" placeholder=\"phone number\" id=\"phno\" required />\r\n               \r\n            </Form.Group>\r\n            <Button variant=\"outline-info\" type=\"button\" onClick={genotp}>Get Otp</Button>\r\n            <div id=\"recaptcha-container\"></div>\r\n            <Form.Group controlId=\"formBasicPassword\">\r\n                <Form.Label>Enter otp here</Form.Label>\r\n                <Form.Control type=\"number\" placeholder=\"otp\" id=\"otp\" required/>\r\n            </Form.Group>\r\n            <Button variant=\"outline-info\" type=\"button\" onClick={vrfyotp}>Verify</Button>\r\n\r\n            <Form.Group controlId=\"username\" style={{display:\"none\"}} className=\"username\">\r\n                <Form.Label>Enter your name here</Form.Label>\r\n                <Form.Control type=\"text\" placeholder=\"sweetname here\" id=\"username\" required/>\r\n            </Form.Group>\r\n\r\n            <Button variant=\"outline-info\" type=\"button\" onClick={rgstusr} style={{display:\"none\"}} className=\"signsub\">\r\n                Submit\r\n            </Button>\r\n            </Form>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nfunction genotp(e){\r\n    window.recaptchaVerifier = new firebase.auth.RecaptchaVerifier('recaptcha-container');\r\n    const phno=\"+91\" + document.getElementById('phno').value;\r\n    console.log(phno)\r\n    firebase.auth().signInWithPhoneNumber(phno,window.recaptchaVerifier) \r\n    .then(function(confirmationResult) {\r\n      window.confirmationResult = confirmationResult;\r\n      console.log(confirmationResult);\r\n      document.querySelector('#recaptcha-container').style.display=\"none\";\r\n     \r\n  \r\n  \r\n  \r\n    }).catch(function(error){alert(error)});\r\n  }\r\n  \r\n  function vrfyotp(e){\r\n \r\n    const otp=document.getElementById('otp');\r\n    window.confirmationResult.confirm(otp.value)\r\n    .then(function(result) {\r\n     usrno=document.getElementById('phno').value;\r\n      console.log(result);\r\n      var doc = db.collection('users').doc(firebase.auth().currentUser.uid);\r\n      doc.get().then((docData) => {\r\n        if (docData.exists) {\r\n          // document exists (online/offline)\r\n          console.log(\"document exist\")\r\n          history.go(-1)\r\n        } else {\r\n          // document does not exist (only on online)\r\n          console.log(\"document not exist\")\r\n          document.querySelector('.username').style.display=\"block\";\r\n          document.querySelector(\".signsub\").style.display=\"block\";\r\n        }\r\n      }).catch((fail) => {\r\n        console.log(\"error while reading document\")\r\n      });\r\n         \r\n      }).catch((err)=>{alert(err)})\r\n      \r\n  }\r\n  \r\n  // firebase.auth().onAuthStateChanged(function(user) {\r\n  \r\n  //   if (user) {\r\n  //     console.log(\"user login\")\r\n  //   }\r\n  //   else console.log(\"user not login\")\r\n  // })\r\n  \r\n  \r\n//   function userlogout(){\r\n//     firebase.auth().signOut().then(function() {\r\n//       alert(\"logout successfully\")\r\n//     })\r\n//   }\r\n\r\nfunction rgstusr(e){\r\n    e.preventDefault();\r\n    \r\nlet name=document.getElementById('username').value;\r\nlet userid=firebase.auth().currentUser.uid;\r\nif(name){\r\n    db.collection('users').doc(userid).set({\r\n        name:name,\r\n        phone:usrno,\r\n        email:'',\r\n        pic:'https://www.sunsetlearning.com/wp-content/uploads/2019/09/User-Icon-Grey-300x300.png',\r\n        altnum:''\r\n    }).then(()=>{\r\n        // alert(\"data added\")\r\n      \r\n        window.location.href = 'http://localhost:3000/';\r\n    })\r\n}\r\n\r\nelse{\r\nalert(\"please enter your name\");\r\n}\r\n}\r\n\r\n","J:\\spotmies\\website\\firstapp\\src\\components\\postview.js",["91","92"],"import React ,{Component} from 'react'\r\nimport firebase from '../firebase';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport {Carousel } from 'react-bootstrap';\r\nimport react,{useState,useEffect} from \"react\";\r\nimport {MdDelete} from 'react-icons/md';\r\nimport {AiFillEdit} from 'react-icons/ai';\r\nimport { useHistory } from 'react-router-dom'\r\n\r\nconst db=firebase.firestore();\r\n\r\n\r\n\r\nfunction useTimes(){\r\n    const[postdata,setdata]=useState([])\r\n    const[posttime,setposttime]=useState([])\r\n  useEffect(()=>{\r\n\r\n//\r\nfirebase.auth().onAuthStateChanged(function(user) {\r\n    if(user) {\r\nlet arr=[];\r\n \r\n       var personId;\r\n    \r\n         personId=window.location.pathname;\r\n         personId=personId.replace('/mybookings/id/','');\r\n         console.log(personId)\r\n         db.collection('users').doc(firebase.auth().currentUser.uid).collection('adpost').doc(personId).get().then(snap=>{\r\n             setdata(snap.data())\r\n            arr.push((String(snap.data().posttime.toDate())).replace('GMT+0530 (India Standard Time)',''));\r\n            arr.push((String(snap.data().schedule.toDate())).replace('GMT+0530 (India Standard Time)',''));\r\n            setposttime(arr)\r\n         })\r\n       \r\n    }})\r\n//\r\n\r\n\r\n  },[])\r\n  return {postdata,posttime}\r\n  }\r\n\r\n\r\n\r\n\r\nconst Navbar3=()=>{\r\n  const history = useHistory();\r\n    const {postdata,posttime}=useTimes()\r\n\r\n    var media=[];\r\n  if(postdata.media){\r\n    media=postdata.media;\r\n  console.log(\"times avail\")\r\n   \r\n  }\r\n  else console.log(\"time not\")\r\n  const click =(prop)=>{\r\n  \r\n    console.log(\"click\",prop)\r\n    history.push(`edit/${prop}`)\r\n  }\r\n  const delpost=(pro)=>{\r\n    db.collection('users').doc(firebase.auth().currentUser.uid).collection('adpost').doc(pro).delete()\r\n    .then(()=>{\r\n      alert(\"ad deleted succefully\")\r\n    })\r\n  }\r\n  \r\nreturn<div>\r\n  <div style={{height:\"300px\",width:\"100%\"}}>\r\n   <Carousel>\r\n {media.map((nap)=>\r\n   <Carousel.Item>     \r\n      <video src={nap} poster={nap} width=\"100%\" \r\n           height=\"350\" autoPlay loop/>\r\n     <Carousel.Caption>\r\n     </Carousel.Caption>\r\n   </Carousel.Item>\r\n\r\n )\r\n\r\n}\r\n</Carousel>\r\n<div>\r\n  <p>Title:{postdata.problem}</p>\r\n  <p> location: {postdata.location}</p>\r\n  <p> Description: {postdata.description}</p>\r\n  <p>Category: {postdata.job}</p>\r\n  <p>Price: {postdata.price}</p>\r\n  <p>time of post: {posttime[0]}</p>\r\n  <p>service start at: {posttime[1]}</p>\r\n  <p>views: {postdata.views}</p>\r\n  <AiFillEdit color=\"gray\" onClick={(e)=>click(postdata.orderid)}/>\r\n  <MdDelete color=\"red\" onClick={(e)=>delpost(postdata.orderid)}/>\r\n \r\n</div>\r\n</div>\r\n</div>  \r\n}\r\n\r\nexport default Navbar3","J:\\spotmies\\website\\firstapp\\src\\components\\mybooks.js",["93","94"],"import React, { Component } from 'react';\r\nimport firebase from '../firebase';\r\nimport react,{useState,useEffect} from \"react\";\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport {Card } from 'react-bootstrap';\r\nimport '../index.css';\r\nimport { useHistory } from 'react-router-dom'\r\n\r\n//import icons\r\nimport {BsEyeFill} from 'react-icons/bs';\r\nimport {BiTimeFive} from 'react-icons/bi';\r\nimport {RiPinDistanceFill} from 'react-icons/ri'\r\nimport {HiOutlineCurrencyRupee} from 'react-icons/hi'\r\nimport {MdDelete} from 'react-icons/md';\r\nimport {AiFillEdit} from 'react-icons/ai';\r\n\r\nconst db=firebase.firestore();\r\n\r\nfunction useTimes(){\r\n  const[times,setTimes]=useState([])\r\nuseEffect(()=>{\r\n  firebase.auth().onAuthStateChanged(function(user) {\r\n    if(user) {\r\n      db.collection('users').doc(firebase.auth().currentUser.uid).collection('adpost').onSnapshot((snap)=>{\r\n        const newtimes=snap.docs.map((doc)=>({\r\n          id:doc.id,\r\n          ...doc.data()\r\n        }))\r\n        setTimes(newtimes)\r\n      })\r\n    }\r\n  })\r\n},[])\r\nreturn times\r\n}\r\nconst Sekhar=()=> {\r\n\r\nconst times=useTimes()\r\n// console.log(times[0].media)\r\n        return(\r\n         \r\n        <div className=\"responses\">\r\n               \r\n                <Mybookings data={times}/>\r\n                </div> \r\n        )\r\n}\r\n\r\nexport default Sekhar;\r\n\r\n\r\nfunction Mybookings(props) {\r\n  const history = useHistory();\r\n\r\nconst click =(prop)=>{\r\n  console.log(\"click\",prop)\r\n  history.push(`mybookings/id/${prop}`)\r\n}\r\n\r\nconst edit =(prop)=>{\r\n  \r\n  console.log(\"click\",prop)\r\n  history.push(`mybookings/id/edit/${prop}`)\r\n}\r\nconst delpost=(pro)=>{\r\n  db.collection('users').doc(firebase.auth().currentUser.uid).collection('adpost').doc(pro).delete()\r\n  .then(()=>{\r\n    alert(\"ad deleted succefully\")\r\n  })\r\n}\r\n      return <div>\r\n        \r\n{\r\n  props.data.map((cap)=>\r\n<div id={cap.id} style={{marginLeft:\"22%\"}}>\r\n  \r\n  <Card \r\n  bg=\"primary\"\r\n  key=\"2\"\r\n  text=\"black\"\r\n  style={{ width: '48rem',borderRadius: '1rem' }}\r\n  className=\"mb-2 \"\r\n>\r\n\r\n <Card.Header >{cap.problem}</Card.Header>\r\n  <Card.Body className=\"card-body\">\r\n    <Card.Title>\r\n    <img className=\"post-img\" src={cap.media[0]} alt=\"\" />\r\n   <h3 className=\"post-title\"  value=\"sekhar\">{cap.problem}</h3> \r\n   <h4 onClick={(e)=>click(cap.id)}>view post</h4>\r\n   <div className=\"details-post\">\r\n   <p><BsEyeFill /> Views: {cap.views}</p>\r\n   <p><RiPinDistanceFill /> Distance: 105</p>\r\n   <p><HiOutlineCurrencyRupee /> Money: {cap.price}</p>\r\n   <p><BiTimeFive /> Time: 1hr</p>\r\n   <p onClick={(e)=>edit(cap.orderid)}><AiFillEdit />edit</p>\r\n   <p onClick={(e)=>delpost(cap.orderid)}><MdDelete />delete</p>\r\n   </div>\r\n    </Card.Title>\r\n  </Card.Body>\r\n</Card>\r\n</div>\r\n  )}\r\n      </div>\r\n      \r\n \r\n \r\n  }\r\n\r\n\r\n \r\nfirebase.auth().onAuthStateChanged(function(user) {\r\n  if(user) {\r\n\r\n  }\r\n})","J:\\spotmies\\website\\firstapp\\src\\components\\navbar.js",["95","96","97","98","99","100","101","102","103","104","105","106","107","108"],"import react,{useState,useEffect} from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport { Button,NavDropdown,Navbar,Nav,Modal,Form,Card } from 'react-bootstrap';\r\nimport '../navbar.css';\r\nimport logo from '../logo.svg';\r\nimport firebase from '../firebase'\r\n\r\n\r\n// get our fontawesome imports\r\n// import { faHome } from \"@fortawesome/free-solid-svg-icons\";\r\n// import { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\n\r\n//react icons\r\nimport {IconContext} from 'react-icons';\r\nimport { MdAccountCircle,MdChat,MdSettings} from 'react-icons/md';\r\nimport {BsReverseLayoutTextSidebarReverse,BsChatFill,BsFillBriefcaseFill,BsChatDotsFill,BsEyeFill} from 'react-icons/bs';\r\nimport {BiLogOutCircle,BiTimeFive} from 'react-icons/bi';\r\nimport {RiPinDistanceFill} from 'react-icons/ri'\r\nimport {HiOutlineCurrencyRupee} from 'react-icons/hi';\r\n\r\nfirebase.auth().onAuthStateChanged(function(user) {\r\n\r\n\r\n\r\n  if (user) {\r\n    console.log(\"user login\")\r\n    // document.querySelector('.userhere').innerHTML=\"\"\r\n    username=\"sekhar\"\r\n    document.querySelector('.userhere').style.display=\"block\";\r\n    document.querySelector('.account-icon').style.display=\"block\"\r\n    document.querySelector(\"#mychats\").style.display=\"block\"\r\n    document.querySelector(\"#mybooks\").style.display=\"block\"\r\n    document.getElementById('signup').style.display=\"none\";\r\n  }\r\n  else{ console.log(\"user not login\")\r\n  document.querySelector('.userhere').style.display=\"none\";\r\n  document.querySelector('.account-icon').style.display=\"none\";\r\n  document.querySelector(\"#mychats\").style.display=\"none\"\r\n  document.querySelector(\"#mybooks\").style.display=\"none\"\r\n\r\n  document.getElementById('signup').style.display=\"block\";\r\n}\r\n})\r\n\r\nconst db=firebase.firestore();\r\nvar username=\"username\";\r\nfunction Navibar(){\r\n   const[name,setName]=useState(\"undefined\")\r\n   firebase.auth().onAuthStateChanged(function(user) {\r\n     if(user){\r\n      \r\n      db.collection('users').doc(firebase.auth().currentUser.uid).get().then(snap=>{\r\n        if(!snap.data())setName(\"demouser\")\r\n        else setName(snap.data().name)\r\n        // setName(snap.data().name)\r\n      })\r\n     }\r\n   })\r\n    return <header style={{paddingBottom:\"80px\"}}>    \r\n    <Navbar collapseOnSelect expand=\"lg\"  variant=\"dark\" className=\"navi-bar\" >\r\n      <IconContext.Provider value={{ size:\"1.5em\",className:\"nav-icons\"}}>\r\n        <Link to=\"/\">\r\n    <Navbar.Brand className=\"title\">Spotmies</Navbar.Brand></Link>\r\n    <Navbar.Toggle aria-controls=\"responsive-navbar-nav\" />\r\n    <Navbar.Collapse id=\"responsive-navbar-nav\">\r\n      <Nav className=\"mr-auto\">\r\n\r\n      </Nav>\r\n      <Nav>\r\n      \r\n      <Link to=\"/mybookings\"><Nav  className=\"chaticon\" id=\"mybooks\"><BsFillBriefcaseFill  className=\"chaticon2\" size=\"1.2em\"/> My Bookings</Nav></Link>\r\n      <Link to=\"/chat\"><Nav  className=\"chaticon\" id=\"mychats\"><MdChat className=\"chaticon2\" size=\"1.3em\"/>  Chat</Nav></Link>\r\n     \r\n      <MdAccountCircle className=\"account-icon\"/>\r\n      <NavDropdown title={name} id=\"collasible-nav-dropdown\" className=\"userhere\">\r\n      <Link to=\"/account\"><NavDropdown.Item href=\"#action/3\"><MdAccountCircle  color=\"gray\" size=\"1.4em\" />   Account</NavDropdown.Item></Link>\r\n      <Link to=\"/mybookings\"><NavDropdown.Item href=\"#action/3.1\" ><BsFillBriefcaseFill color=\"gray\" size=\"1.1em\"/>   My Bookings</NavDropdown.Item></Link>\r\n          <Link to=\"/chat\"><NavDropdown.Item href=\"#action/3.2\" ><BsChatFill color=\"gray\" size=\"1.1em\"/>Chats</NavDropdown.Item></Link>\r\n          <Link to=\"/settings\"><NavDropdown.Item href=\"#action/3.3\" ><MdSettings  color=\"gray\" size=\"1.1em\"/>   Settings</NavDropdown.Item></Link>\r\n          <NavDropdown.Divider />\r\n          <NavDropdown.Item onClick={userlogout}><BiLogOutCircle color=\"gray\" size=\"1.1em\" /> Logout</NavDropdown.Item>\r\n        </NavDropdown>\r\n   \r\n\r\n\r\n        <Link to=\"/signup\"><Nav className=\"chaticon\" id=\"signup\"> <MdAccountCircle /> Signup/Login</Nav></Link>\r\n\r\n      </Nav>\r\n    </Navbar.Collapse> \r\n\r\n      </IconContext.Provider>\r\n  </Navbar>\r\n  </header>\r\n  // <div className=\"spacediv\">\r\n    \r\n  // </div>\r\n}\r\nexport default Navibar;\r\n\r\nfunction userlogout(){\r\n  firebase.auth().signOut().then(function() {\r\n    alert(\"logout successfully\")\r\n    window.location.reload();\r\n  })\r\n\r\n}","J:\\spotmies\\website\\firstapp\\src\\components\\slide1.js",["109","110","111","112","113","114","115","116","117","118"],"import '../App.css';\r\nimport repair from '../images/repair.svg';\r\nimport { Link } from \"react-router-dom\";\r\nimport React,{useState} from 'react';\r\nimport {Dropdown,DropdownButton,Modal,Button,InputGroup,Form,FormControl,ProgressBar} from 'react-bootstrap';\r\nimport {BiRupee} from 'react-icons/bi';\r\nimport {BsTools} from 'react-icons/bs';\r\nimport firebase from '../firebase'\r\n\r\nvar newpost=\"/signup\"\r\nfirebase.auth().onAuthStateChanged(function(user) {\r\n\r\n  if (user) {\r\n newpost=\"/newpost\"\r\n console.log(\"user exists\")\r\n  }\r\n  else{ \r\n  newpost=\"/signup\"\r\n  console.log(\"user didn't exixst\")\r\n}\r\n})\r\n\r\n\r\nfunction Slide(){\r\n  let location=\"seethamadahar\";\r\n  const db=firebase.firestore();\r\n  const [modalShow, setModalShow] = React.useState(false);\r\n  db.collection('users').get().then(snap=>{\r\n    snap.forEach(nap => {\r\n      console.log(nap.id)\r\n    });\r\n  })\r\n    return <div className=\"slide1\" >\r\n        <img  src={repair} alt=\"logo\" width=\"900\" height=\"500\"/>\r\n     <div className=\"areabg\">   \r\n    <DropdownButton\r\n    className=\"getlocation\"\r\n      variant=\"outline-primary\"\r\n      title=\"Select your location                  \"\r\n      id=\"input-group-dropdown-2\"\r\n    >\r\n      \r\n      <Dropdown.Item onClick={() => setModalShow(true)}><Link to={`${newpost}`}>{location}</Link></Dropdown.Item>\r\n      \r\n    </DropdownButton>\r\n    {/* <MyVerticallyCenteredModal\r\n        show={modalShow}\r\n        onHide={() => setModalShow(false)}\r\n      /> */}\r\n      <div>\r\n        <h1>this is heading</h1>\r\n      </div>\r\n    </div>\r\n    </div>\r\n    \r\n}\r\n\r\nexport default Slide;\r\n\r\n\r\n\r\n","J:\\spotmies\\website\\firstapp\\src\\components\\editpost.js",["119","120","121","122","123","124","125","126"],"import React from 'react'\r\nimport react,{useState,useEffect} from \"react\";\r\nimport firebase from '../firebase';\r\nimport '../App.css';\r\nimport {Button,InputGroup,Form,FormControl} from 'react-bootstrap';\r\nimport {BiRupee} from 'react-icons/bi';\r\nimport {BsTools,BsCalendar} from 'react-icons/bs';\r\n\r\nimport DatePicker from 'react-datepicker';\r\n \r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\nconst db=firebase.firestore();\r\nconst storage = firebase.storage();\r\nvar imgarr=[];\r\n\r\nfunction useTimes(){\r\n    const[postdata,setdata]=useState([])\r\n    const[posttime,setposttime]=useState([])\r\n  useEffect(()=>{\r\n//\r\nfirebase.auth().onAuthStateChanged(function(user) {\r\n    if(user) {\r\nlet arr=[];\r\n avoid=0;\r\n avoid2=0;\r\n       var personId;\r\n        // fetch(`http://localhost:3000/mybookings/id/`, {})\r\n        // .then((res) =>{ res.json()})\r\n        // .then((response) => {\r\n        \r\n         // console.log(`http://localhost:3000/mybookings/id/${personId}`);\r\n         personId=window.location.pathname;\r\n         personId=personId.replace('/mybookings/id/edit/','');\r\n         console.log(personId)\r\n         db.collection('users').doc(firebase.auth().currentUser.uid).collection('adpost').doc(personId).get().then(snap=>{\r\n             console.log(snap.data().posttime.toDate())\r\n             setdata(snap.data())\r\n            arr.push(String(snap.data().posttime.toDate()));\r\n            arr.push((snap.data().schedule.toDate()));\r\n            setposttime(arr)\r\n            document.querySelector('#nameofserv').value=snap.data().problem;\r\n            document.querySelector('.desc').value=snap.data().description;\r\n            document.querySelector('.cate').value=snap.data().job;\r\n            document.querySelector('.price').value=snap.data().price;\r\n         }).then(()=>{\r\n\r\n\r\n         })\r\n    \r\n    }})\r\n//\r\n\r\n\r\n  },[])\r\n  return {postdata,posttime}\r\n  }\r\n\r\n\r\n  let avoid=0;\r\n  let avoid2=0;\r\nconst Editpost=()=>{\r\n    const {postdata,posttime}=useTimes()\r\n    const [startDate, setState] = useState('')\r\n    console.log(postdata)\r\n  \r\nif(posttime[1] && avoid2==0){\r\n  console.log(posttime[1])\r\n  setState(posttime[1])\r\n  avoid2=1;\r\n}\r\n\r\n\r\n    function prevmed(){\r\n    if(postdata.media && avoid==0){\r\nimgarr=postdata.media;\r\nconst gallery=document.querySelector('.gallery')\r\nimgarr.map((nap)=>{\r\n\r\n  \r\n\r\n\r\n     var div=document.createElement('div')\r\n     var html = document.createElement(\"IMG\");\r\n     var btn = document.createElement('p');\r\n      html.setAttribute('src',nap);\r\n      html.setAttribute('class',\"items\");\r\n      div.setAttribute('id',`i${nap}`)\r\n      btn.setAttribute('class','close')\r\n      btn.setAttribute('id',nap)\r\n      btn.innerHTML = \"x\";\r\n      btn.onclick = function(){\r\n        let imgid=btn.getAttribute('id')\r\n      //  alert(`del id is ${imgid}`);\r\n      console.log(imgarr)\r\n        imgarr = imgarr.filter(e => e !== imgid);\r\n        console.log(imgarr)\r\n        document.getElementById(`i${imgid}`).remove()\r\n      };\r\n    \r\n    div.append(html)\r\n    div.appendChild(btn) \r\n    gallery.append(div)\r\n}\r\n)\r\navoid=1;\r\n }\r\n}\r\nprevmed();\r\n\r\n   function handleChange(date) {\r\nsetState(date)\r\nconsole.log(date)\r\n      } \r\n\r\n    const  handleSubmit=(event)=> {\r\n        event.preventDefault();\r\n        let schedule=startDate\r\n        let name=document.querySelector('#nameofserv').value\r\n        let desc=document.querySelector('.desc').value\r\n        let cat=document.querySelector('.cate').value\r\n        let price=document.querySelector('.price').value\r\n        if(cat==\"true\")alert(\"please select category\")\r\n        else{\r\n          cat=parseInt(cat);\r\n          price=parseInt(price);\r\n          console.log(name,desc,cat,price,imgarr)\r\n         const newpost= db.collection('users').doc(firebase.auth().currentUser.uid).collection('adpost').doc(postdata.orderid)\r\n         var d=new Date();\r\n         console.log(d)\r\n         newpost.update({\r\n            job:cat,\r\n            problem:name,\r\n            description:desc,\r\n            price:price,\r\n            userid:firebase.auth().currentUser.uid, \r\n            orderid:postdata.orderid,\r\n            media:imgarr,\r\n            location:\"seethammadhara\",\r\n            schedule:schedule\r\n          }).then(()=>{\r\n            return db.collection('allads').doc(postdata.orderid).update({\r\n              job:cat,\r\n              problem:name,\r\n              description:desc,\r\n              price:price,\r\n              userid:firebase.auth().currentUser.uid, \r\n              orderid:postdata.orderid,\r\n              media:imgarr,\r\n              location:\"seethammadhara\",\r\n              schedule:schedule\r\n            })\r\n          }).then(()=>{\r\n            alert(\"post edited successfully\")\r\n            // history.go(-1)\r\n          })\r\n        }\r\n        \r\n      }\r\n\r\n\r\n     const upldimg=(e)=>{  \r\n        //  alert(this.state.startDate)  \r\n          for (let i = 0; i < e.target.files.length; i++) {\r\n          var file=e.target.files[i];\r\n          console.log(\"fileis\",file.name)\r\n         var uploaderb=document.querySelector('#uploaderb');\r\n         uploaderb.style.display=\"block\";\r\n         // crate storage ref\r\n        var storageref=storage.ref(`users/uid/profile/` + file.name);\r\n        \r\n           //upload file\r\n         var task=storageref.put(file);\r\n        \r\n            //update progress bar\r\n        task.on('state_changed',\r\n        function progress(snapshot){\r\n          var percentage=(snapshot.bytesTransferred / snapshot.totalBytes)*100;\r\n           uploaderb.value=percentage;\r\n        \r\n        },\r\n          function error(err){\r\n          console.log(err)\r\n        },\r\n        function complete(){\r\n        console.log(\"adhar back uploaded successfully \")\r\n        task.snapshot.ref.getDownloadURL().then(function(downloadURL) {\r\n          console.log('File available at', downloadURL);\r\n        imgarr.push(downloadURL);\r\n      \r\n        const gallery=document.querySelector('.gallery')\r\n       // const html='';\r\n       var div=document.createElement('div')\r\n         var html = document.createElement(\"IMG\");\r\n         var btn = document.createElement('p');\r\n          html.setAttribute('src',downloadURL);\r\n          html.setAttribute('class',\"items\");\r\n          div.setAttribute('id',`i${downloadURL}`)\r\n          btn.setAttribute('class','close')\r\n          btn.setAttribute('id',downloadURL)\r\n          btn.innerHTML = \"x\";\r\n          btn.onclick = function(){\r\n            let imgid=btn.getAttribute('id')\r\n          //  alert(`del id is ${imgid}`);\r\n          console.log(imgarr)\r\n            imgarr = imgarr.filter(e => e !== imgid);\r\n            console.log(imgarr)\r\n            document.getElementById(`i${imgid}`).remove()\r\n          };\r\n        \r\n        div.append(html)\r\n        div.appendChild(btn) \r\n        gallery.append(div)\r\n        uploaderb.style.display=\"none\";\r\n        });\r\n        }\r\n        );\r\n         }//\r\n         console.log(imgarr)\r\n        \r\n         }\r\n      \r\n\r\n    return  <div style={{paddingTop:\"80px\"}}>\r\n  \r\n  <div className=\"postjob\">\r\n        \r\n    <Form className=\"postjobb\"  onSubmit={handleSubmit}>\r\n   \r\n      <Form.Group controlId=\"exampleForm.ControlInput1\" >\r\n      <InputGroup className=\"mb-2\">\r\n            <InputGroup.Prepend className=\"nameofser\">\r\n              <InputGroup.Text><BsTools /></InputGroup.Text>\r\n            </InputGroup.Prepend>\r\n            <Form.Control id=\"nameofserv\" className=\"nameofser\" placeholder=\"Name of service\" required />\r\n          </InputGroup>\r\n      </Form.Group>\r\n      <Form.Group controlId=\"exampleForm.ControlSelect1\">\r\n        <Form.Label required><b>CATEGORY</b></Form.Label>\r\n        <Form.Control required as=\"select\" className=\"cate\"required>\r\n        <option disabled selected value> -- select an option -- </option>\r\n          <option>1</option>\r\n          <option>2</option>\r\n          <option>3</option>\r\n          <option>4</option>\r\n          <option>5</option>\r\n          <option>6</option>\r\n        </Form.Control>\r\n      </Form.Group>\r\n      <Form.Group controlId=\"exampleForm.ControlTextarea1\">\r\n        <Form.Label><b>DESCRIPTION</b></Form.Label>\r\n        <Form.Control as=\"textarea\" rows={3} className=\"desc\" placeholder=\"type something here\"/>\r\n      </Form.Group>\r\n      <Form.Label><b>PRICE</b></Form.Label>\r\n      <InputGroup className=\"mb-2\">\r\n            <InputGroup.Prepend>\r\n              <InputGroup.Text><BiRupee /></InputGroup.Text>\r\n            </InputGroup.Prepend>\r\n            <FormControl id=\"inlineFormInputGroup\" type=\"number\" placeholder=\"Enter price here\" className=\"price\"  required/>\r\n          </InputGroup>\r\n    \r\n        \r\n      <InputGroup className=\"mb-2\">\r\n            <InputGroup.Prepend className=\"nameofser\">\r\n              <InputGroup.Text> <BsCalendar size=\"1.3em\"/></InputGroup.Text>\r\n            </InputGroup.Prepend>\r\n            <DatePicker className=\"datepicker\"\r\n              selected={ startDate }\r\n              placeholderText=\"when you want service\"\r\n              onChange={ handleChange }\r\n              minDate={new Date()}\r\n              name=\"startDate\"\r\n              showTimeSelect\r\n              timeFormat=\"HH:mm\"\r\n              timeIntervals={60}\r\n              timeCaption=\"time\"\r\n              dateFormat=\"dd/MM/yyyy\"\r\n           required/>\r\n          </InputGroup>\r\n\r\n\r\n          <Form.Label><b>UPLOAD ANY IMAGES</b></Form.Label>\r\n          <Form.File \r\n        id=\"custom-file\"\r\n        label=\"Custom file input\"\r\n        custom\r\n        onChange={upldimg}\r\n      />\r\n      \r\n      <progress value=\"0\" max=\"100\" id=\"uploaderb\">0%</progress>\r\n      <Form.Group>\r\n        <div className=\"imgdiv\">\r\n      <div className=\"gallery\">\r\n\r\n      </div>\r\n      </div>\r\n      </Form.Group>\r\n     \r\n      <Button variant=\"outline-info\" type=\"submit\" >Save changes</Button>\r\n     \r\n    </Form>\r\n  \r\n   \r\n    </div>\r\n\r\n</div>\r\n}\r\nexport default Editpost\r\n","J:\\spotmies\\website\\firstapp\\src\\components\\newpost.js",["127","128","129","130","131","132","133","134","135"],"import '../App.css';\r\nimport React, { Component } from 'react';\r\nimport { Link } from \"react-router-dom\";\r\nimport {Dropdown,DropdownButton,Modal,Button,InputGroup,Form,FormControl,ProgressBar} from 'react-bootstrap';\r\nimport {BiRupee,BiArrowBack} from 'react-icons/bi';\r\nimport {BsTools,BsCalendar, BsCalendarFill} from 'react-icons/bs';\r\nimport firebase from '../firebase';\r\nimport 'firebase/storage';\r\nimport { createHashHistory } from \"history\";\r\n\r\n\r\n//date picker in class componets\r\nimport DatePicker from 'react-datepicker';\r\n \r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\nconst history = createHashHistory();\r\n\r\nconst db=firebase.firestore();\r\nconst storage = firebase.storage();\r\n\r\nvar imgarr=[];\r\nexport default class Postjob extends Component{\r\n\r\n\r\n\r\n  \r\n  //date picker code here\r\n\r\nconstructor (props) {\r\n  super(props)\r\n  this.state = {\r\n    startDate: \"\"\r\n  };\r\n  this.handleChange = this.handleChange.bind(this);\r\n}\r\n\r\nhandleChange(date) {\r\n  this.setState({\r\n    startDate: date\r\n  })\r\n}\r\n\r\n  handleSubmit=(event)=> {\r\n    event.preventDefault();\r\n    let schedule=this.state.startDate\r\n    let name=document.querySelector('#nameofserv').value\r\n    let desc=document.querySelector('.desc').value\r\n    let cat=document.querySelector('.cate').value\r\n    let price=document.querySelector('.price').value\r\n    if(cat==\"true\")alert(\"please select category\")\r\n    else{\r\n      cat=parseInt(cat);\r\n      price=parseInt(price);\r\n      console.log(name,desc,cat,price,imgarr)\r\n     const newpost= db.collection('users').doc(firebase.auth().currentUser.uid).collection('adpost').doc()\r\n     var d=new Date();\r\n     console.log(d)\r\n     newpost.set({\r\n        job:cat,\r\n        problem:name,\r\n        description:desc,\r\n        price:price,\r\n        userid:firebase.auth().currentUser.uid, \r\n        orderid:newpost.id,\r\n        media:imgarr,\r\n        request:\"nothing\",\r\n        posttime:d,\r\n        views:0,\r\n        location:\"seethammadhara\",\r\n        schedule:schedule\r\n      }).then(()=>{\r\n        return db.collection('allads').doc(newpost.id).set({\r\n          job:cat,\r\n          problem:name,\r\n          description:desc,\r\n          price:price,\r\n          userid:firebase.auth().currentUser.uid, \r\n          orderid:newpost.id,\r\n          media:imgarr,\r\n          request:\"nothing\",\r\n          posttime:d,\r\n          views:0,\r\n          location:\"seethammadhara\",\r\n          schedule:schedule\r\n        })\r\n      }).then(()=>{\r\n        alert(\"post added successfully\")\r\n        history.go(-1)\r\n      })\r\n    }\r\n    \r\n  }\r\n  upldimg=(e)=>{  \r\n  //  alert(this.state.startDate)  \r\n    for (let i = 0; i < e.target.files.length; i++) {\r\n    var file=e.target.files[i];\r\n    console.log(\"fileis\",file.name)\r\n   var uploaderb=document.querySelector('#uploaderb');\r\n   uploaderb.style.display=\"block\";\r\n   // crate storage ref\r\n  var storageref=storage.ref(`users/uid/profile/` + file.name);\r\n  \r\n     //upload file\r\n   var task=storageref.put(file);\r\n  \r\n      //update progress bar\r\n  task.on('state_changed',\r\n  function progress(snapshot){\r\n    var percentage=(snapshot.bytesTransferred / snapshot.totalBytes)*100;\r\n     uploaderb.value=percentage;\r\n  \r\n  },\r\n    function error(err){\r\n    console.log(err)\r\n  },\r\n  function complete(){\r\n  console.log(\"adhar back uploaded successfully \")\r\n  task.snapshot.ref.getDownloadURL().then(function(downloadURL) {\r\n    console.log('File available at', downloadURL);\r\n  imgarr.push(downloadURL);\r\n\r\n  const gallery=document.querySelector('.gallery')\r\n // const html='';\r\n  //  var html = document.createElement(\"IMG\");\r\n  //   html.setAttribute('src',downloadURL);\r\n  //   html.setAttribute('class',\"items\")\r\n\r\n  // gallery.append(html)\r\n  var div=document.createElement('div')\r\n  var html = document.createElement(\"IMG\");\r\n  var btn = document.createElement('p');\r\n   html.setAttribute('src',downloadURL);\r\n   html.setAttribute('class',\"items\");\r\n   div.setAttribute('id',`i${downloadURL}`)\r\n   btn.setAttribute('class','close')\r\n   btn.setAttribute('id',downloadURL)\r\n   btn.innerHTML = \"x\";\r\n   btn.onclick = function(){\r\n     let imgid=btn.getAttribute('id')\r\n   //  alert(`del id is ${imgid}`);\r\n   console.log(imgarr)\r\n     imgarr = imgarr.filter(e => e !== imgid);\r\n     console.log(imgarr)\r\n     document.getElementById(`i${imgid}`).remove()\r\n   };\r\n \r\n div.append(html)\r\n div.appendChild(btn) \r\n gallery.append(div)\r\n uploaderb.style.display=\"none\";\r\n  });\r\n  }\r\n  );\r\n   }\r\n   console.log(imgarr)\r\n  \r\n   }\r\n\r\n\r\n\r\n\r\n   render(){\r\n      return (\r\n          <div style={{paddingTop:\"-20px\"}}>\r\n       <Link to=\"/\" ><BiArrowBack className=\"back-arrow\" size=\"1.6em\"/></Link>\r\n    <div className=\"postjob\">\r\n        \r\n    <Form className=\"postjobb\" onSubmit={this.handleSubmit}>\r\n   \r\n      <Form.Group controlId=\"exampleForm.ControlInput1\" >\r\n      <InputGroup className=\"mb-2\">\r\n            <InputGroup.Prepend className=\"nameofser\">\r\n              <InputGroup.Text><BsTools /></InputGroup.Text>\r\n            </InputGroup.Prepend>\r\n            <Form.Control id=\"nameofserv\" className=\"nameofser\" placeholder=\"Name of service\" required/>\r\n          </InputGroup>\r\n      </Form.Group>\r\n      <Form.Group controlId=\"exampleForm.ControlSelect1\">\r\n        <Form.Label required><b>CATEGORY</b></Form.Label>\r\n        <Form.Control required as=\"select\" className=\"cate\" required>\r\n        <option disabled selected value> -- select an option -- </option>\r\n          <option>1</option>\r\n          <option>2</option>\r\n          <option>3</option>\r\n          <option>4</option>\r\n          <option>5</option>\r\n          <option>6</option>\r\n        </Form.Control>\r\n      </Form.Group>\r\n\r\n\r\n\r\n\r\n       \r\n    \r\n\r\n\r\n\r\n\r\n\r\n      <Form.Group controlId=\"exampleForm.ControlTextarea1\">\r\n        <Form.Label><b>DESCRIPTION</b></Form.Label>\r\n        <Form.Control as=\"textarea\" rows={3} className=\"desc\" placeholder=\"type something here\"/>\r\n      </Form.Group>\r\n      <Form.Label><b>PRICE</b></Form.Label>\r\n      <InputGroup className=\"mb-2\">\r\n            <InputGroup.Prepend>\r\n              <InputGroup.Text><BiRupee /></InputGroup.Text>\r\n            </InputGroup.Prepend>\r\n            <FormControl id=\"inlineFormInputGroup\" type=\"number\" placeholder=\"Enter price here\" className=\"price\" required/>\r\n          </InputGroup>\r\n    \r\n        \r\n      <InputGroup className=\"mb-2\">\r\n            <InputGroup.Prepend className=\"nameofser\">\r\n              <InputGroup.Text> <BsCalendar size=\"1.3em\"/></InputGroup.Text>\r\n            </InputGroup.Prepend>\r\n            <DatePicker className=\"datepicker\"\r\n              selected={ this.state.startDate }\r\n              placeholderText=\"when you want service\"\r\n              onChange={ this.handleChange }\r\n              minDate={new Date()}\r\n              name=\"startDate\"\r\n              showTimeSelect\r\n              timeFormat=\"HH:mm\"\r\n              timeIntervals={60}\r\n              timeCaption=\"time\"\r\n              dateFormat=\"dd/MM/yyyy\"\r\n           required/>\r\n          </InputGroup>\r\n\r\n\r\n          <Form.Label><b>UPLOAD ANY IMAGES</b></Form.Label>\r\n          <Form.File \r\n        id=\"custom-file\"\r\n        label=\"Custom file input\"\r\n        custom\r\n        onChange={this.upldimg}\r\n      />\r\n      \r\n      <progress value=\"0\" max=\"100\" id=\"uploaderb\">0%</progress>\r\n      <Form.Group>\r\n        <div className=\"imgdiv\">\r\n      \r\n      <div className=\"gallery\">\r\n        {/* <img className=\"items\" src=\"https://images.unsplash.com/photo-1529665253569-6d01c0eaf7b6?ixid=MXwxMjA3fDB8MHxzZWFyY2h8M3x8cHJvZmlsZXxlbnwwfHwwfA%3D%3D&ixlib=rb-1.2.1&w=1000&q=80\" alt=\"\" /> */}\r\n\r\n\r\n      \r\n      </div>\r\n      </div>\r\n      </Form.Group>\r\n     \r\n      <Button variant=\"outline-info\" type=\"submit\" >Get Service</Button>\r\n     \r\n    </Form>\r\n  \r\n   \r\n    </div>\r\n    </div>\r\n    \r\n      )\r\n    }\r\n    \r\n    }\r\n\r\n \r\n\r\n    ","J:\\spotmies\\website\\firstapp\\src\\firebase.js",["136"],"import firebase from 'firebase';\r\nimport firestore from 'firebase/firestore'\r\n\r\nconst settings = {timestampsInSnapshots: true};\r\nconst firebaseConfig = {\r\n    apiKey: \"AIzaSyDUAqHmXwTZU1caOWJ-LC-dBl3R7uzOkPo\",\r\n    authDomain: \"spotmiess.firebaseapp.com\",\r\n    databaseURL: \"https://spotmiess.firebaseio.com\",\r\n    projectId: \"spotmiess\",\r\n    storageBucket: \"spotmiess.appspot.com\",\r\n    messagingSenderId: \"277034750528\",\r\n    appId: \"1:277034750528:web:9ff791aa208640225b45a5\",\r\n    measurementId: \"G-CB9E1ZNL3C\"\r\n  };\r\n  firebase.initializeApp(firebaseConfig);\r\n\r\nfirebase.firestore().settings(settings);\r\n\r\nexport default firebase;\r\n\r\n// import  firebase from \"firebase\";\r\n// import \"firebase/firestore\";\r\n\r\n// let config = {\r\n//   apiKey: \"xxx\",\r\n//   authDomain: \"bezkoder-firebase.firebaseapp.com\",\r\n//   databaseURL: \"https://bezkoder-firebase.firebaseio.com\",\r\n//   projectId: \"bezkoder-firebase\",\r\n//   storageBucket: \"bezkoder-firebase.appspot.com\",\r\n//   messagingSenderId: \"xxx\",\r\n//   appId: \"xxx\",\r\n// };\r\n\r\n// firebase.initializeApp(config);\r\n\r\n// export default firebase.firestore();",{"ruleId":"137","replacedBy":"138"},{"ruleId":"139","replacedBy":"140"},{"ruleId":"141","severity":1,"message":"142","line":7,"column":8,"nodeType":"143","messageId":"144","endLine":7,"endColumn":15},{"ruleId":"141","severity":1,"message":"145","line":1,"column":17,"nodeType":"143","messageId":"144","endLine":1,"endColumn":26},{"ruleId":"141","severity":1,"message":"146","line":2,"column":8,"nodeType":"143","messageId":"144","endLine":2,"endColumn":11},{"ruleId":"141","severity":1,"message":"147","line":22,"column":9,"nodeType":"143","messageId":"144","endLine":22,"endColumn":18},{"ruleId":"148","severity":1,"message":"149","line":165,"column":11,"nodeType":"150","messageId":"151","endLine":165,"endColumn":13},{"ruleId":"141","severity":1,"message":"145","line":1,"column":17,"nodeType":"143","messageId":"144","endLine":1,"endColumn":26},{"ruleId":"141","severity":1,"message":"152","line":3,"column":8,"nodeType":"143","messageId":"144","endLine":3,"endColumn":13},{"ruleId":"141","severity":1,"message":"153","line":10,"column":9,"nodeType":"143","messageId":"144","endLine":10,"endColumn":18},{"ruleId":"141","severity":1,"message":"154","line":14,"column":9,"nodeType":"143","messageId":"144","endLine":14,"endColumn":17},{"ruleId":"141","severity":1,"message":"155","line":15,"column":9,"nodeType":"143","messageId":"144","endLine":15,"endColumn":19},{"ruleId":"141","severity":1,"message":"156","line":2,"column":10,"nodeType":"143","messageId":"144","endLine":2,"endColumn":14},{"ruleId":"141","severity":1,"message":"157","line":3,"column":17,"nodeType":"143","messageId":"144","endLine":3,"endColumn":28},{"ruleId":"141","severity":1,"message":"158","line":3,"column":29,"nodeType":"143","messageId":"144","endLine":3,"endColumn":35},{"ruleId":"141","severity":1,"message":"159","line":3,"column":36,"nodeType":"143","messageId":"144","endLine":3,"endColumn":39},{"ruleId":"141","severity":1,"message":"160","line":3,"column":40,"nodeType":"143","messageId":"144","endLine":3,"endColumn":45},{"ruleId":"141","severity":1,"message":"161","line":3,"column":51,"nodeType":"143","messageId":"144","endLine":3,"endColumn":55},{"ruleId":"141","severity":1,"message":"145","line":1,"column":16,"nodeType":"143","messageId":"144","endLine":1,"endColumn":25},{"ruleId":"141","severity":1,"message":"152","line":5,"column":8,"nodeType":"143","messageId":"144","endLine":5,"endColumn":13},{"ruleId":"141","severity":1,"message":"145","line":1,"column":17,"nodeType":"143","messageId":"144","endLine":1,"endColumn":26},{"ruleId":"141","severity":1,"message":"152","line":3,"column":8,"nodeType":"143","messageId":"144","endLine":3,"endColumn":13},{"ruleId":"141","severity":1,"message":"152","line":1,"column":8,"nodeType":"143","messageId":"144","endLine":1,"endColumn":13},{"ruleId":"141","severity":1,"message":"162","line":1,"column":24,"nodeType":"143","messageId":"144","endLine":1,"endColumn":33},{"ruleId":"141","severity":1,"message":"163","line":4,"column":10,"nodeType":"143","messageId":"144","endLine":4,"endColumn":16},{"ruleId":"141","severity":1,"message":"160","line":4,"column":40,"nodeType":"143","messageId":"144","endLine":4,"endColumn":45},{"ruleId":"141","severity":1,"message":"164","line":4,"column":46,"nodeType":"143","messageId":"144","endLine":4,"endColumn":50},{"ruleId":"141","severity":1,"message":"161","line":4,"column":51,"nodeType":"143","messageId":"144","endLine":4,"endColumn":55},{"ruleId":"141","severity":1,"message":"165","line":6,"column":8,"nodeType":"143","messageId":"144","endLine":6,"endColumn":12},{"ruleId":"141","severity":1,"message":"166","line":17,"column":9,"nodeType":"143","messageId":"144","endLine":17,"endColumn":42},{"ruleId":"141","severity":1,"message":"167","line":17,"column":74,"nodeType":"143","messageId":"144","endLine":17,"endColumn":88},{"ruleId":"141","severity":1,"message":"153","line":17,"column":89,"nodeType":"143","messageId":"144","endLine":17,"endColumn":98},{"ruleId":"141","severity":1,"message":"168","line":18,"column":24,"nodeType":"143","messageId":"144","endLine":18,"endColumn":34},{"ruleId":"141","severity":1,"message":"169","line":19,"column":9,"nodeType":"143","messageId":"144","endLine":19,"endColumn":26},{"ruleId":"141","severity":1,"message":"170","line":20,"column":9,"nodeType":"143","messageId":"144","endLine":20,"endColumn":31},{"ruleId":"141","severity":1,"message":"171","line":47,"column":5,"nodeType":"143","messageId":"144","endLine":47,"endColumn":13},{"ruleId":"141","severity":1,"message":"172","line":4,"column":15,"nodeType":"143","messageId":"144","endLine":4,"endColumn":23},{"ruleId":"141","severity":1,"message":"160","line":5,"column":33,"nodeType":"143","messageId":"144","endLine":5,"endColumn":38},{"ruleId":"141","severity":1,"message":"163","line":5,"column":39,"nodeType":"143","messageId":"144","endLine":5,"endColumn":45},{"ruleId":"141","severity":1,"message":"173","line":5,"column":46,"nodeType":"143","messageId":"144","endLine":5,"endColumn":56},{"ruleId":"141","severity":1,"message":"164","line":5,"column":57,"nodeType":"143","messageId":"144","endLine":5,"endColumn":61},{"ruleId":"141","severity":1,"message":"174","line":5,"column":62,"nodeType":"143","messageId":"144","endLine":5,"endColumn":73},{"ruleId":"141","severity":1,"message":"175","line":5,"column":74,"nodeType":"143","messageId":"144","endLine":5,"endColumn":85},{"ruleId":"141","severity":1,"message":"176","line":6,"column":9,"nodeType":"143","messageId":"144","endLine":6,"endColumn":16},{"ruleId":"141","severity":1,"message":"177","line":7,"column":9,"nodeType":"143","messageId":"144","endLine":7,"endColumn":16},{"ruleId":"141","severity":1,"message":"178","line":27,"column":10,"nodeType":"143","messageId":"144","endLine":27,"endColumn":19},{"ruleId":"141","severity":1,"message":"152","line":2,"column":8,"nodeType":"143","messageId":"144","endLine":2,"endColumn":13},{"ruleId":"148","severity":1,"message":"149","line":68,"column":25,"nodeType":"150","messageId":"151","endLine":68,"endColumn":27},{"ruleId":"148","severity":1,"message":"149","line":76,"column":31,"nodeType":"150","messageId":"151","endLine":76,"endColumn":33},{"ruleId":"179","severity":1,"message":"180","line":79,"column":17,"nodeType":"181","messageId":"182","endLine":79,"endColumn":19},{"ruleId":"148","severity":1,"message":"149","line":124,"column":15,"nodeType":"150","messageId":"151","endLine":124,"endColumn":17},{"ruleId":"183","severity":1,"message":"184","line":178,"column":9,"nodeType":"185","messageId":"186","endLine":182,"endColumn":10},{"ruleId":"183","severity":1,"message":"187","line":186,"column":9,"nodeType":"185","messageId":"186","endLine":217,"endColumn":10},{"ruleId":"188","severity":1,"message":"189","line":241,"column":60,"nodeType":"190","endLine":241,"endColumn":68},{"ruleId":"141","severity":1,"message":"191","line":4,"column":9,"nodeType":"143","messageId":"144","endLine":4,"endColumn":17},{"ruleId":"141","severity":1,"message":"192","line":4,"column":18,"nodeType":"143","messageId":"144","endLine":4,"endColumn":32},{"ruleId":"141","severity":1,"message":"160","line":4,"column":33,"nodeType":"143","messageId":"144","endLine":4,"endColumn":38},{"ruleId":"141","severity":1,"message":"175","line":4,"column":74,"nodeType":"143","messageId":"144","endLine":4,"endColumn":85},{"ruleId":"141","severity":1,"message":"193","line":6,"column":29,"nodeType":"143","messageId":"144","endLine":6,"endColumn":43},{"ruleId":"148","severity":1,"message":"149","line":52,"column":11,"nodeType":"150","messageId":"151","endLine":52,"endColumn":13},{"ruleId":"183","severity":1,"message":"184","line":110,"column":3,"nodeType":"185","messageId":"186","endLine":114,"endColumn":4},{"ruleId":"183","severity":1,"message":"187","line":118,"column":3,"nodeType":"185","messageId":"186","endLine":154,"endColumn":4},{"ruleId":"188","severity":1,"message":"189","line":182,"column":61,"nodeType":"190","endLine":182,"endColumn":69},{"ruleId":"141","severity":1,"message":"194","line":2,"column":8,"nodeType":"143","messageId":"144","endLine":2,"endColumn":17},"no-native-reassign",["195"],"no-negated-in-lhs",["196"],"no-unused-vars","'Product' is defined but never used.","Identifier","unusedVar","'Component' is defined but never used.","'pic' is defined but never used.","'availuser' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'react' is defined but never used.","'BsEyeFill' is defined but never used.","'MdDelete' is defined but never used.","'AiFillEdit' is defined but never used.","'Link' is defined but never used.","'NavDropdown' is defined but never used.","'Navbar' is defined but never used.","'Nav' is defined but never used.","'Modal' is defined but never used.","'Card' is defined but never used.","'useEffect' is defined but never used.","'Button' is defined but never used.","'Form' is defined but never used.","'logo' is defined but never used.","'BsReverseLayoutTextSidebarReverse' is defined but never used.","'BsChatDotsFill' is defined but never used.","'BiTimeFive' is defined but never used.","'RiPinDistanceFill' is defined but never used.","'HiOutlineCurrencyRupee' is defined but never used.","'username' is assigned a value but never used.","'useState' is defined but never used.","'InputGroup' is defined but never used.","'FormControl' is defined but never used.","'ProgressBar' is defined but never used.","'BiRupee' is defined but never used.","'BsTools' is defined but never used.","'modalShow' is assigned a value but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","no-loop-func","Function declared in a loop contains unsafe references to variable(s) 'uploaderb'.","FunctionExpression","unsafeRefs","Function declared in a loop contains unsafe references to variable(s) 'task', 'imgarr', 'imgarr', 'imgarr', 'imgarr', 'imgarr', 'uploaderb'.","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","'Dropdown' is defined but never used.","'DropdownButton' is defined but never used.","'BsCalendarFill' is defined but never used.","'firestore' is defined but never used.","no-global-assign","no-unsafe-negation"]