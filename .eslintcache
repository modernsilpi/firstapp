[{"D:\\spotmies\\web\\firstapp\\src\\index.js":"1","D:\\spotmies\\web\\firstapp\\src\\reportWebVitals.js":"2","D:\\spotmies\\web\\firstapp\\src\\App.js":"3","D:\\spotmies\\web\\firstapp\\src\\scrolltotop.js":"4","D:\\spotmies\\web\\firstapp\\src\\firebase.js":"5","D:\\spotmies\\web\\firstapp\\src\\helpers\\usertext.js":"6","D:\\spotmies\\web\\firstapp\\src\\helpers\\partnerText.js":"7","D:\\spotmies\\web\\firstapp\\src\\helpers\\txtRotate.js":"8","D:\\spotmies\\web\\firstapp\\src\\helpers\\categories.js":"9","D:\\spotmies\\web\\firstapp\\src\\mservices\\contactUs.js":"10","D:\\spotmies\\web\\firstapp\\src\\helpers\\dateconv.js":"11","D:\\spotmies\\web\\firstapp\\src\\mservices\\userDB.js":"12","D:\\spotmies\\web\\firstapp\\src\\components\\reusable\\Modal.jsx":"13","D:\\spotmies\\web\\firstapp\\src\\helpers\\msgdot.js":"14","D:\\spotmies\\web\\firstapp\\src\\mservices\\upldmedia.js":"15","D:\\spotmies\\web\\firstapp\\src\\helpers\\constants.js":"16","D:\\spotmies\\web\\firstapp\\src\\mservices\\add_header.js":"17","D:\\spotmies\\web\\firstapp\\src\\components\\views\\navbar\\navbar.jsx":"18","D:\\spotmies\\web\\firstapp\\src\\components\\views\\homeSlides\\slide1.jsx":"19","D:\\spotmies\\web\\firstapp\\src\\components\\views\\homeSlides\\partnerRegistration.jsx":"20","D:\\spotmies\\web\\firstapp\\src\\components\\views\\chats\\chat.jsx":"21","D:\\spotmies\\web\\firstapp\\src\\components\\views\\mybookings\\mybooks.jsx":"22","D:\\spotmies\\web\\firstapp\\src\\components\\views\\signup&profile\\signup.jsx":"23","D:\\spotmies\\web\\firstapp\\src\\components\\views\\partnerDetails\\pdetails.jsx":"24","D:\\spotmies\\web\\firstapp\\src\\components\\views\\chats\\chats-section.jsx":"25","D:\\spotmies\\web\\firstapp\\src\\components\\views\\contacts\\contact.jsx":"26","D:\\spotmies\\web\\firstapp\\src\\components\\views\\rentals\\bikerental.jsx":"27","D:\\spotmies\\web\\firstapp\\src\\components\\views\\editpost\\editpost2.jsx":"28","D:\\spotmies\\web\\firstapp\\src\\components\\views\\signup&profile\\profile.jsx":"29","D:\\spotmies\\web\\firstapp\\src\\components\\views\\privacyPolicy\\privacy.jsx":"30","D:\\spotmies\\web\\firstapp\\src\\components\\views\\newpost\\newpost2.jsx":"31","D:\\spotmies\\web\\firstapp\\src\\components\\reusable\\coming_soon_widget.jsx":"32","D:\\spotmies\\web\\firstapp\\src\\components\\views\\viewpost\\postview.jsx":"33"},{"size":892,"mtime":1622515265217,"results":"34","hashOfConfig":"35"},{"size":375,"mtime":1620832391881,"results":"36","hashOfConfig":"35"},{"size":2654,"mtime":1622515095417,"results":"37","hashOfConfig":"35"},{"size":335,"mtime":1620832422506,"results":"38","hashOfConfig":"35"},{"size":1101,"mtime":1620832422431,"results":"39","hashOfConfig":"35"},{"size":1521,"mtime":1622430921575,"results":"40","hashOfConfig":"35"},{"size":2246,"mtime":1622430984541,"results":"41","hashOfConfig":"35"},{"size":1575,"mtime":1622430931026,"results":"42","hashOfConfig":"35"},{"size":449,"mtime":1622430812885,"results":"43","hashOfConfig":"35"},{"size":2002,"mtime":1622052525463,"results":"44","hashOfConfig":"35"},{"size":3342,"mtime":1622428246407,"results":"45","hashOfConfig":"35"},{"size":355,"mtime":1620832422505,"results":"46","hashOfConfig":"35"},{"size":10343,"mtime":1622059715787,"results":"47","hashOfConfig":"35"},{"size":162,"mtime":1622430774905,"results":"48","hashOfConfig":"35"},{"size":2050,"mtime":1620832422504,"results":"49","hashOfConfig":"35"},{"size":369,"mtime":1622514490709,"results":"50","hashOfConfig":"35"},{"size":538,"mtime":1621791530941,"results":"51","hashOfConfig":"35"},{"size":8039,"mtime":1622512163926,"results":"52","hashOfConfig":"35"},{"size":17177,"mtime":1622481770880,"results":"53","hashOfConfig":"35"},{"size":18788,"mtime":1622481795467,"results":"54","hashOfConfig":"35"},{"size":7815,"mtime":1622482510472,"results":"55","hashOfConfig":"35"},{"size":7605,"mtime":1622510415994,"results":"56","hashOfConfig":"35"},{"size":5948,"mtime":1622514894505,"results":"57","hashOfConfig":"35"},{"size":3268,"mtime":1622513942116,"results":"58","hashOfConfig":"35"},{"size":42991,"mtime":1622482676759,"results":"59","hashOfConfig":"35"},{"size":6804,"mtime":1622482722869,"results":"60","hashOfConfig":"35"},{"size":36609,"mtime":1622514697516,"results":"61","hashOfConfig":"35"},{"size":14442,"mtime":1622483020928,"results":"62","hashOfConfig":"35"},{"size":10878,"mtime":1622514839513,"results":"63","hashOfConfig":"35"},{"size":17771,"mtime":1622514119255,"results":"64","hashOfConfig":"35"},{"size":15842,"mtime":1622513844621,"results":"65","hashOfConfig":"35"},{"size":666,"mtime":1622513733877,"results":"66","hashOfConfig":"35"},{"size":16402,"mtime":1622515092426,"results":"67","hashOfConfig":"35"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1mthewg",{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"75","messages":"76","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77","usedDeprecatedRules":"72"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80","usedDeprecatedRules":"72"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85","usedDeprecatedRules":"72"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":17,"fixableErrorCount":0,"fixableWarningCount":0,"source":"94","usedDeprecatedRules":"72"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":25,"fixableErrorCount":0,"fixableWarningCount":0,"source":"99","usedDeprecatedRules":"72"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"104","usedDeprecatedRules":"72"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"111","messages":"112","errorCount":0,"warningCount":28,"fixableErrorCount":0,"fixableWarningCount":0,"source":"113","usedDeprecatedRules":"72"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":31,"fixableErrorCount":0,"fixableWarningCount":0,"source":"116","usedDeprecatedRules":"72"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"121","messages":"122","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"123","messages":"124","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"125","messages":"126","errorCount":0,"warningCount":48,"fixableErrorCount":0,"fixableWarningCount":0,"source":"127","usedDeprecatedRules":"72"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"130","usedDeprecatedRules":"72"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":44,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"133","messages":"134","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"135","usedDeprecatedRules":"72"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"138","messages":"139","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"140","messages":"141","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"142","messages":"143","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":21,"fixableErrorCount":0,"fixableWarningCount":0,"source":"146","usedDeprecatedRules":"72"},"D:\\spotmies\\web\\firstapp\\src\\index.js",[],"D:\\spotmies\\web\\firstapp\\src\\reportWebVitals.js",[],["147","148"],"D:\\spotmies\\web\\firstapp\\src\\App.js",[],"D:\\spotmies\\web\\firstapp\\src\\scrolltotop.js",["149"],"import { useEffect } from 'react';\r\nimport { withRouter } from 'react-router-dom';function ScrollToTop({ history }) {\r\n  useEffect(() => {\r\n    const unlisten = history.listen(() => {\r\n      window.scrollTo(0, 0);\r\n    });\r\n    return () => {\r\n      unlisten();\r\n    }\r\n  }, []);  return null;\r\n}export default withRouter(ScrollToTop);","D:\\spotmies\\web\\firstapp\\src\\firebase.js",["150"],"import firebase from 'firebase';\r\nimport firestore from 'firebase/firestore'\r\n\r\nconst settings = {timestampsInSnapshots: true};\r\nconst firebaseConfig = {\r\n    apiKey: \"AIzaSyDUAqHmXwTZU1caOWJ-LC-dBl3R7uzOkPo\",\r\n    authDomain: \"spotmiess.firebaseapp.com\",\r\n    databaseURL: \"https://spotmiess.firebaseio.com\",\r\n    projectId: \"spotmiess\",\r\n    storageBucket: \"spotmiess.appspot.com\",\r\n    messagingSenderId: \"277034750528\",\r\n    appId: \"1:277034750528:web:9ff791aa208640225b45a5\",\r\n    measurementId: \"G-CB9E1ZNL3C\"\r\n  };\r\n  firebase.initializeApp(firebaseConfig);\r\n\r\nfirebase.firestore().settings(settings);\r\n\r\nexport default firebase;\r\n\r\n// import  firebase from \"firebase\";\r\n// import \"firebase/firestore\";\r\n\r\n// let config = {\r\n//   apiKey: \"xxx\",\r\n//   authDomain: \"bezkoder-firebase.firebaseapp.com\",\r\n//   databaseURL: \"https://bezkoder-firebase.firebaseio.com\",\r\n//   projectId: \"bezkoder-firebase\",\r\n//   storageBucket: \"bezkoder-firebase.appspot.com\",\r\n//   messagingSenderId: \"xxx\",\r\n//   appId: \"xxx\",\r\n// };\r\n\r\n// firebase.initializeApp(config);\r\n\r\n// export default firebase.firestore();","D:\\spotmies\\web\\firstapp\\src\\helpers\\usertext.js",[],"D:\\spotmies\\web\\firstapp\\src\\helpers\\partnerText.js",["151","152","153","154","155","156"],"import takepic from \"../images/undraw_Organize_photos_re_ogcy.svg\";\r\nimport location from \"../images/undraw_Destination_re_sr74.svg\";\r\n//import getquote from \"../images/undraw_Hire_re_gn5j.svg\";\r\nimport getquote from \"../images/undraw_add_tasks_mxew.svg\";\r\nimport service from \"../images/undraw_online_articles_79ff.svg\";\r\nimport about from \"../images/undraw_researching_22gp.svg\";\r\nimport what from \"../images/what.jpeg\";\r\nimport spot from \"../images/undraw_Choose_bwbs.svg\";\r\nimport reg from \"../images/reg.png\";\r\nimport meet from \"../images/meet.png\";\r\nimport man2 from \"../images/undraw_Freelancer_re_irh4.svg\";\r\nimport register from \"../images/undraw_Confirmed_re_sef7.svg\";\r\nimport getpaid from \"../images/undraw_transfer_money_rywa.svg\";\r\nimport navigate from \"../images/undraw_best_place_r685.svg\";\r\n\r\nconst textpart = [\r\n  {\r\n    id: 1,\r\n    heading: \"Engage with us!\",\r\n    content:\r\n      \"We are stronger when we're together so let's build an easier and better world together. Become a Service Provider and get your Orders from your coverage Area.\",\r\n    img: man2,\r\n  },\r\n  {\r\n    id: 1,\r\n    heading: \"Register\",\r\n    content:\r\n      \"Download our Spotmies Partner app and get registered with your Mobile number.\",\r\n    img: register,\r\n  },\r\n  {\r\n    id: 1,\r\n    heading: \"Select your profession\",\r\n    content:\r\n      \"Specify your profession during registration. Get the Orders from your selected Profession.\",\r\n    img: spot,\r\n  },\r\n  {\r\n    id: 1,\r\n    heading: \"Quote your price\",\r\n    content: \"Quote your service price and negotiate with your customer.\",\r\n    img: getquote,\r\n  },\r\n  {\r\n    id: 1,\r\n    heading: \"Get orders from your selected area.\",\r\n    content:\r\n      \"Set your coverage area in the app and get orders from selected range. We use all new Algorithms to assist you automatically and make your Service reach more Customers.\",\r\n    img: service,\r\n  },\r\n  {\r\n    id: 1,\r\n    heading: \"Navigate to the customer location\",\r\n    content:\r\n      \"Explore and use your skills at customer location and get the credit you deserve.\",\r\n    img: navigate,\r\n  },\r\n  {\r\n    id: 1,\r\n    heading: \"Get paid for your valuable skills and hardwork.\",\r\n    content: \"\",\r\n    img: getpaid,\r\n  },\r\n];\r\n\r\nexport default textpart;\r\n","D:\\spotmies\\web\\firstapp\\src\\helpers\\txtRotate.js",[],"D:\\spotmies\\web\\firstapp\\src\\helpers\\categories.js",[],"D:\\spotmies\\web\\firstapp\\src\\mservices\\contactUs.js",[],"D:\\spotmies\\web\\firstapp\\src\\helpers\\dateconv.js",["157","158","159","160","161","162","163","164","165","166","167","168","169","170","171","172","173"],"function lastMessage(msg) {\r\n  if (msg.slice(msg.length - 1) == \"u\" || msg.slice(msg.length - 1) == \"um\") {\r\n    return true;\r\n  } else {\r\n    return false;\r\n  }\r\n}\r\n\r\nfunction gettbystamps(stamps, id) {\r\n  const monthNames = [\r\n    \"Jan\",\r\n    \"Feb\",\r\n    \"March\",\r\n    \"April\",\r\n    \"May\",\r\n    \"June\",\r\n    \"July\",\r\n    \"Aug\",\r\n    \"Sep\",\r\n    \"Oct\",\r\n    \"Nov\",\r\n    \"Dec\",\r\n  ];\r\n\r\n  const dayName = [\"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\"];\r\n\r\n  //today\r\n  let today = new Date();\r\n  let tday = today.getDay(); //return day sun=0;mon=1...\r\n  let tthedate = today.getDate(); //returns date 1,2,3,4..\r\n  let tmonth = today.getMonth();\r\n\r\n  let yesterday = today;\r\n  yesterday.setDate(yesterday.getDate() - 1);\r\n  let yday = yesterday.getDay(); //return day sun=0;mon=1...\r\n  let ythedate = yesterday.getDate(); //returns date 1,2,3,4..\r\n  let ymonth = yesterday.getMonth();\r\n\r\n  let date = new Date(stamps * 1000);\r\n  let year = date.getFullYear();\r\n  let month = date.getMonth();\r\n  let thedate = date.getDate();\r\n  let day = date.getDay();\r\n  let hours = date.getHours();\r\n  let minutes = date.getMinutes();\r\n\r\n  const formatAMPM = (date) => {\r\n    // var hours = date.getHours();\r\n    // var minutes = date.getMinutes();\r\n    var ampm = hours >= 12 ? \"pm\" : \"am\";\r\n    hours = hours % 12;\r\n    hours = hours ? hours : 12; // the hour '0' should be '12'\r\n    minutes = minutes < 10 ? \"0\" + minutes : minutes;\r\n    var strTime = hours + \":\" + minutes + \" \" + ampm;\r\n    return strTime;\r\n  };\r\n\r\n  const fullDate = () => {\r\n    let temp = dayName[day] + \" \" + thedate + \" \" + monthNames[month];\r\n    let temp2 = dayName[tday] + \" \" + tthedate + \" \" + monthNames[tmonth];\r\n    let temp3 = dayName[yday] + \" \" + ythedate + \" \" + monthNames[ymonth];\r\n    if (temp == temp2) return \"Today\";\r\n    else if (temp == temp3) return \"Yesterday\";\r\n    else return temp;\r\n  };\r\n\r\n  switch (id) {\r\n    case \"strmonth\":\r\n      return monthNames[month];\r\n      break;\r\n\r\n    case \"strday\":\r\n      return dayName[day];\r\n      break;\r\n    case \"date\":\r\n      return thedate;\r\n      break;\r\n    case \"strmonth\":\r\n      return dayName[day];\r\n      break;\r\n\r\n    case \"hours\":\r\n      return hours;\r\n      break;\r\n    case \"minutes\":\r\n      return minutes;\r\n      break;\r\n    case \"time\":\r\n      return formatAMPM();\r\n      break;\r\n    case \"fulldate\":\r\n      return fullDate();\r\n      break;\r\n    default:\r\n      return \"invalid id\";\r\n      break;\r\n  }\r\n}\r\nfunction countSpecial(str) {\r\n  const punct = \"`\";\r\n  let count = 0;\r\n  let position = [];\r\n  for (let i = 0; i < str.length; i++) {\r\n    if (!punct.includes(str[i])) {\r\n      continue;\r\n    }\r\n    count++;\r\n    position.push(i);\r\n  }\r\n  return position;\r\n}\r\nfunction getorgnl(msg) {\r\n  let temp = countSpecial(msg);\r\n  let temp2 = msg.slice(0, temp[temp.length - 2]);\r\n  return temp2;\r\n}\r\nfunction getstamp(raw) {\r\n  let temp = countSpecial(raw);\r\n  let findex = temp[temp.length - 2] + 1;\r\n  let temp2 = raw.substring(findex, temp[temp.length - 1]);\r\n  return temp2;\r\n}\r\n\r\nfunction ValidURL(str) {\r\n  var regex = /(http|https):\\/\\/(\\w+:{0,1}\\w*)?(\\S+)(:[0-9]+)?(\\/|\\/([\\w#!:.?+=&%!\\-\\/]))?/;\r\n  if (!regex.test(str)) {\r\n    // alert(\"Please enter valid URL.\");\r\n    return false;\r\n  } else {\r\n    return true;\r\n  }\r\n}\r\n\r\nexport { gettbystamps, getorgnl, getstamp, lastMessage, ValidURL };\r\n","D:\\spotmies\\web\\firstapp\\src\\mservices\\userDB.js",[],"D:\\spotmies\\web\\firstapp\\src\\components\\reusable\\Modal.jsx",["174","175","176","177","178","179","180","181","182","183","184","185","186","187","188","189","190","191","192","193","194","195","196","197","198"],"import { useState, useEffect } from \"react\";\r\nimport React, { useCallback } from \"react\";\r\nimport \"../../assets/css/home.css\";\r\nimport { apiPostPut, apiGetMethod } from \"../../mservices/contactUs\";\r\n\r\nimport { Modal, Form, Button, Header, TextArea } from \"semantic-ui-react\";\r\nimport { toast } from \"react-toastify\";\r\n\r\n//icons\r\nimport {\r\n  MdHelp,\r\n  MdKeyboardArrowLeft,\r\n  MdSentimentSatisfied,\r\n  MdThumbDown,\r\n  MdThumbUp,\r\n} from \"react-icons/md\";\r\n\r\nfunction FeedbackForm(props) {\r\n  const [open, setOpen] = useState(false);\r\n  const [count, setcount] = useState(0);\r\n  const [que, setque] = useState([]);\r\n  const [sbtn, setsbtn] = useState(false);\r\n  const [fQuestions, setfQuestions] = useState([]);\r\n\r\n  useEffect(async () => {\r\n    if (fQuestions.length < 1) {\r\n      let res = await apiGetMethod(\"/feed\", \"/feedBack\");\r\n      console.log(res);\r\n      setfQuestions(res.questions);\r\n    }\r\n\r\n    setOpen(props.open);\r\n    setcount(0);\r\n    setque([]);\r\n  }, [props.open]);\r\n\r\n  useEffect(() => {\r\n    if (count == 10) {\r\n      setTimeout(() => {\r\n        onClose();\r\n      }, 1000);\r\n    }\r\n  }, [count]);\r\n\r\n  const onClose = useCallback(() => {\r\n    console.log(fQuestions);\r\n    props.close();\r\n  });\r\n\r\n  const nextQue = (ans, index) => {\r\n    setcount(index + 1);\r\n    let tempque = que;\r\n    tempque[index] = ans;\r\n    setque(tempque);\r\n  };\r\n\r\n  const prevQue = () => {\r\n    if (count != 0) setcount(count - 1);\r\n  };\r\n\r\n  const textArea = (e, index) => {\r\n    // console.log(e);\r\n    let ans = e.target.value;\r\n    let tempque = que;\r\n    tempque[index] = ans;\r\n    setque(tempque);\r\n  };\r\n\r\n  const formSubmit = async () => {\r\n    setsbtn(true);\r\n    console.log(que);\r\n    var obj = {\r\n      q0: que[0] ?? \"\",\r\n      q1: que[1] ?? \"\",\r\n      q2: que[2] ?? \"\",\r\n      q3: que[3] ?? \"\",\r\n      q4: que[4] ?? \"\",\r\n      submitedAt: new Date().valueOf(),\r\n    };\r\n    console.log(obj);\r\n    console.log(JSON.stringify(obj));\r\n    let strobj = {};\r\n    strobj[\"body\"] = JSON.stringify(obj);\r\n    let result = await apiPostPut(strobj, \"feedBack\");\r\n    if (result.status == 200) {\r\n      setsbtn(false);\r\n      localStorage.setItem(\"isFeedBackGiven\", true);\r\n      toast.info(\"Thanks For Your Feedback\");\r\n      setcount(10);\r\n    } else {\r\n      setsbtn(false);\r\n\r\n      localStorage.setItem(\"isFeedBackGiven\", false);\r\n      toast.error(\"Something went wrong please try again\");\r\n      // onClose();\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Modal\r\n      className=\"fbModal\"\r\n      onClose={onClose}\r\n      onOpen={() => setOpen(true)}\r\n      open={open}\r\n      size=\"tiny\"\r\n      // trigger={<Button>Show Modal</Button>}\r\n    >\r\n      <Modal.Header>Feedback Here</Modal.Header>\r\n      <Modal.Content className=\"modalContent\">\r\n        {count > 0 ? (\r\n          <p className=\"modalBack\" onClick={prevQue}>\r\n            <MdKeyboardArrowLeft size=\"2rem\" />\r\n            <span style={{ marginTop: \"4px\", fontWeight: \"800\" }}> Back </span>\r\n          </p>\r\n        ) : (\r\n          <p className=\"modalBack\"></p>\r\n        )}\r\n        <Modal.Description>\r\n          {count == 0 ? (\r\n            <div className=\"modalDiv\">\r\n              {/* <Header>Do You Understand What Does This Website Means</Header> */}\r\n              <Header>{fQuestions[0]}</Header>\r\n\r\n              <div className=\"feedBbtn2\">\r\n                <Button\r\n                  basic\r\n                  color={que[0] == \"yes\" ? \"blue\" : \"grey\"}\r\n                  onClick={() => {\r\n                    nextQue(\"yes\", 0);\r\n                  }}\r\n                >\r\n                  <MdThumbUp /> Yeah\r\n                </Button>\r\n                <Button\r\n                  basic\r\n                  style={{ marginLeft: \"6px\", marginTop: \"4px\" }}\r\n                  color={que[0] == \"no\" ? \"blue\" : \"grey\"}\r\n                  onClick={() => {\r\n                    nextQue(\"no\", 0);\r\n                  }}\r\n                >\r\n                  <MdThumbDown /> Nope\r\n                </Button>\r\n                <Button\r\n                  basic\r\n                  style={{ marginLeft: \"6px\", marginTop: \"4px\" }}\r\n                  color={que[0] == \"no idea\" ? \"blue\" : \"grey\"}\r\n                  onClick={() => {\r\n                    nextQue(\"no idea\", 0);\r\n                  }}\r\n                >\r\n                  <MdHelp /> No Idea\r\n                </Button>\r\n              </div>\r\n            </div>\r\n          ) : null}\r\n\r\n          {count == 1 ? (\r\n            <div className=\"modalDiv\">\r\n              {/* <Header>How much often Do you think you will use this app?</Header> */}\r\n              <Header>{fQuestions[1]}</Header>\r\n\r\n              <div>\r\n                <Button\r\n                  basic\r\n                  color={que[1] == \"Whenever I need\" ? \"blue\" : \"grey\"}\r\n                  onClick={() => {\r\n                    nextQue(\"Whenever I need\", 1);\r\n                  }}\r\n                >\r\n                  <MdThumbUp /> Whenever I need\r\n                </Button>\r\n                <Button\r\n                  basic\r\n                  style={{ marginLeft: \"6px\", marginTop: \"4px\" }}\r\n                  color={que[1] == \"Never\" ? \"blue\" : \"grey\"}\r\n                  onClick={() => {\r\n                    nextQue(\"Never\", 1);\r\n                  }}\r\n                >\r\n                  <MdThumbDown /> Never\r\n                </Button>\r\n                <Button\r\n                  basic\r\n                  style={{ marginLeft: \"6px\", marginTop: \"4px\" }}\r\n                  color={que[1] == \"Quite Often\" ? \"blue\" : \"grey\"}\r\n                  onClick={() => {\r\n                    nextQue(\"Quite Often\", 1);\r\n                  }}\r\n                >\r\n                  <MdSentimentSatisfied /> Quite Often\r\n                </Button>\r\n                <Button\r\n                  basic\r\n                  style={{ marginLeft: \"6px\", marginTop: \"4px\" }}\r\n                  color={que[1] == \"i don't know\" ? \"blue\" : \"grey\"}\r\n                  onClick={() => {\r\n                    nextQue(\"i don't know\", 1);\r\n                  }}\r\n                >\r\n                  <MdHelp /> I Don't Know\r\n                </Button>\r\n              </div>\r\n            </div>\r\n          ) : null}\r\n\r\n          {count == 2 ? (\r\n            <div className=\"modalDiv\">\r\n              {/* <Header>Did you face any issue while browsing this site?</Header> */}\r\n              <Header>{fQuestions[2]}</Header>\r\n\r\n              <div>\r\n                <Button\r\n                  basic\r\n                  color={que[2] == \"Yes\" ? \"blue\" : \"grey\"}\r\n                  onClick={() => {\r\n                    nextQue(\"Yes\", 2);\r\n                  }}\r\n                >\r\n                  <MdThumbUp /> Yes\r\n                </Button>\r\n                <Button\r\n                  basic\r\n                  style={{ marginLeft: \"6px\", marginTop: \"4px\" }}\r\n                  color={que[2] == \"No\" ? \"blue\" : \"grey\"}\r\n                  onClick={() => {\r\n                    nextQue(\"No\", 2);\r\n                  }}\r\n                >\r\n                  <MdThumbDown /> No\r\n                </Button>\r\n                <Button\r\n                  basic\r\n                  style={{ marginLeft: \"6px\", marginTop: \"4px\" }}\r\n                  color={que[2] == \"Sometimes\" ? \"blue\" : \"grey\"}\r\n                  onClick={() => {\r\n                    nextQue(\"Sometimes\", 2);\r\n                  }}\r\n                >\r\n                  <MdSentimentSatisfied /> Sometimes\r\n                </Button>\r\n                {/* <Button\r\n                  basic\r\n                  color={que[2] == \"i don't know\" ? \"blue\" : \"grey\"}\r\n                  onClick={() => {\r\n                    nextQue(\"i don't know\", 2);\r\n                  }}\r\n                >\r\n                  <MdHelp /> I Don't Know\r\n                </Button> */}\r\n              </div>\r\n            </div>\r\n          ) : null}\r\n\r\n          {count == 3 ? (\r\n            <div className=\"modalDiv\">\r\n              {/* <Header>Expecting any other service from us? (If yes, please mention it in message below).</Header> */}\r\n              <Header>{fQuestions[3]}</Header>\r\n\r\n              <div>\r\n                <Button\r\n                  basic\r\n                  color={que[3] == \"yes\" ? \"blue\" : \"grey\"}\r\n                  onClick={() => {\r\n                    nextQue(\"yes\", 3);\r\n                  }}\r\n                >\r\n                  <MdThumbUp /> yes\r\n                </Button>\r\n                <Button\r\n                  basic\r\n                  style={{ marginLeft: \"6px\", marginTop: \"4px\" }}\r\n                  color={que[3] == \"no\" ? \"blue\" : \"grey\"}\r\n                  onClick={() => {\r\n                    nextQue(\"no\", 3);\r\n                  }}\r\n                >\r\n                  <MdThumbDown /> No\r\n                </Button>\r\n              </div>\r\n            </div>\r\n          ) : null}\r\n\r\n          {count == 4 ? (\r\n            <div className=\"modalDiv\">\r\n              {/* <Header>\r\n                If you want to tell us something please let us know here. We love to\r\n                improve our Service.\r\n              </Header> */}\r\n              <Header>{fQuestions[4]}</Header>\r\n\r\n              <div>\r\n                <Form>\r\n                  <TextArea\r\n                    onChange={(e) => {\r\n                      textArea(e, 4);\r\n                    }}\r\n                    placeholder=\"Tell us more\"\r\n                    value={que[4]}\r\n                  />\r\n                </Form>\r\n              </div>\r\n            </div>\r\n          ) : null}\r\n\r\n          {count == 10 ? (\r\n            <div>\r\n              <Header>Thanks For Your Feedback</Header>\r\n            </div>\r\n          ) : null}\r\n        </Modal.Description>\r\n      </Modal.Content>\r\n      <Modal.Actions className=\"modalAction\">\r\n        <Button color=\"black\" onClick={onClose}>\r\n          Cancel\r\n        </Button>\r\n        {count > 3 ? (\r\n          sbtn ? (\r\n            <Button\r\n              loading\r\n              content=\"Submit\"\r\n              labelPosition=\"right\"\r\n              icon=\"checkmark\"\r\n              positive\r\n            />\r\n          ) : (\r\n            <Button\r\n              content=\"Submit\"\r\n              labelPosition=\"right\"\r\n              icon=\"checkmark\"\r\n              onClick={formSubmit}\r\n              positive\r\n            />\r\n          )\r\n        ) : null}\r\n      </Modal.Actions>\r\n    </Modal>\r\n  );\r\n}\r\n\r\nexport { FeedbackForm };\r\n","D:\\spotmies\\web\\firstapp\\src\\helpers\\msgdot.js",[],"D:\\spotmies\\web\\firstapp\\src\\mservices\\upldmedia.js",["199","200"],"import firebase from '../firebase';\r\nimport 'firebase/storage';\r\nconst storage = firebase.storage();\r\nconst db=firebase.firestore();\r\n\r\nasync function handleUpload(mfile){\r\n      \r\n let image=mfile;\r\n var surl=\"null\";\r\n        console.log(image.length)\r\n        for(var i=0;i<image.length;i++){\r\n          let k=Number(i)\r\n       const uploadTask = storage.ref(`users/${firebase.auth().currentUser.uid}/chat/${image[k].name}`).put(image[k]);\r\n      let upldtask= uploadTask.on(\"state_changed\",snapshot => {},\r\n         error => {\r\n           console.log(error);\r\n         },\r\n         () => {\r\n           storage\r\n             .ref(`users/${firebase.auth().currentUser.uid}/chat/`)\r\n             .child(image[k].name)\r\n             .getDownloadURL()\r\n             .then(url => {\r\n               //console.log(url)\r\n               console.log(\"image uploaded\")\r\n                surl=url;\r\n                return url;\r\n \r\n             });\r\n         }\r\n       )\r\n        }\r\n        \r\n        return surl;\r\n     }\r\n\r\n     function temp(){\r\n         return null\r\n     }\r\n\r\n\r\n     async function getlink(image){\r\n       try{\r\n        let urll= await  storage.ref(`users/${firebase.auth().currentUser.uid}/chat/`).child(image[image.length-1].name)\r\n        .getDownloadURL()\r\n        .then(url => {\r\n  \r\n           return url;\r\n  \r\n        });\r\n    return urll;\r\n       }\r\n       catch{\r\n        return null\r\n       }\r\n\r\n     }\r\n\r\nasync function getpdetailsbyid(id){\r\n  let data;\r\n await db.collection(\"partner\").doc(id).collection(\"ProfileInfo\").doc(id).get().then(snap=>{\r\n   console.log(snap.data());\r\n   data=snap.data();\r\n });\r\n console.log(\"data fetched\")\r\n return data;\r\n\r\n}     \r\nasync function disablechat(id){\r\n  let status;\r\n  try{\r\n   await db.collection(\"messaging\").doc(id).update({\r\n     chatbuild:false\r\n   })\r\n    .then(()=>{status=200})\r\n    .catch((e)=>\r\n    {\r\n      console.log(e)\r\n      status=100;\r\n    })\r\n  }\r\n  catch{\r\n    status=404\r\n  }\r\n  return status;\r\n}\r\n\r\n\r\n\r\n\r\nexport {handleUpload,temp,getlink,getpdetailsbyid,disablechat}","D:\\spotmies\\web\\firstapp\\src\\helpers\\constants.js",[],"D:\\spotmies\\web\\firstapp\\src\\mservices\\add_header.js",[],"D:\\spotmies\\web\\firstapp\\src\\components\\views\\navbar\\navbar.jsx",["201","202","203","204"],"D:\\spotmies\\web\\firstapp\\src\\components\\views\\homeSlides\\slide1.jsx",["205","206","207","208","209","210","211","212","213","214","215","216","217","218","219","220","221","222","223","224","225","226","227","228","229","230","231","232"],"import \"../../../App.css\";\r\nimport { Link } from \"react-router-dom\";\r\nimport \"semantic-ui-css/semantic.min.css\";\r\nimport { Button } from \"semantic-ui-react\";\r\nimport React, { useState, useEffect, useRef } from \"react\";\r\n//toast\r\nimport { toast } from \"react-toastify\";\r\nimport { MdFeedback } from \"react-icons/md\";\r\nimport { BsFillLockFill, BsFillUnlockFill } from \"react-icons/bs\";\r\nimport { FaGooglePlay } from \"react-icons/fa\";\r\nimport firebase from \"../../../firebase\";\r\nimport Zoom from \"react-reveal/Zoom\";\r\nimport Fade from \"react-reveal/Fade\";\r\nimport \"../../../assets/css/home.css\";\r\nimport text from \"../../../helpers/usertext\";\r\nimport ReactReadMoreReadLess from \"react-read-more-read-less\";\r\nimport ScrollAnimation from \"react-animate-on-scroll\";\r\nimport \"../../../helpers/txtRotate\";\r\nimport lock1 from \"../../../images/lock1.png\";\r\nimport lock2 from \"../../../images/lock2.png\";\r\nimport lock3 from \"../../../images/lock3.png\";\r\nimport { feedBack1 } from \"../../../mservices/contactUs\";\r\n//import feedback form\r\nimport { FeedbackForm } from \"../../reusable/Modal\";\r\n// gsap.registerPlugin(ScrollTrigger);\r\n// const lockdiv = document.querySelector(\"#LockDiv\");\r\n// init(lockdiv, {\r\n//   strings: [\"Completely Secured!\", \"********** ********\"],\r\n// });\r\n\r\nvar newpost = \"/signup\";\r\nfirebase.auth().onAuthStateChanged(function (user) {\r\n  if (user) {\r\n    newpost = \"/newpost\";\r\n    console.log(\"user exists\");\r\n  } else {\r\n    newpost = \"/signup\";\r\n    console.log(\"user didn't exixst\");\r\n  }\r\n});\r\n\r\nfunction useWindowSize1() {\r\n  const [swidth, setSWidth] = useState([window.innerHeight, window.innerWidth]);\r\n  useEffect(() => {\r\n    const handleResize = () => {\r\n      setSWidth([window.innerHeight, window.innerWidth]);\r\n    };\r\n    window.addEventListener(\"resize\", handleResize);\r\n    return () => {\r\n      window.removeEventListener(\"resize\", handleResize);\r\n    };\r\n  }, []);\r\n  return swidth;\r\n}\r\n\r\nfunction Slide() {\r\n  const lockText = useRef(null);\r\n  const [open, setOpen] = useState(false);\r\n  const [sheight1, swidths1] = useWindowSize1();\r\n  const [userText, setUsertext] = useState(text);\r\n  const scrollref = useRef(null);\r\n  const [cstext, setCstext] = useState(\"********** ********\");\r\n  const [lock, setLock] = useState(lock3);\r\n  const [lockst, setlockst] = useState(0);\r\n  const securityText =\r\n    \"We believe that you should have a choice to share your details with technicians.\" +\r\n    \"You can communicate with technician in our application itself without sharing contact details. \";\r\n  // const [condiff, setCondiff] = useState(530);\r\n\r\n  const redirect = () => {\r\n    window.open(\"https://modernsilpi.com\", \"_blank\");\r\n  };\r\n\r\n  const closeModal = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  useEffect(() => {\r\n    window.onscroll = (e) => {\r\n      var scrolly = e.target.scrollingElement.scrollHeight;\r\n      var scrolltop = e.target.scrollingElement.scrollTop;\r\n      var scrolltop2 =\r\n        lockText.current != null ? lockText.current.offsetTop : 0;\r\n      var clientheight = e.target.scrollingElement.clientHeight;\r\n      var diff = scrolltop2 - scrolltop;\r\n\r\n      if (diff <= 520 && diff >= 500) {\r\n        swidths1 < 800 ? setCstext(\"C********* \") : setCstext(\"C********* \");\r\n        setlockst(0);\r\n      } else if (diff <= 499 && diff >= 480) {\r\n        swidths1 < 800 ? setCstext(\"Co******** \") : setCstext(\"Co******** \");\r\n        setlockst(0);\r\n      } else if (diff <= 479 && diff >= 460) {\r\n        setCstext(\"Com******* ********\");\r\n        setlockst(0);\r\n      } else if (diff <= 459 && diff >= 440) {\r\n        setCstext(\"Comp****** ********\");\r\n      } else if (diff <= 439 && diff >= 420) {\r\n        setCstext(\"Compl***** ********\");\r\n        setlockst(0);\r\n      } else if (diff <= 419 && diff >= 400) {\r\n        setCstext(\"Comple**** ********\");\r\n      } else if (diff <= 399 && diff >= 380) {\r\n        setCstext(\"Complet*** ********\");\r\n        setlockst(0);\r\n      } else if (diff <= 379 && diff >= 360) {\r\n        setCstext(\"Complete** ********\");\r\n        setlockst(0);\r\n      } else if (diff <= 359 && diff >= 340) {\r\n        setCstext(\"Completel* ********\");\r\n        setlockst(0);\r\n      } else if (diff <= 339 && diff >= 320) {\r\n        setCstext(\"Completely ********\");\r\n        setLock(lock2);\r\n        setlockst(0);\r\n      } else if (diff <= 339 && diff >= 320) {\r\n        setCstext(\"Completely ********\");\r\n      } else if (diff <= 319 && diff >= 300) {\r\n        setCstext(\"Completely S*******\");\r\n      } else if (diff <= 299 && diff >= 280) {\r\n        setCstext(\"Completely Se******\");\r\n      } else if (diff <= 279 && diff >= 260) {\r\n        setCstext(\"Completely Sec*****\");\r\n      } else if (diff <= 259 && diff >= 240) {\r\n        setCstext(\"Completely Secu****\");\r\n      } else if (diff <= 239 && diff >= 220) {\r\n        setCstext(\"Completely Secur***\");\r\n      } else if (diff <= 219 && diff >= 200) {\r\n        setCstext(\"Completely Secure**\");\r\n      } else if (diff <= 199 && diff >= 180) {\r\n        setCstext(\"Completely Secured*\");\r\n        setLock(lock1);\r\n        setlockst(1);\r\n      } else if (diff <= 179 && diff >= 160) {\r\n        setCstext(\"Completely Secured!\");\r\n        setlockst(1);\r\n      }\r\n      // if (diff <= condiff + 20 && diff >= condiff + 40) {\r\n      //   // setCstext(cstext.concat(\"a\"));\r\n      //   setCondiff(diff);\r\n      //   console.log(condiff, \"condiff\");\r\n      // }\r\n      if (scrolly - scrolltop == clientheight) {\r\n        setCstext(\"Completely Secured!\");\r\n        setlockst(1);\r\n      }\r\n      // console.log(\r\n      //   scrolly,\r\n      //   scrolltop,\r\n      //   scrolltop2,\r\n      //   clientheight,\r\n      //   diff,\r\n      //   \"scrooling\"\r\n      // );\r\n    };\r\n  }, []);\r\n\r\n  if (swidths1 < 800) {\r\n    return (\r\n      <div className=\"slide1\">\r\n        {userText.map((message, key) => (\r\n          <section className=\"home-section\" id={key}>\r\n            <ScrollAnimation animateOut=\"m-img-in\" animateIn=\"m-img-out\">\r\n              <div\r\n                className={\r\n                  (key == 1) | (key == 2) | (key == 3)\r\n                    ? \"resize\"\r\n                    : \"home-photos\"\r\n                }\r\n              >\r\n                <img src={message.img} />\r\n              </div>\r\n            </ScrollAnimation>\r\n            <Zoom>\r\n              <div className=\"home-textBox\">\r\n                <ScrollAnimation\r\n                  animateIn=\"headeranimate-in\"\r\n                  animateOut=\"headeranimate-out\"\r\n                >\r\n                  <h1 className={key == 1 ? \"headTop\" : null}>\r\n                    {message.heading}\r\n                  </h1>\r\n                </ScrollAnimation>\r\n                <ScrollAnimation\r\n                  animateOut=\"fade-out-section\"\r\n                  animateIn=\"fade-in-section\"\r\n                >\r\n                  <p>\r\n                    {\" \"}\r\n                    {/* <ReactReadMoreReadLess\r\n                      charLimit={100}\r\n                      readMoreText={\"Read more ▼\"}\r\n                      readLessText={\"Read less ▲\"}\r\n                      readMoreClassName=\"read-more-less--more\"\r\n                      readLessClassName=\"read-more-less--less\"\r\n                    > */}\r\n                    {message.content}\r\n                    {/* </ReactReadMoreReadLess> */}\r\n                  </p>\r\n                </ScrollAnimation>\r\n              </div>\r\n            </Zoom>\r\n          </section>\r\n        ))}\r\n        <div className=\"feedBack fbSlide\" onClick={() => setOpen(true)}>\r\n          {lockst == 1 ? (\r\n            <Fade right>\r\n              <h3 className=\"fbh3\">Feedback</h3>\r\n            </Fade>\r\n          ) : null}\r\n          <span className=\"iconSpan\">\r\n            {\" \"}\r\n            <MdFeedback className=\"feedBackIcon\" />\r\n          </span>\r\n        </div>\r\n        <FeedbackForm open={open} close={closeModal} />\r\n\r\n        <section className=\"LockPsw\" ref={lockText}>\r\n          <Fade top>\r\n            <div id=\"LockDiv\">\r\n              {/* <img src={lock} alt=\"lock\" /> */}\r\n              {lockst == 0 ? (\r\n                <BsFillUnlockFill size=\"4rem\" />\r\n              ) : (\r\n                <BsFillLockFill size=\"4rem\" />\r\n              )}\r\n              <h2>{cstext}</h2>\r\n              <p className=\"sec-text\">\r\n                {/* <ReactReadMoreReadLess\r\n                  charLimit={78}\r\n                  readMoreText={\"Read more ▼\"}\r\n                  readLessText={\"Read less ▲\"}\r\n                  readMoreClassName=\"read-more-less--more\"\r\n                  readLessClassName=\"read-more-less--less\"\r\n                > */}\r\n                {securityText}\r\n                {/* </ReactReadMoreReadLess> */}\r\n              </p>\r\n            </div>\r\n          </Fade>\r\n        </section>\r\n\r\n        <section className=\"home-textBox\" id=\"joinBtn\">\r\n          <Fade top>\r\n            <div>\r\n              <Link to=\"/partnerRegistration\">\r\n                <h1>Wanna Register As Service Provider / Technician ?</h1>\r\n              </Link>\r\n              <br></br>\r\n              <Link to=\"/partnerRegistration\">\r\n                <Button primary>Join here</Button>\r\n              </Link>\r\n            </div>\r\n          </Fade>\r\n        </section>\r\n\r\n        <div\r\n          style={{\r\n            background: \"white\",\r\n            width: \"100%\",\r\n            textAlign: \"center\",\r\n            padding: \"20px auto\",\r\n            height: \"70px\",\r\n            fontSize: \"32px\",\r\n          }}\r\n        >\r\n          <FaGooglePlay\r\n            style={{ marginTop: \"20px\" }}\r\n            onClick={() => {\r\n              toast.info(\"App Launching Soon\");\r\n            }}\r\n          />\r\n        </div>\r\n\r\n        <div\r\n          style={{\r\n            background: \"black\",\r\n            width: \"100%\",\r\n            textAlign: \"center\",\r\n            color: \"white\",\r\n            letterSpacing: \"2px\",\r\n          }}\r\n        >\r\n          <p style={{ marginTop: \"3px\", marginBottom: \"3px\" }}>\r\n            Made with love by{\" \"}\r\n            {/* <span style={{ color: \"red\" }}>&#x2764;</span> by{\" \"} */}\r\n            <a onClick={redirect} target=\"blank\" style={{ cursor: \"pointer\" }}>\r\n              Modern Silpi\r\n            </a>\r\n          </p>\r\n        </div>\r\n      </div>\r\n    );\r\n\r\n    // return <div className=\"slide1\">\r\n  } else {\r\n    return (\r\n      <div className=\"slide1\" ref={scrollref}>\r\n        {userText.map((message, index) => (\r\n          <div id={index}>\r\n            {index % 2 == 0 ? (\r\n              <section className=\"home-section\">\r\n                <ScrollAnimation animateIn=\"img-in\" animateOut=\"img-out\">\r\n                  <div\r\n                    className={\r\n                      (index == 1) | (index == 2) | (index == 3)\r\n                        ? \"resize\"\r\n                        : \"home-photos\"\r\n                    }\r\n                  >\r\n                    <Fade left>\r\n                      <img src={message.img} />\r\n                    </Fade>\r\n                  </div>\r\n                </ScrollAnimation>\r\n                <Zoom>\r\n                  <div className=\"home-textBox\">\r\n                    <ScrollAnimation\r\n                      animateOut=\"headeranimate-out\"\r\n                      animateIn=\"headeranimate-in\"\r\n                    >\r\n                      <h1>{message.heading}</h1>\r\n                    </ScrollAnimation>\r\n                    <ScrollAnimation\r\n                      animateIn=\"fade-in-section\"\r\n                      animateOut=\"fade-out-section\"\r\n                    >\r\n                      <p>\r\n                        {/* <ReactReadMoreReadLess\r\n                          charLimit={100}\r\n                          readMoreText={\"Read more ▼\"}\r\n                          readLessText={\"\"}\r\n                          readMoreClassName=\"read-more-less--more\"\r\n                          readLessClassName=\"read-more-less--less\"\r\n                        > */}\r\n                        {message.content}\r\n                        {/* </ReactReadMoreReadLess> */}\r\n                      </p>\r\n                    </ScrollAnimation>\r\n                  </div>\r\n                </Zoom>\r\n              </section>\r\n            ) : (\r\n              <section className=\"home-section\">\r\n                <Zoom>\r\n                  <div className=\"home-textBox\">\r\n                    <ScrollAnimation\r\n                      animateOut=\"headeranimate-out\"\r\n                      animateIn=\"headeranimate-in\"\r\n                    >\r\n                      <h1>{message.heading}</h1>\r\n                    </ScrollAnimation>\r\n                    <ScrollAnimation\r\n                      animateIn=\"fade-in-section\"\r\n                      animateOut=\"fade-out-section\"\r\n                    >\r\n                      <p>\r\n                        {/* <ReactReadMoreReadLess\r\n                          charLimit={100}\r\n                          readMoreText={\"Read more ▼\"}\r\n                          readLessText={\"\"}\r\n                          readMoreClassName=\"read-more-less--more\"\r\n                          readLessClassName=\"read-more-less--less\"\r\n                        > */}\r\n                        {message.content}\r\n                        {/* </ReactReadMoreReadLess> */}\r\n                      </p>\r\n                    </ScrollAnimation>\r\n                  </div>\r\n                </Zoom>\r\n\r\n                <ScrollAnimation animateIn=\"img-in\" animateOut=\"img-out\">\r\n                  <div\r\n                    className={\r\n                      (index == 1) | (index == 2) | (index == 3)\r\n                        ? \"resize\"\r\n                        : \"home-photos\"\r\n                    }\r\n                  >\r\n                    <Fade right>\r\n                      {\" \"}\r\n                      <img src={message.img} />{\" \"}\r\n                    </Fade>\r\n                  </div>\r\n                </ScrollAnimation>\r\n              </section>\r\n            )}\r\n          </div>\r\n        ))}\r\n        <div className=\"feedBack fbSlide\" onClick={() => setOpen(true)}>\r\n          {lockst == 1 ? (\r\n            <Fade right>\r\n              <h3 className=\"fbh3\">Feedback</h3>\r\n            </Fade>\r\n          ) : null}\r\n\r\n          <span className=\"iconSpan\">\r\n            <MdFeedback className=\"feedBackIcon\" />\r\n          </span>\r\n        </div>\r\n        <FeedbackForm open={open} close={closeModal} />\r\n\r\n        <section className=\"LockPsw\" ref={lockText}>\r\n          <Fade top>\r\n            <div id=\"LockDiv\">\r\n              {/* <img src={lock} alt=\"lock\" /> */}\r\n              {lockst == 0 ? (\r\n                <BsFillUnlockFill size=\"4rem\" />\r\n              ) : (\r\n                <BsFillLockFill size=\"4rem\" />\r\n              )}\r\n\r\n              <h2 id=\"pswReveal\" ref={scrollref}>\r\n                {cstext}\r\n              </h2>\r\n              <p className=\"sec-text\">\r\n                {/* <ReactReadMoreReadLess\r\n                  charLimit={79}\r\n                  readMoreText={\"Read more ▼\"}\r\n                  readLessText={\"Read less ▲\"}\r\n                  readMoreClassName=\"read-more-less--more\"\r\n                  readLessClassName=\"read-more-less--less\"\r\n                > */}\r\n                {securityText}\r\n                {/* </ReactReadMoreReadLess> */}\r\n              </p>\r\n              {/* <p className=\"sec-text\">{securityText}</p> */}\r\n            </div>\r\n          </Fade>\r\n        </section>\r\n\r\n        <section className=\"home-textBox home-textBox1\" id=\"joinBtn\">\r\n          <Fade top>\r\n            <div>\r\n              <Link to=\"/partnerRegistration\">\r\n                <h1>Wanna Register As Service Provider / Technician ?</h1>\r\n              </Link>\r\n              <br></br>\r\n              <Link to=\"/partnerRegistration\">\r\n                <Button primary>Join here</Button>\r\n              </Link>\r\n            </div>\r\n          </Fade>\r\n        </section>\r\n\r\n        <div\r\n          style={{\r\n            background: \"white\",\r\n            width: \"100%\",\r\n            textAlign: \"center\",\r\n            padding: \"20px auto\",\r\n            height: \"70px\",\r\n            fontSize: \"32px\",\r\n          }}\r\n        >\r\n          <FaGooglePlay\r\n            style={{ marginTop: \"20px\" }}\r\n            onClick={() => {\r\n              toast.info(\"App Launching Soon\");\r\n            }}\r\n          />\r\n        </div>\r\n\r\n        {/* <div\r\n          style={{\r\n            background: \"white\",\r\n            width: \"100%\",\r\n            textAlign: \"center\",\r\n            padding: \"20px auto\",\r\n            height: \"70px\",\r\n            fontSize: \"32px\",\r\n          }}\r\n        >\r\n          <p>\r\n            <Link to=\"/privacy\">\r\n              <a>Privacy Policies</a>\r\n            </Link>\r\n          </p>\r\n        </div> */}\r\n\r\n        <div\r\n          style={{\r\n            background: \"black\",\r\n            width: \"100%\",\r\n            textAlign: \"center\",\r\n            color: \"white\",\r\n            letterSpacing: \"2px\",\r\n            margin: 0,\r\n          }}\r\n        >\r\n          <p style={{ marginTop: \"3px\", marginBottom: \"3px\" }}>\r\n            Made with Love by{\" \"}\r\n            <a onClick={redirect} target=\"blank\" style={{ cursor: \"pointer\" }}>\r\n              Modern Silpi\r\n            </a>\r\n          </p>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Slide;\r\n","D:\\spotmies\\web\\firstapp\\src\\components\\views\\homeSlides\\partnerRegistration.jsx",["233","234","235","236","237","238","239","240","241","242","243","244","245","246","247","248","249","250","251","252","253","254","255","256","257","258","259","260","261","262","263"],"import React, { useState, useEffect, useRef } from \"react\";\r\nimport { Button, Form } from \"semantic-ui-react\";\r\n\r\nimport Zoom from \"react-reveal/Zoom\";\r\nimport Fade from \"react-reveal/Fade\";\r\nimport \"../../../assets/css/partner.css\";\r\n//import feedback form\r\n\r\nimport { FeedbackForm } from \"../../reusable/Modal\";\r\n\r\nimport { FaGooglePlay } from \"react-icons/fa\";\r\n\r\nimport { toast } from \"react-toastify\";\r\nimport textpart from \"../../../helpers/partnerText\";\r\nimport ReactReadMoreReadLess from \"react-read-more-read-less\";\r\nimport { apiPostPut } from \"../../../mservices/contactUs\";\r\nimport { MdFeedback } from \"react-icons/md\";\r\nimport ScrollAnimation from \"react-animate-on-scroll\";\r\nimport { BsFillPersonPlusFill } from \"react-icons/bs\";\r\nimport Select2 from \"react-select\";\r\nconst options2 = [\r\n  { label: \"Ac/Refrigirator services\", value: \"ac repairs\" },\r\n  { label: \"Pc/Laptop services\", value: \"pc/laptop\" },\r\n  { label: \"Tv repairs\", value: \"tv\" },\r\n  { label: \"Electrician\", value: \"electrician\" },\r\n  { label: \"Interior design\", value: \"interior\" },\r\n  { label: \"Design\", value: \"design\" },\r\n  { label: \"Development\", value: \"development\" },\r\n  { label: \"Events\", value: \"events\" },\r\n  { label: \"Beauty\", value: \"beauty\" },\r\n  { label: \"Tutor\", value: \"tutor\" },\r\n  { label: \"Photography\", value: \"photography\" },\r\n  { label: \"Driver\", value: \"driver\" },\r\n  { label: \"Carpenter\", value: \"carpenter\" },\r\n  { label: \"Plumber\", value: \"plumber\" },\r\n  { label: \"CC tv installation\", value: \"cc tv installation\" },\r\n  { label: \"Catering\", value: \"catering\" },\r\n];\r\n\r\nfunction useWindowSize() {\r\n  const [swidth, setSWidth] = useState([window.innerHeight, window.innerWidth]);\r\n  useEffect(() => {\r\n    const handleResize = () => {\r\n      setSWidth([window.innerHeight, window.innerWidth]);\r\n    };\r\n    window.addEventListener(\"resize\", handleResize);\r\n    return () => {\r\n      window.removeEventListener(\"resize\", handleResize);\r\n    };\r\n  }, []);\r\n  return swidth;\r\n}\r\n\r\nfunction PartnerRegistration() {\r\n  const [pcate, spcate] = useState(null);\r\n  const [pname, spname] = useState(null);\r\n  const [pnum, spnum] = useState(null);\r\n  const [sbtn, setsbtn] = useState(false);\r\n  const lockText = useRef(null);\r\n\r\n  const redirect = () => {\r\n    // window.location.href = 'https://modernsilpi.com';\r\n    window.open(\"https://modernsilpi.com\", \"_blank\");\r\n  };\r\n  const handleChange2 = (selectedOption) => {\r\n    console.log(`Option selected:`, selectedOption);\r\n    spcate(selectedOption);\r\n  };\r\n\r\n  const handleChange = (e) => {\r\n    const re = /^[0-9\\b]+$/;\r\n    //console.log(\"change\")\r\n    const name =\r\n      e.target.name == undefined ? e.target.parentElement.id : e.target.name;\r\n    const value = e.target.value;\r\n\r\n    switch (name) {\r\n      case \"pname\":\r\n        spname(value);\r\n        break;\r\n      case \"pnum\":\r\n        if (e.target.value === \"\" || re.test(e.target.value)) {\r\n          spnum(value);\r\n        }\r\n        break;\r\n\r\n      default:\r\n        //console.log(\"pcate\",e.target.innerText)\r\n        spcate(e.target.innerText);\r\n        console.log(e.target.innerText);\r\n        break;\r\n    }\r\n  };\r\n\r\n  const formsubmit = async () => {\r\n    let details = null;\r\n    if (pnum.length == 10 && pcate !== null) {\r\n      setsbtn(true);\r\n      let pcatee = pcate.value;\r\n      details = { pname, pnum, pcatee, date: new Date().valueOf() };\r\n      await partprereg(details);\r\n    } else {\r\n      if (pnum.length < 10) toast.warning(\"enter valid number\");\r\n      else if (pcate == null) toast.warning(\"please select your profession\");\r\n    }\r\n  };\r\n  const clearfield = () => {\r\n    spcate(null);\r\n    spnum(null);\r\n    spname(null);\r\n    setsbtn(false);\r\n    document.getElementById(\"pname\").value = \"\";\r\n    document.getElementById(\"pnum\").value = \"\";\r\n    // document.getElementById(\"pcate\").value = null;\r\n  };\r\n  async function partprereg(details) {\r\n    //console.log(details);\r\n    //   toast.success(\"Thank you we will contact you soon\")\r\n    let temp = {};\r\n    temp[\"body\"] = JSON.stringify(details);\r\n    console.log(temp);\r\n    let result = await apiPostPut(temp, \"partnerRegistration\");\r\n    console.log(\"117\", result);\r\n    if (result.status == 200) {\r\n      clearfield();\r\n      toast.info(\"Thank you we will contact you soon...\");\r\n    } else {\r\n      toast.info(\"please try again\");\r\n      setsbtn(false);\r\n    }\r\n  }\r\n  const [open, setOpen] = useState(false);\r\n  const closeModal = () => {\r\n    setOpen(false);\r\n  };\r\n  const [height1, width1] = useWindowSize();\r\n  const [textContent, setTextcontent] = useState(textpart);\r\n  const [chIcon, setchIcon] = useState(0);\r\n\r\n  const ref1 = useRef(null);\r\n  const executeScroll = () =>\r\n    ref1.current.scrollIntoView({ behavior: \"smooth\" });\r\n  useEffect(() => {\r\n    window.onscroll = (e) => {\r\n      let scrolly = e.target.scrollingElement.scrollHeight;\r\n      let scrolltop = e.target.scrollingElement.scrollTop;\r\n      let clientheight = e.target.scrollingElement.clientHeight;\r\n      let scrolltop2 = ref1.current != null ? ref1.current.offsetTop : 0;\r\n      //  console.log(\"scroll\", scrolly, scrolltop, clientheight, scrolltop2);\r\n      if (scrolltop > 300) setchIcon(1);\r\n      else setchIcon(0);\r\n\r\n      if (scrolly - scrolltop < clientheight + (scrolly - scrolltop2)) {\r\n        //  console.log(\"bottom\");\r\n        setchIcon(2);\r\n      }\r\n    };\r\n  }, []);\r\n  if (width1 <= 800) {\r\n    return (\r\n      <div className=\"pslide1\">\r\n        <p id=\"partnerTop\"></p>\r\n\r\n        {textContent.map((message, index) => (\r\n          <section className=\"home-section\">\r\n            <Fade bottom>\r\n              <ScrollAnimation animateOut=\"m-img-in\" animateIn=\"m-img-out\">\r\n                <div\r\n                  className={\r\n                    (index == 1) | (index == 2) | (index == 3)\r\n                      ? \"resize\"\r\n                      : \"home-photos\"\r\n                  }\r\n                >\r\n                  <img src={message.img} />\r\n                </div>\r\n              </ScrollAnimation>\r\n            </Fade>\r\n            <Zoom>\r\n              <div className=\"home-textBox\">\r\n                <ScrollAnimation\r\n                  animateIn=\"headeranimate-in\"\r\n                  animateOut=\"headeranimate-out\"\r\n                >\r\n                  <h1>{message.heading}</h1>\r\n                </ScrollAnimation>\r\n                <ScrollAnimation\r\n                  animateOut=\"fade-out-section\"\r\n                  animateIn=\"fade-in-section\"\r\n                >\r\n                  <p>\r\n                    {\" \"}\r\n                    {/* <ReactReadMoreReadLess\r\n                      charLimit={100}\r\n                      readMoreText={\"Read more ▼\"}\r\n                      readLessText={\"Read less ▲\"}\r\n                      readMoreClassName=\"read-more-less--more\"\r\n                      readLessClassName=\"read-more-less--less\"\r\n                    > */}\r\n                    {message.content}\r\n                    {/* </ReactReadMoreReadLess> */}\r\n                  </p>\r\n                </ScrollAnimation>\r\n              </div>\r\n            </Zoom>\r\n          </section>\r\n        ))}\r\n        <div className=\"feedBack fbSlide\">\r\n          {chIcon == 0 ? (\r\n            <Fade right>\r\n              <h3\r\n                // style={{ margin: \"auto\", paddingRight: \"10px\" }}\r\n                className=\"fbh3\"\r\n                onClick={executeScroll}\r\n              >\r\n                Register\r\n              </h3>\r\n            </Fade>\r\n          ) : null}\r\n          {chIcon == 0 || chIcon == 1 ? (\r\n            <span className=\"iconSpan\">\r\n              {\" \"}\r\n              <BsFillPersonPlusFill\r\n                className=\"feedBackIcon\"\r\n                onClick={executeScroll}\r\n              />\r\n            </span>\r\n          ) : (\r\n            <span className=\"iconSpan\">\r\n              {\" \"}\r\n              <MdFeedback\r\n                className=\"feedBackIcon\"\r\n                onClick={() => setOpen(true)}\r\n              />\r\n            </span>\r\n          )}\r\n        </div>\r\n        <FeedbackForm open={open} close={closeModal} />\r\n\r\n        <div style={{ textAlign: \"center\", width: \"100%\" }} ref={ref1}>\r\n          <h2 style={{ fontSize: \"34px\" }}>Let us know you are Interested.</h2>\r\n          <Form\r\n            style={{\r\n              height: \"300px\",\r\n              width: \"80%\",\r\n              margin: \"0 auto\",\r\n              textAlign: \"left\",\r\n            }}\r\n            onSubmit={formsubmit}\r\n          >\r\n            <Form.Field>\r\n              <label>\r\n                <b>Select your Profession</b>\r\n              </label>\r\n              <Select2\r\n                placeholder=\"Select your Profession\"\r\n                value={pcate}\r\n                onChange={handleChange2}\r\n                options={options2}\r\n              />\r\n            </Form.Field>\r\n            <Form.Field>\r\n              <label>First Name</label>\r\n              <input\r\n                placeholder=\"First Name\"\r\n                id=\"pname\"\r\n                name=\"pname\"\r\n                value={pname}\r\n                onChange={handleChange}\r\n                maxLength=\"25\"\r\n                required\r\n              />\r\n            </Form.Field>\r\n            <Form.Field>\r\n              <label>Mobile Number</label>\r\n              <input\r\n                value={pnum}\r\n                onClick={handleChange}\r\n                name=\"pnum\"\r\n                id=\"pnum\"\r\n                onChange={handleChange}\r\n                placeholder=\"Mobile Numer\"\r\n                maxLength=\"10\"\r\n                required\r\n              />\r\n            </Form.Field>\r\n            {sbtn == false ? (\r\n              <Button primary type=\"submit\">\r\n                Submit\r\n              </Button>\r\n            ) : (\r\n              <Button loading primary>\r\n                Submit\r\n              </Button>\r\n            )}\r\n          </Form>\r\n        </div>\r\n        <div\r\n          style={{\r\n            background: \"white\",\r\n            width: \"100%\",\r\n            textAlign: \"center\",\r\n            padding: \"20px auto\",\r\n            height: \"70px\",\r\n            fontSize: \"32px\",\r\n          }}\r\n        >\r\n          <FaGooglePlay\r\n            style={{ marginTop: \"20px\" }}\r\n            onClick={() => {\r\n              toast.info(\"App Launching Soon\");\r\n            }}\r\n          />\r\n        </div>\r\n\r\n        <div\r\n          style={{\r\n            background: \"black\",\r\n            width: \"100%\",\r\n            textAlign: \"center\",\r\n            color: \"white\",\r\n            letterSpacing: \"2px\",\r\n          }}\r\n        >\r\n          <p style={{ marginTop: \"3px\", marginBottom: \"3px\" }}>\r\n            Made with love by{\" \"}\r\n            {/* <span style={{ color: \"red\" }}>&#x2764;</span> by{\" \"} */}\r\n            <a onClick={redirect} target=\"blank\" style={{ cursor: \"pointer\" }}>\r\n              Modern Silpi\r\n            </a>\r\n          </p>\r\n        </div>\r\n      </div>\r\n    );\r\n  } else {\r\n    return (\r\n      <div className=\"pslide1\">\r\n        {textContent.map((message, index) => (\r\n          <div>\r\n            {index % 2 == 0 ? (\r\n              <section className=\"home-section\">\r\n                <ScrollAnimation animateIn=\"img-in\" animateOut=\"img-out\">\r\n                  <Fade left>\r\n                    <div\r\n                      className={\r\n                        (index == 1) | (index == 2) | (index == 3)\r\n                          ? \"resize\"\r\n                          : index == 7\r\n                          ? \"navigateClass\"\r\n                          : \"home-photos\"\r\n                      }\r\n                    >\r\n                      <img src={message.img} />\r\n                    </div>\r\n                  </Fade>\r\n                </ScrollAnimation>\r\n                <Zoom>\r\n                  <div className=\"home-textBox\">\r\n                    <ScrollAnimation\r\n                      animateOut=\"headeranimate-out\"\r\n                      animateIn=\"headeranimate-in\"\r\n                    >\r\n                      <h1>{message.heading}</h1>\r\n                    </ScrollAnimation>\r\n                    <ScrollAnimation\r\n                      animateIn=\"fade-in-section\"\r\n                      animateOut=\"fade-out-section\"\r\n                    >\r\n                      <p>\r\n                        {/* <ReactReadMoreReadLess\r\n                          charLimit={100}\r\n                          readMoreText={\"Read more ▼\"}\r\n                          readLessText={\"Read less ▲\"}\r\n                          readMoreClassName=\"read-more-less--more\"\r\n                          readLessClassName=\"read-more-less--less\"\r\n                        > */}\r\n                        {message.content}\r\n                        {/* </ReactReadMoreReadLess> */}\r\n                      </p>\r\n                    </ScrollAnimation>\r\n                  </div>\r\n                </Zoom>\r\n              </section>\r\n            ) : (\r\n              <section className=\"home-section\">\r\n                <Zoom>\r\n                  <div className=\"home-textBox\">\r\n                    <ScrollAnimation\r\n                      animateOut=\"headeranimate-out\"\r\n                      animateIn=\"headeranimate-in\"\r\n                    >\r\n                      <h1>{message.heading}</h1>\r\n                    </ScrollAnimation>\r\n                    <ScrollAnimation\r\n                      animateIn=\"fade-in-section\"\r\n                      animateOut=\"fade-out-section\"\r\n                    >\r\n                      <p>\r\n                        {/* <ReactReadMoreReadLess\r\n                          charLimit={100}\r\n                          readMoreText={\"Read more ▼\"}\r\n                          readLessText={\"Read less ▲\"}\r\n                          readMoreClassName=\"read-more-less--more\"\r\n                          readLessClassName=\"read-more-less--less\"\r\n                        > */}\r\n                        {message.content}\r\n                        {/* </ReactReadMoreReadLess> */}\r\n                      </p>\r\n                    </ScrollAnimation>\r\n                  </div>\r\n                </Zoom>\r\n                <Fade right>\r\n                  <ScrollAnimation animateIn=\"img-in\" animateOut=\"img-out\">\r\n                    <div\r\n                      className={\r\n                        (index == 1) | (index == 2) | (index == 3)\r\n                          ? \"resize\"\r\n                          : index == 7\r\n                          ? \"navigateClass\"\r\n                          : \"home-photos\"\r\n                      }\r\n                    >\r\n                      <img src={message.img} />\r\n                    </div>\r\n                  </ScrollAnimation>\r\n                </Fade>\r\n              </section>\r\n            )}\r\n          </div>\r\n        ))}\r\n        <div className=\"feedBack fbSlide\">\r\n          {chIcon == 0 ? (\r\n            <Fade right>\r\n              <h3\r\n                className=\"fbh3\"\r\n                // style={{ margin: \"auto\", paddingRight: \"10px\" }}\r\n                onClick={executeScroll}\r\n              >\r\n                Register\r\n              </h3>\r\n            </Fade>\r\n          ) : null}\r\n          {chIcon == 0 || chIcon == 1 ? (\r\n            <span className=\"iconSpan\">\r\n              {\" \"}\r\n              <BsFillPersonPlusFill\r\n                className=\"feedBackIcon\"\r\n                onClick={executeScroll}\r\n              />\r\n            </span>\r\n          ) : (\r\n            <span className=\"iconSpan\">\r\n              {\" \"}\r\n              <MdFeedback\r\n                className=\"feedBackIcon\"\r\n                onClick={() => setOpen(true)}\r\n              />\r\n            </span>\r\n          )}\r\n        </div>\r\n        <FeedbackForm open={open} close={closeModal} />\r\n        <div style={{ textAlign: \"center\" }} ref={ref1}>\r\n          <h2 style={{ fontSize: \"54px\" }}>Let us know you are Interested.</h2>\r\n          <Form\r\n            style={{\r\n              height: \"300px\",\r\n              width: \"40%\",\r\n              margin: \"0 auto\",\r\n              textAlign: \"left\",\r\n            }}\r\n            onSubmit={formsubmit}\r\n          >\r\n            {/* <Form.Select\r\n              name=\"pcate\"\r\n              label=\"Select Your profession\"\r\n              id=\"pcate\"\r\n              onClick={handleChange}\r\n              options={options}\r\n              placeholder=\"Type of profession\"\r\n              required\r\n            /> */}\r\n            <Form.Field>\r\n              <label>\r\n                <b>Select your Profession</b>\r\n              </label>\r\n              <Select2\r\n                placeholder=\"Select your Profession\"\r\n                value={pcate}\r\n                onChange={handleChange2}\r\n                options={options2}\r\n              />\r\n            </Form.Field>\r\n            <Form.Field>\r\n              <label>First Name</label>\r\n              <input\r\n                placeholder=\"First Name\"\r\n                id=\"pname\"\r\n                name=\"pname\"\r\n                value={pname}\r\n                onChange={handleChange}\r\n                maxLength=\"25\"\r\n                required\r\n              />\r\n            </Form.Field>\r\n            <Form.Field>\r\n              <label>Mobile Number</label>\r\n              <input\r\n                value={pnum}\r\n                onClick={handleChange}\r\n                name=\"pnum\"\r\n                id=\"pnum\"\r\n                onChange={handleChange}\r\n                placeholder=\"Mobile Numer\"\r\n                maxLength=\"10\"\r\n                required\r\n              />\r\n            </Form.Field>\r\n            {sbtn == false ? (\r\n              <Button primary type=\"submit\">\r\n                Submit\r\n              </Button>\r\n            ) : (\r\n              <Button loading primary>\r\n                Submit\r\n              </Button>\r\n            )}\r\n          </Form>\r\n        </div>\r\n        <div ref={lockText}></div>\r\n        <div\r\n          style={{\r\n            background: \"white\",\r\n            width: \"100%\",\r\n            textAlign: \"center\",\r\n            padding: \"20px auto\",\r\n            height: \"70px\",\r\n            fontSize: \"32px\",\r\n          }}\r\n        >\r\n          <FaGooglePlay\r\n            style={{ marginTop: \"20px\" }}\r\n            onClick={() => {\r\n              toast.info(\"App Launching Soon\");\r\n            }}\r\n          />\r\n        </div>\r\n\r\n        <div\r\n          style={{\r\n            background: \"black\",\r\n            width: \"100%\",\r\n            textAlign: \"center\",\r\n            color: \"white\",\r\n            letterSpacing: \"2px\",\r\n          }}\r\n        >\r\n          <p style={{ marginTop: \"3px\", marginBottom: \"3px\" }}>\r\n            Made with love by{\" \"}\r\n            {/* <span style={{ color: \"red\" }}>&#x2764;</span> by{\" \"} */}\r\n            <a onClick={redirect} target=\"blank\" style={{ cursor: \"pointer\" }}>\r\n              Modern Silpi\r\n            </a>\r\n          </p>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default PartnerRegistration;\r\n","D:\\spotmies\\web\\firstapp\\src\\components\\views\\chats\\chat.jsx",[],"D:\\spotmies\\web\\firstapp\\src\\components\\views\\mybookings\\mybooks.jsx",["264","265","266","267","268","269"],"D:\\spotmies\\web\\firstapp\\src\\components\\views\\signup&profile\\signup.jsx",["270","271","272"],"D:\\spotmies\\web\\firstapp\\src\\components\\views\\partnerDetails\\pdetails.jsx",["273","274","275"],"D:\\spotmies\\web\\firstapp\\src\\components\\views\\chats\\chats-section.jsx",["276","277","278","279","280","281","282","283","284","285","286","287","288","289","290","291","292","293","294","295","296","297","298","299","300","301","302","303","304","305","306","307","308","309","310","311","312","313","314","315","316","317","318","319","320","321","322","323"],"import React, { Component, useCallback } from \"react\";\r\nimport firebase from \"../../../firebase\";\r\nimport { useState, useEffect, useRef } from \"react\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport { Row, Col, Form } from \"react-bootstrap\";\r\nimport { Button, Segment, Dimmer, Loader, Label } from \"semantic-ui-react\";\r\nimport \"../../../index.css\";\r\nimport \"../../../assets/css/chats.css\";\r\n\r\nimport { BiArrowBack } from \"react-icons/bi\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Image, List, Grid, Modal, Dropdown } from \"semantic-ui-react\";\r\nimport imageCompression from \"browser-image-compression\";\r\n\r\nimport \"firebase/storage\";\r\n//micro service\r\nimport { getpdetailsbyid, disablechat } from \"../../../mservices/upldmedia\";\r\nimport { gettbystamps, ValidURL } from \"../../../helpers/dateconv\";\r\nimport { toast } from \"react-toastify\";\r\nimport { msgdot } from \"../../../helpers/msgdot\";\r\n//import icons\r\nimport { IoIosArrowDropdown } from \"react-icons/io\";\r\n\r\nimport {\r\n  MdDelete,\r\n  MdStar,\r\n  MdChatBubble,\r\n  MdPhone,\r\n  MdAddToPhotos,\r\n  MdFeaturedPlayList,\r\n  MdSend,\r\n  MdPerson,\r\n  MdRemoveRedEye,\r\n  MdClose,\r\n  MdThumbUp,\r\n  MdAttachment,\r\n  MdThumbDown,\r\n} from \"react-icons/md\";\r\n\r\nimport { RiImageAddFill } from \"react-icons/ri\";\r\nimport { sharemydetails } from \"../../../mservices/userDB\";\r\n\r\nconst db = firebase.firestore();\r\nconst storage = firebase.storage();\r\nvar showChat = false;\r\nfunction useWindowSize() {\r\n  const [size, setSize] = useState([window.innerHeight, window.innerWidth]);\r\n  useEffect(() => {\r\n    const handleResize = () => {\r\n      setSize([window.innerHeight, window.innerWidth]);\r\n    };\r\n    window.addEventListener(\"resize\", handleResize);\r\n    return () => {\r\n      window.removeEventListener(\"resize\", handleResize);\r\n    };\r\n  }, []);\r\n  return size;\r\n}\r\n\r\nfunction useTimes() {\r\n  const [chit, setchit] = useState([]);\r\n  useEffect(() => {\r\n    firebase.auth().onAuthStateChanged(function (user) {\r\n      if (user) {\r\n        var tempChat = [];\r\n        db.collection(\"messaging\")\r\n          .where(\"userid\", \"==\", firebase.auth().currentUser.uid)\r\n          .where(\"chatbuild\", \"==\", true)\r\n          .orderBy(\"createdAt\", \"desc\")\r\n          .onSnapshot((querySnapshot) => {\r\n            setchit([]);\r\n            querySnapshot.forEach((doc) => {\r\n              setchit((x) => x.concat(doc.data()));\r\n            });\r\n          });\r\n      }\r\n    });\r\n  }, []);\r\n  return chit;\r\n}\r\nconst Sekhar = () => {\r\n  const chit = useTimes();\r\n  console.log(chit);\r\n  if (chit.body) {\r\n    console.log(chit);\r\n  }\r\n  return (\r\n    <div className=\"responses\">\r\n      <Headings />\r\n      {chit ? <Mybookings data={chit} /> : <Empty />}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Sekhar;\r\n\r\nfunction settrue() {\r\n  showChat = true;\r\n  return showChat;\r\n}\r\n\r\nfunction Mybookings(props) {\r\n  const [chat, setchat] = useState([]);\r\n  const [showChat, setShowChat] = useState(false);\r\n  const [listChat, setlistChat] = useState([]);\r\n  const [heights, widths] = useWindowSize();\r\n\r\n  useEffect(() => {\r\n    setlistChat(props.data);\r\n    console.log(\"new chat list\");\r\n    console.log(props.data);\r\n  }, [props.data]);\r\n\r\n  const click = async (prop) => {\r\n    console.log(\"click\", prop);\r\n    await db\r\n      .collection(\"messaging\")\r\n      .doc(prop)\r\n      .onSnapshot((snap) => {\r\n        setchat(snap.data());\r\n      });\r\n    console.log(\"new chat fetched\");\r\n  };\r\n\r\n  function settrue() {\r\n    return setShowChat(true);\r\n  }\r\n\r\n  if (widths <= 420) {\r\n    return (\r\n      <>\r\n        <div style={{ height: \"100%\" }}>\r\n          {props.data == 0 ? (\r\n            <Grid>\r\n              {!showChat ? (\r\n                <Grid.Column\r\n                  floated=\"left\"\r\n                  mobile={16}\r\n                  tablet={16}\r\n                  computer={4}\r\n                >\r\n                  <div style={{ position: \"-webkit-sticky\" }}>\r\n                    <List celled>\r\n                      <List.Item>\r\n                        <Segment className=\"post-img\">\r\n                          <Dimmer active inverted>\r\n                            <Loader size=\"large\">Loading</Loader>\r\n                          </Dimmer>\r\n\r\n                          <Image src=\"/images/wireframe/paragraph.png\" />\r\n                        </Segment>\r\n                        <List.Content>\r\n                          <List.Header as=\"a\"></List.Header>\r\n                          <List.Description></List.Description>\r\n                        </List.Content>\r\n                      </List.Item>\r\n                    </List>\r\n                  </div>\r\n                </Grid.Column>\r\n              ) : null}\r\n            </Grid>\r\n          ) : (\r\n            // original data\r\n            <Grid\r\n              style={{ marginRight: \"0\" }}\r\n              fluid={true}\r\n              className=\"gridHead\"\r\n            >\r\n              {!showChat ? (\r\n                <Grid.Column\r\n                  className=\"gridHead\"\r\n                  floated=\"left\"\r\n                  mobile={16}\r\n                  tablet={16}\r\n                  computer={4}\r\n                >\r\n                  <div\r\n                    style={{ position: \"-webkit-sticky\" }}\r\n                    onClick={() => {\r\n                      settrue();\r\n                    }}\r\n                  >\r\n                    <List celled>\r\n                      {listChat.map((nap, key) => (\r\n                        <List.Item\r\n                          id={nap.id}\r\n                          onClick={(e) => click(nap.id)}\r\n                          key={key}\r\n                        >\r\n                          <Image avatar src={nap.ppic} />\r\n                          <List.Content style={{ width: \"250px\" }}>\r\n                            <div\r\n                              style={{\r\n                                display: \"inline-flex\",\r\n                                width: \"250px\",\r\n                              }}\r\n                            >\r\n                              <List.Header as=\"a\">{nap.pname} </List.Header>\r\n                              <p\r\n                                style={{ marginRight: \"0\", marginLeft: \"auto\" }}\r\n                              >\r\n                                <small\r\n                                  style={{\r\n                                    color: nap.uread ? \"gray\" : \"black\",\r\n                                  }}\r\n                                >\r\n                                  {\" \"}\r\n                                  {getmsgtime(\r\n                                    JSON.parse(nap.body[nap.body.length - 1])\r\n                                      .timestamp\r\n                                  )}\r\n                                </small>\r\n                              </p>\r\n                            </div>\r\n\r\n                            <List.Description\r\n                              style={{\r\n                                display: \"inline-flex\",\r\n                                width: \"250px\",\r\n                                height: \"100%\",\r\n                              }}\r\n                            >\r\n                              <p\r\n                                style={{ color: nap.uread ? \"gray\" : \"black\" }}\r\n                              >\r\n                                {ValidURL(nap.body[nap.body.length - 1]) ==\r\n                                false ? (\r\n                                  msgdot(\r\n                                    JSON.parse(nap.body[nap.body.length - 1])\r\n                                      .msg,\r\n                                    24\r\n                                  )\r\n                                ) : (\r\n                                  <span style={{ display: \"inline-flex\" }}>\r\n                                    <MdAttachment />{\" \"}\r\n                                    <small>send you attachment </small>\r\n                                  </span>\r\n                                )}\r\n                              </p>\r\n                              {nap.uread == false ? (\r\n                                <Label\r\n                                  size=\"mini\"\r\n                                  color=\"blue\"\r\n                                  style={{\r\n                                    marginRight: \"0\",\r\n                                    marginLeft: \"auto\",\r\n                                    height: \"100%\",\r\n                                  }}\r\n                                >\r\n                                  New Message\r\n                                </Label>\r\n                              ) : null}\r\n                            </List.Description>\r\n                          </List.Content>\r\n                        </List.Item>\r\n                      ))}\r\n                    </List>\r\n                  </div>\r\n                </Grid.Column>\r\n              ) : null}\r\n              {showChat ? (\r\n                <Grid.Column\r\n                  className=\"gridHead1\"\r\n                  floated=\"right\"\r\n                  mobile={16}\r\n                  tablet={16}\r\n                  computer={12}\r\n                  centered\r\n                  style={{ padding: \"14px 0 0 0\", height: \"90%\" }}\r\n                >\r\n                  <div>\r\n                    {chat.body ? (\r\n                      <Chatarea chat={chat} onNameChange={setShowChat} />\r\n                    ) : (\r\n                      <Empty />\r\n                    )}\r\n                  </div>\r\n                </Grid.Column>\r\n              ) : null}\r\n            </Grid>\r\n          )}\r\n        </div>\r\n      </>\r\n    );\r\n  } else {\r\n    return (\r\n      <>\r\n        <div style={{ height: \"100%\" }}>\r\n          <Grid fluid={true}>\r\n            <Grid.Column\r\n              floated=\"left\"\r\n              mobile={16}\r\n              tablet={16}\r\n              computer={4}\r\n              style={{\r\n                marginTop: \"20px\",\r\n                border: \"0 1px 0 0\",\r\n                boxShadow: \"0px 0px 1px rgb(141, 139, 139)\",\r\n                // backgroundColor: \"yellow\",\r\n                height: \"100%\",\r\n              }}\r\n            >\r\n              <div style={{ position: \"-webkit-sticky\" }}>\r\n                <List>\r\n                  {listChat.map((nap, key) => (\r\n                    <List.Item\r\n                      id={nap.id}\r\n                      onClick={(e) => click(nap.id)}\r\n                      key={key}\r\n                    >\r\n                      <Image avatar src={nap.ppic} />\r\n                      <List.Content style={{ width: \"250px\" }}>\r\n                        <div\r\n                          style={{\r\n                            display: \"inline-flex\",\r\n                            // backgroundColor: \"red\",\r\n                            width: \"250px\",\r\n                          }}\r\n                        >\r\n                          <List.Header as=\"a\">{nap.pname} </List.Header>\r\n                          <p style={{ marginRight: \"0\", marginLeft: \"auto\" }}>\r\n                            <small\r\n                              style={{ color: nap.uread ? \"gray\" : \"black\" }}\r\n                            >\r\n                              {\" \"}\r\n                              {getmsgtime(\r\n                                JSON.parse(nap.body[nap.body.length - 1])\r\n                                  .timestamp\r\n                              )}\r\n                            </small>\r\n                          </p>\r\n                        </div>\r\n\r\n                        <List.Description\r\n                          style={{\r\n                            display: \"inline-flex\",\r\n                            width: \"250px\",\r\n                            height: \"100%\",\r\n                            //  backgroundColor: \"red\",\r\n                          }}\r\n                        >\r\n                          <p style={{ color: nap.uread ? \"gray\" : \"black\" }}>\r\n                            {ValidURL(nap.body[nap.body.length - 1]) ==\r\n                            false ? (\r\n                              msgdot(\r\n                                JSON.parse(nap.body[nap.body.length - 1]).msg,\r\n                                24\r\n                              )\r\n                            ) : (\r\n                              <span style={{ display: \"inline-flex\" }}>\r\n                                <MdAttachment />{\" \"}\r\n                                <small>send you attachment </small>\r\n                              </span>\r\n                            )}\r\n                          </p>\r\n                          {nap.uread == false ? (\r\n                            <Label\r\n                              size=\"mini\"\r\n                              color=\"blue\"\r\n                              style={{\r\n                                marginRight: \"0\",\r\n                                marginLeft: \"auto\",\r\n                                height: \"100%\",\r\n                              }}\r\n                            >\r\n                              New Message\r\n                            </Label>\r\n                          ) : null}\r\n                        </List.Description>\r\n                      </List.Content>\r\n                    </List.Item>\r\n                  ))}\r\n                </List>\r\n              </div>\r\n            </Grid.Column>\r\n\r\n            <Grid.Column\r\n              floated=\"right\"\r\n              mobile={16}\r\n              tablet={16}\r\n              computer={12}\r\n              centered\r\n              style={{ padding: \"14px 0 0 0\", height: \"90%\" }}\r\n            >\r\n              <div>{chat.body ? <Chatarea chat={chat} /> : <Empty />}</div>\r\n            </Grid.Column>\r\n          </Grid>\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nfunction Chatarea(props) {\r\n  const history = useHistory();\r\n  const [ordst, setordst] = useState();\r\n  const [image, setimage] = useState([]);\r\n  const [image2, setimage2] = useState([]);\r\n  const [chid, setchid] = useState(\"\");\r\n  const [pdetails, setpdetails] = useState({ businessname: \"business\" });\r\n  const [tempimg, settempimg] = useState([]);\r\n  const [upload, setupload] = useState(false);\r\n  const divRef = useRef(null);\r\n  const [mflag, setmflag] = useState(null);\r\n  const [mimage, setmimage] = useState(null);\r\n  const scrollref = useRef(null);\r\n  const [heights, widths] = useWindowSize();\r\n  const [typemsg, settypemsg] = useState(\"\");\r\n\r\n  db.collection(\"users\")\r\n    .doc(firebase.auth().currentUser.uid)\r\n    .collection(\"adpost\")\r\n    .doc(props.chat.orderid)\r\n    .get()\r\n    .then((snap) => {\r\n      setordst(snap.data().orderstate);\r\n      //console.log(snap.data())\r\n    });\r\n\r\n  useEffect(async () => {\r\n    let data;\r\n    console.log(\"fetching partner details..\");\r\n    data = await getpdetailsbyid(props.chat.partnerid);\r\n    console.log(data);\r\n    setpdetails(data);\r\n    console.log(\"effect1\");\r\n  }, [props.chat.partnerid]);\r\n\r\n  const onKeyDownHandler = (e) => {\r\n    if (e.keyCode === 13) {\r\n      console.log(\"enter key\");\r\n      click(props.chat.id);\r\n    }\r\n  };\r\n\r\n  let chat = [];\r\n  chat = props.chat;\r\n  let onNameChange = props.onNameChange;\r\n  useEffect(async () => {\r\n    console.log(\"new message\");\r\n\r\n    executeScroll();\r\n    console.log(\"effect2\");\r\n    console.log(chat);\r\n  }, [chat.body]);\r\n\r\n  const click = (prop) => {\r\n    if (typemsg != \"\") {\r\n      let newbody = [];\r\n      newbody = chat.body;\r\n\r\n      console.log(\"click\", prop);\r\n      let timestamp = Math.round(+new Date() / 1000);\r\n      var msg2 = {};\r\n      msg2.msg = typemsg;\r\n      msg2.timestamp = timestamp;\r\n      msg2.type = \"text\";\r\n      msg2.sender = \"u\";\r\n      var msg = JSON.stringify(msg2);\r\n      if (msg != \"\") {\r\n        newbody.push(msg);\r\n        db.collection(\"messaging\")\r\n          .doc(prop)\r\n          .update({\r\n            body: newbody,\r\n            createdAt: new Date(),\r\n            pread: false,\r\n          })\r\n          .then(() => {\r\n            settypemsg(\"\");\r\n          });\r\n      }\r\n    }\r\n  };\r\n\r\n  const click2 = (id, msg) => {\r\n    let newbody = [];\r\n    newbody = chat.body;\r\n\r\n    console.log(\"click\");\r\n    let timestamp = Math.round(+new Date() / 1000);\r\n    var msg2 = {};\r\n    msg2.msg = msg;\r\n    msg2.timestamp = timestamp;\r\n    msg2.type = \"photo\";\r\n    msg2.sender = \"u\";\r\n    var msgg = JSON.stringify(msg2);\r\n    newbody.push(msgg);\r\n\r\n    db.collection(\"messaging\")\r\n      .doc(id)\r\n      .update({\r\n        body: newbody,\r\n        createdAt: new Date(),\r\n        pread: false,\r\n      })\r\n      .then(() => {});\r\n  };\r\n  const umread = async () => {\r\n    await db.collection(\"messaging\").doc(chat.id).update({\r\n      uread: true,\r\n    });\r\n    return true;\r\n  };\r\n  function orderstatus(e) {\r\n    console.log(e.target.innerText, e.target.parentElement.id);\r\n    console.log(ordst);\r\n  }\r\n\r\n  const handleInputChange = useCallback(\r\n    (event) => {\r\n      onNameChange(false);\r\n    },\r\n    [onNameChange]\r\n  );\r\n\r\n  const inputFile = useRef(null);\r\n\r\n  const mediashare = (e) => {\r\n    inputFile.current.click();\r\n    console.log(image);\r\n    console.log(image2);\r\n    setchid(props.chat.id);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (upload == true) {\r\n      console.log(\"uploading..\");\r\n      uitf();\r\n    }\r\n    console.log(\"effect4\");\r\n  }, [upload]);\r\n\r\n  async function uitf() {\r\n    let image3 = tempimg;\r\n    for (var i = 0; i < image3.length; i++) {\r\n      let k = Number(i);\r\n      const uploadTask = storage\r\n        .ref(`users/${firebase.auth().currentUser.uid}/chat/${image3[k].name}`)\r\n        .put(image3[k]);\r\n      let upldtask = await uploadTask.on(\r\n        \"state_changed\",\r\n        (snapshot) => {},\r\n        (error) => {\r\n          console.log(error);\r\n          toast.info(error);\r\n        },\r\n        () => {\r\n          storage\r\n            .ref(`users/${firebase.auth().currentUser.uid}/chat/`)\r\n            .child(image3[k].name)\r\n            .getDownloadURL()\r\n            .then((url) => {\r\n              console.log(url);\r\n              // toast.info(url);\r\n              setimage2((temp) => [...temp, url]);\r\n            });\r\n        }\r\n      );\r\n    }\r\n    setupload(false);\r\n    settempimg([]);\r\n    setimage2([]);\r\n  }\r\n\r\n  useEffect(() => {\r\n    console.log(image2);\r\n    if (image2.length > 0) {\r\n      click2(chid, image2[image2.length - 1]);\r\n    }\r\n    console.log(\"effect5\");\r\n  }, [image2]);\r\n\r\n  async function compressimage(e) {\r\n    const options = {\r\n      maxSizeMB: 0.15,\r\n      maxWidthOrHeight: 800,\r\n      useWebWorker: true,\r\n    };\r\n    let cfile;\r\n    setimage([]);\r\n\r\n    for (var i = 0; i < e.target.files.length; i++) {\r\n      let k = Number(i);\r\n      imageCompression(e.target.files[k], options)\r\n        .then((x) => {\r\n          cfile = x;\r\n          settempimg((temp) => [...temp, cfile]);\r\n        })\r\n        .catch(function (error) {\r\n          console.log(error.message);\r\n        });\r\n    }\r\n  }\r\n  async function uploadmedia(e) {\r\n    setimage([]);\r\n    setimage2([]);\r\n    compressimage(e);\r\n  }\r\n  function uploadmediatemp(e) {\r\n    console.log(e);\r\n    compressimage(e);\r\n  }\r\n\r\n  const showimage = (e) => {\r\n    setmflag(true);\r\n    setmimage(e.target.src);\r\n    console.log(e);\r\n  };\r\n\r\n  const pdet = (e, prop) => {\r\n    history.push(`pdetails/${prop}`);\r\n    console.log(prop);\r\n  };\r\n  const vieworder = (prop) => {\r\n    console.log(\"click\", prop);\r\n    history.push(`mybookings/id/${prop}`);\r\n  };\r\n  const delchat = async (prop) => {\r\n    if ((await disablechat(prop)) == 200) toast.info(\"chat deleted\");\r\n    else toast.info(\"unable to delete chat try again later\");\r\n  };\r\n\r\n  async function sharemydet() {\r\n    let details = await sharemydetails(firebase.auth().currentUser.uid);\r\n    console.log(details);\r\n    settypemsg(\r\n      `contact me at name : ${details.name}  phone: ${details.phone} / ${details.altnum}`\r\n    );\r\n  }\r\n\r\n  const [scrollDisplay, setScrolldisplay] = useState(false);\r\n  const [tbody, settbody] = useState([]);\r\n  const myRef = useRef(null);\r\n  const executeScroll = () =>\r\n    myRef.current.scrollIntoView({ behavior: \"smooth\" });\r\n  function scrollhandle(e) {\r\n    const scrolly = scrollref.current.scrollHeight;\r\n    const scrolltop = scrollref.current.scrollTop;\r\n    const clientheight = scrollref.current.clientHeight;\r\n    if (scrolly - scrolltop == clientheight) {\r\n      setScrolldisplay(false);\r\n      if (tbody != chat.body) {\r\n        umread();\r\n        settbody(chat.body);\r\n        console.log(\"message read\");\r\n      }\r\n    } else {\r\n      setScrolldisplay(true);\r\n    }\r\n  }\r\n\r\n  if (widths <= 1000) {\r\n    return (\r\n      <>\r\n        <div style={{ float: \"right\", width: \"100%\", overflowY: \"auto\" }}>\r\n          {/* {showChat ?  */}\r\n          <List className=\"chatHead\" horizontal>\r\n            <List.Item>\r\n              <BiArrowBack\r\n                style={{\r\n                  width: \"50px\",\r\n                  fontSize: \"24px\",\r\n                  background: \"rgba(255, 255, 255, 0.92)\",\r\n                }}\r\n                onClick={handleInputChange}\r\n              />\r\n              <Image avatar src={props.chat.ppic} />\r\n              <List.Content>\r\n                <List.Header>{props.chat.pname}</List.Header>\r\n                computer technician\r\n              </List.Content>\r\n            </List.Item>\r\n            <List.Item style={{ float: \"right\", marginRight: \"20px\" }}>\r\n              <a href={\"tel: +91 \" + pdetails.phone}>\r\n                <MdPhone\r\n                  size=\"1.5rem\"\r\n                  id=\"hgffj\"\r\n                  color=\"black\"\r\n                  style={{ marginRight: \"10px\" }}\r\n                  onClick={console.log(\"phone number clicked\")}\r\n                />\r\n              </a>\r\n              <Dropdown\r\n                item\r\n                icon=\"ellipsis vertical\"\r\n                backgroundColor=\"white\"\r\n                simple\r\n                direction=\"left\"\r\n                color=\"white\"\r\n              >\r\n                <Dropdown.Menu>\r\n                  <Dropdown.Item\r\n                    onClick={(e) => {\r\n                      // alert(\"make a call\");\r\n                      toast.info(`+91 ${pdetails.phone}`);\r\n                      setmimage(`+91 ${pdetails.phone}`);\r\n                    }}\r\n                  >\r\n                    <MdPhone /> Make A Call\r\n                  </Dropdown.Item>\r\n\r\n                  <Dropdown.Item\r\n                    onClick={(e) => {\r\n                      pdet(e, props.chat.partnerid);\r\n                    }}\r\n                  >\r\n                    <MdPerson /> Technician details\r\n                  </Dropdown.Item>\r\n                  <Dropdown.Item\r\n                    onClick={() => {\r\n                      vieworder(props.chat.orderid);\r\n                    }}\r\n                  >\r\n                    <MdRemoveRedEye /> View job\r\n                  </Dropdown.Item>\r\n                  <Dropdown.Divider />\r\n                  <Dropdown.Item\r\n                    onClick={() => {\r\n                      delchat(props.chat.id);\r\n                    }}\r\n                  >\r\n                    <MdDelete /> Delete\r\n                  </Dropdown.Item>\r\n                </Dropdown.Menu>\r\n              </Dropdown>\r\n            </List.Item>\r\n          </List>\r\n          {/* : null} */}\r\n\r\n          {ordst == 0 ? (\r\n            <Button.Group\r\n              style={{ width: \"100%\" }}\r\n              onClick={orderstatus}\r\n              id={props.chat.id}\r\n            >\r\n              <Button>\r\n                <MdThumbDown /> Cancel partner\r\n              </Button>\r\n              <Button.Or />\r\n              <Button primary>\r\n                <MdThumbUp />\r\n                Confirm partner\r\n              </Button>\r\n            </Button.Group>\r\n          ) : null}\r\n\r\n          <div\r\n            className=\"chatdiv\"\r\n            style={{ overflow: \"auto\" }}\r\n            ref={scrollref}\r\n            onScroll={(e) => {\r\n              scrollhandle(e);\r\n            }}\r\n          >\r\n            {chat.body.map((nap, key, array) => {\r\n              var chatobj = JSON.parse(nap);\r\n              return (\r\n                <div className={chatobj.sender == \"u\" ? \"out-chat\" : \"in-chat\"}>\r\n                  <p className={cmpmsg(nap, array[key - 1]) ? \"cmpmsg\" : null}>\r\n                    {cmpmsg(nap, array[key - 1])}\r\n                  </p>\r\n\r\n                  <div\r\n                    className={\r\n                      chatobj.sender == \"u\" ? \"out-chatbox\" : \"in-chatbox\"\r\n                    }\r\n                    key={key}\r\n                  >\r\n                    {chatobj.type == \"text\" ? (\r\n                      <p\r\n                        className={\r\n                          chatobj.sender == \"u\" ? \"chatList\" : \"chatListp\"\r\n                        }\r\n                      >\r\n                        {chatobj.msg}\r\n\r\n                        <small\r\n                          className={\r\n                            chatobj.sender == \"u\" ? \"textTime\" : \"textTimep\"\r\n                          }\r\n                        >\r\n                          {\" \"}\r\n                          {getmsgtime(chatobj.timestamp)}\r\n                        </small>\r\n                      </p>\r\n                    ) : chatobj.type == \"photo\" ? (\r\n                      <Image\r\n                        floated={chatobj.sender == \"u\" ? \"right\" : \"left\"}\r\n                        className=\"chatPic\"\r\n                        onClick={showimage}\r\n                        src={chatobj.msg}\r\n                        size=\"small\"\r\n                      />\r\n                    ) : null}\r\n                  </div>\r\n                  {/* <UniversalM /> */}\r\n                </div>\r\n              );\r\n            })}\r\n\r\n            {JSON.parse(chat.body[chat.body.length - 1]).sender == \"u\" ? (\r\n              <div>\r\n                <p>\r\n                  <small\r\n                    ref={myRef}\r\n                    className={chat.pread ? \"readText\" : \"unreadText\"}\r\n                  >\r\n                    {chat.pread ? \"seen\" : \"unseen\"}\r\n                  </small>\r\n                </p>\r\n              </div>\r\n            ) : (\r\n              <span ref={myRef}></span>\r\n            )}\r\n            {scrollDisplay ? (\r\n              <IoIosArrowDropdown\r\n                size=\"2rem\"\r\n                color=\"007bff\"\r\n                onClick={executeScroll}\r\n                style={{\r\n                  position: \"fixed\",\r\n                  bottom: \"60px\",\r\n                  float: \"right\",\r\n                  right: \"10px\",\r\n                  width: \"50px\",\r\n                  backgroundColor: \"white\",\r\n                  borderRadius: \"10px\",\r\n                }}\r\n              />\r\n            ) : null}\r\n          </div>\r\n\r\n          <Form.Group\r\n            className=\"chat-form\"\r\n            style={{\r\n              position: \"fixed\",\r\n              bottom: \"2px\",\r\n              margin: \"0\",\r\n              backgroundColor: \"#f6f6f6\",\r\n            }}\r\n          >\r\n            <Row className=\"align-items-center\" noGutters>\r\n              <input\r\n                type=\"file\"\r\n                id={props.chat.id}\r\n                ref={inputFile}\r\n                accept=\"image/x-png,image/gif,image/jpeg\"\r\n                onChange={uploadmediatemp}\r\n                style={{ display: \"none\" }}\r\n                multiple\r\n              />\r\n\r\n              <Col className=\"chatformicons\" xs={2}>\r\n                {\" \"}\r\n                <MdAddToPhotos\r\n                  style={{ marginLeft: \"20px\" }}\r\n                  onClick={mediashare}\r\n                  size=\"2rem\"\r\n                  color=\"gray\"\r\n                />\r\n                <Dropdown style={{ marginLeft: \"15px\" }}>\r\n                  <Dropdown.Menu>\r\n                    <Dropdown.Item\r\n                      icon=\"address card\"\r\n                      text=\"Share your Contact Details\"\r\n                      onClick={sharemydet}\r\n                    />\r\n                    <Dropdown.Item icon=\"trash\" text=\"Move to trash\" />\r\n                    <Dropdown.Divider />\r\n                    <Dropdown.Item text=\"E-mail Collaborators\" />\r\n                  </Dropdown.Menu>\r\n                </Dropdown>\r\n              </Col>\r\n              <Col xs={6}>\r\n                <Form.Control\r\n                  type=\"text\"\r\n                  placeholder=\"Message Here\"\r\n                  value={typemsg}\r\n                  onChange={(e) => {\r\n                    settypemsg(e.target.value);\r\n                  }}\r\n                  id=\"msgtext\"\r\n                />\r\n              </Col>\r\n              <Col className=\"chatformicons\" xs={4}>\r\n                <Button\r\n                  primary\r\n                  style={{ marginLeft: \"20px\" }}\r\n                  className=\"chatSend\"\r\n                  id={props.chat.id}\r\n                  ref={divRef}\r\n                  onClick={(e) => click(props.chat.id)}\r\n                >\r\n                  Send\r\n                  <MdSend />\r\n                </Button>\r\n              </Col>\r\n            </Row>\r\n          </Form.Group>\r\n          <ImageModal\r\n            className=\"uploadModal\"\r\n            image={mimage}\r\n            setflag={setmimage}\r\n          />\r\n          <ImageModal2\r\n            image={tempimg}\r\n            flag={setupload}\r\n            setimage={settempimg}\r\n            addmore={mediashare}\r\n            removeitems={removeitems}\r\n          />\r\n        </div>\r\n      </>\r\n    );\r\n  } else {\r\n    return (\r\n      <>\r\n        <div style={{ float: \"right\", width: \"100%\", overflowY: \"auto\" }}>\r\n          <List className=\"chatHead\" horizontal>\r\n            <List.Item\r\n              onClick={(e) => {\r\n                pdet(e, props.chat.partnerid);\r\n              }}\r\n              style={{ cursor: \"pointer\" }}\r\n            >\r\n              <Image avatar src={pdetails.profilepic} />\r\n              <List.Content>\r\n                <List.Header>\r\n                  <b style={{ fontSize: \"19px\" }}>{pdetails.name}</b>{\" \"}\r\n                  <small>\r\n                    {pdetails.rate > 5 ? pdetails.rate / 20 : pdetails.rate}\r\n                    <MdStar color=\"yellow\" size=\"1.1rem\" />\r\n                  </small>\r\n                </List.Header>\r\n                {/* {pdetails.businessname} */}\r\n                Title here\r\n              </List.Content>\r\n            </List.Item>\r\n            <List.Item style={{ float: \"right\", marginRight: \"20px\" }}>\r\n              <a href={\"tel: +91 \" + pdetails.phone}>\r\n                <MdPhone\r\n                  size=\"1.5rem\"\r\n                  id=\"hgffj\"\r\n                  color=\"black\"\r\n                  style={{ marginRight: \"10px\" }}\r\n                  onClick={console.log(\"phone number clicked\")}\r\n                />\r\n              </a>\r\n\r\n              <Dropdown\r\n                item\r\n                icon=\"ellipsis vertical\"\r\n                backgroundColor=\"white\"\r\n                simple\r\n                direction=\"left\"\r\n                color=\"white\"\r\n              >\r\n                <Dropdown.Menu>\r\n                  <Dropdown.Item\r\n                    onClick={(e) => {\r\n                      // alert(\"make a call\");\r\n                      toast.info(`+91 ${pdetails.phone}`);\r\n                      setmimage(`+91 ${pdetails.phone}`);\r\n                    }}\r\n                  >\r\n                    <MdPhone /> Make A Call\r\n                  </Dropdown.Item>\r\n\r\n                  <Dropdown.Item\r\n                    onClick={(e) => {\r\n                      pdet(e, props.chat.partnerid);\r\n                    }}\r\n                  >\r\n                    <MdPerson /> Technician details\r\n                  </Dropdown.Item>\r\n                  <Dropdown.Item\r\n                    onClick={() => {\r\n                      vieworder(props.chat.orderid);\r\n                    }}\r\n                  >\r\n                    <MdRemoveRedEye /> View job\r\n                  </Dropdown.Item>\r\n                  <Dropdown.Divider />\r\n                  <Dropdown.Item\r\n                    onClick={() => {\r\n                      delchat(props.chat.id);\r\n                    }}\r\n                  >\r\n                    <MdDelete /> Delete\r\n                  </Dropdown.Item>\r\n                </Dropdown.Menu>\r\n              </Dropdown>\r\n            </List.Item>\r\n          </List>\r\n          {ordst == 0 ? (\r\n            <Button.Group\r\n              style={{ width: \"100%\" }}\r\n              onClick={orderstatus}\r\n              id={props.chat.id}\r\n            >\r\n              <Button>\r\n                <MdThumbDown /> Cancel partner\r\n              </Button>\r\n              <Button.Or />\r\n              <Button primary>\r\n                <MdThumbUp />\r\n                Confirm partner\r\n              </Button>\r\n            </Button.Group>\r\n          ) : null}\r\n\r\n          <div\r\n            className=\"chatdiv\"\r\n            ref={scrollref}\r\n            onScroll={(e) => {\r\n              scrollhandle(e);\r\n            }}\r\n          >\r\n            {chat.body.map((nap, key, array) => {\r\n              var chatobj = JSON.parse(nap);\r\n              return (\r\n                <div className={chatobj.sender == \"u\" ? \"out-chat\" : \"in-chat\"}>\r\n                  <p className={cmpmsg(nap, array[key - 1]) ? \"cmpmsg\" : null}>\r\n                    {cmpmsg(nap, array[key - 1])}\r\n                  </p>\r\n\r\n                  <div\r\n                    className={\r\n                      chatobj.sender == \"u\" ? \"out-chatbox\" : \"in-chatbox\"\r\n                    }\r\n                    key={key}\r\n                  >\r\n                    {chatobj.type == \"text\" ? (\r\n                      <p\r\n                        className={\r\n                          chatobj.sender == \"u\" ? \"chatList\" : \"chatListp\"\r\n                        }\r\n                      >\r\n                        {chatobj.msg}\r\n\r\n                        <small\r\n                          className={\r\n                            chatobj.sender == \"u\" ? \"textTime\" : \"textTimep\"\r\n                          }\r\n                        >\r\n                          {\" \"}\r\n                          {getmsgtime(chatobj.timestamp)}\r\n                        </small>\r\n                      </p>\r\n                    ) : chatobj.type == \"photo\" ? (\r\n                      <Image\r\n                        floated={chatobj.sender == \"u\" ? \"right\" : \"left\"}\r\n                        className=\"chatPic\"\r\n                        onClick={showimage}\r\n                        src={chatobj.msg}\r\n                        size=\"small\"\r\n                      />\r\n                    ) : null}\r\n                  </div>\r\n                </div>\r\n              );\r\n            })}\r\n\r\n            {JSON.parse(chat.body[chat.body.length - 1]).sender == \"u\" ? (\r\n              <div>\r\n                <p>\r\n                  <small\r\n                    ref={myRef}\r\n                    className={chat.pread ? \"readText\" : \"unreadText\"}\r\n                  >\r\n                    {chat.pread ? \"seen\" : \"unseen\"}\r\n                  </small>\r\n                </p>\r\n              </div>\r\n            ) : (\r\n              <span ref={myRef}></span>\r\n            )}\r\n            {scrollDisplay ? (\r\n              <IoIosArrowDropdown\r\n                onClick={executeScroll}\r\n                size=\"2rem\"\r\n                color=\"007bff\"\r\n                style={{\r\n                  position: \"fixed\",\r\n                  bottom: \"80px\",\r\n                  float: \"right\",\r\n                  right: \"0px\",\r\n                  width: \"50px\",\r\n                  backgroundColor: \"white\",\r\n                  borderRadius: \"10px\",\r\n                }}\r\n              />\r\n            ) : null}\r\n          </div>\r\n\r\n          <Form.Group\r\n            className=\"chat-form\"\r\n            onKeyDown={onKeyDownHandler}\r\n            style={{\r\n              position: \"fixed\",\r\n              bottom: \"2px\",\r\n              margin: \"0\",\r\n              backgroundColor: \"#f6f6f6\",\r\n              minHeight: \"50px\",\r\n            }}\r\n          >\r\n            <Row style={{ margin: \"0\", marginTop: \"20px\" }}>\r\n              <input\r\n                type=\"file\"\r\n                id={props.chat.id}\r\n                ref={inputFile}\r\n                accept=\"image/x-png,image/gif,image/jpeg\"\r\n                onChange={uploadmediatemp}\r\n                style={{ display: \"none\" }}\r\n                multiple\r\n              />\r\n\r\n              <Col xs={2}>\r\n                {\" \"}\r\n                <MdAddToPhotos\r\n                  onClick={mediashare}\r\n                  style={{ cursor: \"pointer\" }}\r\n                  size=\"2rem\"\r\n                  color=\"gray\"\r\n                />\r\n                <Dropdown text=\"More\" style={{ marginLeft: \"15px\" }}>\r\n                  <Dropdown.Menu>\r\n                    <Dropdown.Item\r\n                      icon=\"address card\"\r\n                      text=\"Share your Contact Details\"\r\n                      onClick={sharemydet}\r\n                    />\r\n                    <Dropdown.Item icon=\"trash\" text=\"Move to trash\" />\r\n                    <Dropdown.Divider />\r\n                    <Dropdown.Item text=\"E-mail Collaborators\" />\r\n                  </Dropdown.Menu>\r\n                </Dropdown>\r\n              </Col>\r\n              <Col xs={8} style={{ marginRight: \"0\" }}>\r\n                <Form.Control\r\n                  type=\"text\"\r\n                  //   style={{ height: \"100px\" }}\r\n                  placeholder=\"Message Here\"\r\n                  value={typemsg}\r\n                  onChange={(e) => {\r\n                    settypemsg(e.target.value);\r\n                  }}\r\n                  id=\"msgtext\"\r\n                />\r\n              </Col>\r\n              <Col xs={2} style={{ marginRight: \"0\" }}>\r\n                <Button\r\n                  primary\r\n                  className=\"chatSend\"\r\n                  id={props.chat.id}\r\n                  ref={divRef}\r\n                  onClick={(e) => click(props.chat.id)}\r\n                >\r\n                  Sendw\r\n                  <MdSend />\r\n                </Button>\r\n              </Col>\r\n            </Row>\r\n          </Form.Group>\r\n          <ImageModal\r\n            className=\"uploadModal\"\r\n            image={mimage}\r\n            setflag={setmimage}\r\n          />\r\n          <ImageModal2\r\n            image={tempimg}\r\n            flag={setupload}\r\n            setimage={settempimg}\r\n            addmore={mediashare}\r\n            removeitems={removeitems}\r\n          />\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n\r\n  function cmpmsg(msg1, msg2) {\r\n    let temp1 = JSON.parse(msg1);\r\n    let temp2 = msg2 == undefined ? JSON.parse(msg1) : JSON.parse(msg2);\r\n\r\n    let ct = Number(temp1.timestamp);\r\n    let pt = Number(temp2.timestamp);\r\n    if (gettbystamps(ct, \"date\") != gettbystamps(pt, \"date\")) {\r\n      let temp = gettbystamps(ct, \"fulldate\");\r\n      return temp;\r\n    } else if (msg2 == undefined) {\r\n      let temp = gettbystamps(ct, \"fulldate\");\r\n      return temp;\r\n    } else return null;\r\n  }\r\n\r\n  function removeitems(data) {\r\n    console.log(data);\r\n    settempimg(data);\r\n  }\r\n}\r\nfunction getmsgtime(nap) {\r\n  // let stamps = countSpecial(nap);\r\n  let msgtime = gettbystamps(Number(nap), \"time\");\r\n  return msgtime;\r\n}\r\nfunction Headings() {\r\n  return (\r\n    <div className=\"resHead\">\r\n      <Row style={{ width: \"100%\", textAlign: \"center\" }}>\r\n        <Col>\r\n          <Link to=\"/chat\" style={{ color: \"gray\", textDecoration: \"none\" }}>\r\n            <h2>\r\n              <MdFeaturedPlayList size=\"2.1rem\" color=\"gray\" /> Responses\r\n            </h2>\r\n          </Link>\r\n        </Col>\r\n        <Col style={{ borderBottom: \"3px solid #007bff\", marginBottom: \"0\" }}>\r\n          <Link\r\n            to=\"/chats-section\"\r\n            style={{ color: \"#007bff\", textDecoration: \"none\" }}\r\n          >\r\n            <h2>\r\n              {\" \"}\r\n              <MdChatBubble size=\"2.1rem\" color=\"#007bff\" /> Chats\r\n            </h2>\r\n          </Link>\r\n        </Col>\r\n      </Row>\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction ImageModal(props) {\r\n  const [open, setOpen] = useState(false);\r\n  var image = props.image;\r\n  var setflag = props.setflag;\r\n\r\n  const handleInputChange = useCallback(\r\n    (event) => {\r\n      setflag(false);\r\n    },\r\n    [setflag]\r\n  );\r\n\r\n  const closemodal = () => {\r\n    handleInputChange();\r\n    setOpen(false);\r\n  };\r\n  useEffect(() => {\r\n    if (image != false && image != null) {\r\n      setOpen(true);\r\n    }\r\n    console.log(image);\r\n  }, [image]);\r\n\r\n  return (\r\n    <Modal\r\n      basic\r\n      onClose={closemodal}\r\n      onOpen={() => setOpen(true)}\r\n      open={open}\r\n      className=\"uploadModal\"\r\n    >\r\n      {/* <Modal.Header>Photo</Modal.Header> */}\r\n      {image != null ? (\r\n        <Modal.Content image>\r\n          {ValidURL(image) ? (\r\n            <Image centered src={image} wrapped />\r\n          ) : (\r\n            <Modal.Description>\r\n              <p>{image}</p>\r\n            </Modal.Description>\r\n          )}\r\n        </Modal.Content>\r\n      ) : null}\r\n      <Modal.Actions>\r\n        <Button basic color=\"red\" inverted onClick={closemodal}>\r\n          <MdClose /> Close\r\n        </Button>\r\n      </Modal.Actions>\r\n    </Modal>\r\n  );\r\n}\r\n\r\nfunction ImageModal2(props) {\r\n  const [open, setOpen] = useState(false);\r\n  const [image, setimage] = useState([]);\r\n\r\n  useEffect(() => {\r\n    setimage(props.image);\r\n    console.log(\"images change\");\r\n  }, [props.image]);\r\n\r\n  useEffect(() => {\r\n    if (image.length > 0) setOpen(true);\r\n    if (image.length <= 0) setOpen(false);\r\n    console.log(image);\r\n  }, [image]);\r\n\r\n  const handleInputChange = useCallback(\r\n    (event) => {\r\n      props.flag(true);\r\n      setOpen(false);\r\n    },\r\n    [props.flag]\r\n  );\r\n\r\n  const sekhararr = (e) => {\r\n    console.log(e.target.parentElement.parentElement.id);\r\n    let ritem = image[e.target.parentElement.parentElement.id];\r\n\r\n    props.setimage(image.filter((e) => e !== ritem));\r\n  };\r\n  return (\r\n    <Modal\r\n      basic\r\n      onClose={() => setOpen(false)}\r\n      onOpen={() => setOpen(true)}\r\n      open={open}\r\n      centered\r\n      size=\"tiny\"\r\n      className=\"uploadModal\"\r\n    >\r\n      <Modal.Header>Upload image</Modal.Header>\r\n      <Modal.Content scrolling>\r\n        {image.length > 0 ? (\r\n          <Image.Group size=\"small\">\r\n            {image.map((nap, key) => (\r\n              <Image\r\n                key={key}\r\n                id={key}\r\n                label={{\r\n                  as: \"a\",\r\n                  corner: \"right\",\r\n                  icon: \"trash\",\r\n                  onClick: sekhararr,\r\n                }}\r\n                src={URL.createObjectURL(nap)}\r\n              />\r\n            ))}\r\n            <RiImageAddFill\r\n              onClick={props.addmore}\r\n              color=\"gray\"\r\n              style={{ cursor: \"pointer\" }}\r\n            />\r\n          </Image.Group>\r\n        ) : null}\r\n      </Modal.Content>\r\n\r\n      <Modal.Actions>\r\n        <Button\r\n          onClick={() => {\r\n            setOpen(false);\r\n          }}\r\n        >\r\n          Cancel\r\n        </Button>\r\n        <Button onClick={handleInputChange} positive>\r\n          Send\r\n        </Button>\r\n      </Modal.Actions>\r\n    </Modal>\r\n  );\r\n}\r\n\r\nfunction Empty() {\r\n  return <div></div>;\r\n}\r\n","D:\\spotmies\\web\\firstapp\\src\\components\\views\\contacts\\contact.jsx",["324","325"],"import React, { Component } from \"react\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\n\r\nimport GoogleMapReact from \"google-map-react\";\r\nimport { apiPostPut } from \"../../../mservices/contactUs\";\r\nimport { toast } from \"react-toastify\";\r\nimport { MdFeedback } from \"react-icons/md\";\r\nimport { Form } from \"react-bootstrap\";\r\nimport { Button } from \"semantic-ui-react\";\r\n\r\n//feedback form\r\nimport { FeedbackForm } from \"../../reusable/Modal\";\r\n\r\nconst AnyReactComponent = ({ text }) => <div>{text}</div>;\r\n\r\nclass SimpleMap extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      details: {\r\n        email: null,\r\n        name: null,\r\n        phone: null,\r\n        sub: null,\r\n        message: null,\r\n        date: Math.round(+new Date() / 1000),\r\n      },\r\n      open: false,\r\n      sbtn: false,\r\n      wWidth: window.innerWidth,\r\n    };\r\n    this.handlec = this.handlec.bind(this);\r\n    this.submitForm = this.submitForm.bind(this);\r\n  }\r\n\r\n  handleResize = (e) => {\r\n    this.setState({ wWidth: window.innerWidth });\r\n  };\r\n  closeModal = () => {\r\n    this.setState({ open: false });\r\n  };\r\n  componentDidMount() {\r\n    window.addEventListener(\"resize\", this.handleResize);\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    window.addEventListener(\"resize\", this.handleResize);\r\n  }\r\n\r\n  static defaultProps = {\r\n    center: {\r\n      lat: 59.95,\r\n      lng: 30.33,\r\n    },\r\n    zoom: 11,\r\n  };\r\n\r\n  handlec(e) {\r\n    let nameId = e.target.name;\r\n    let value = e.target.value;\r\n    //console.log(value,nameId);\r\n    let temp = this.state.details;\r\n    temp[nameId] = value;\r\n    temp[\"date\"] = new Date().valueOf();\r\n    this.setState({\r\n      details: temp,\r\n    });\r\n  }\r\n\r\n  async submitForm(e) {\r\n    this.setState({\r\n      sbtn: true,\r\n    });\r\n    e.preventDefault();\r\n    let temp = {};\r\n    temp[\"body\"] = JSON.stringify(this.state.details);\r\n    let result = await apiPostPut(temp, \"contactUs\");\r\n    if (result.status == 200) {\r\n      this.clearfield();\r\n      toast.info(\"Thank you we will contact you soon...\");\r\n    } else {\r\n      toast.info(\"please try again\");\r\n      this.setState({\r\n        sbtn: false,\r\n      });\r\n    }\r\n  }\r\n\r\n  clearfield() {\r\n    let tempd = this.state.details;\r\n    tempd = {\r\n      email: \"\",\r\n      name: \"\",\r\n      phone: \"\",\r\n      sub: \"\",\r\n      message: \"\",\r\n      date: new Date(),\r\n    };\r\n    this.setState({\r\n      details: tempd,\r\n      sbtn: false,\r\n    });\r\n  }\r\n\r\n  render() {\r\n    let det = this.state.details;\r\n\r\n    return (\r\n      //   Important! Always set the container height explicitly\r\n      <div\r\n        style={{\r\n          height: \"100vh\",\r\n          width: \"95%\",\r\n          marginLeft: \"2%\",\r\n          alignItems: \"center\",\r\n          marginTop: \"50px\",\r\n        }}\r\n      >\r\n        <GoogleMapReact\r\n          // bootstrapURLKeys={{ key: \"AIzaSyDUAqHmXwTZU1caOWJ-LC-dBl3R7uzOkPo\" }}\r\n          bootstrapURLKeys={{ key: \"AIzaSyAJuo4r4xk6TkcDOCMk16G_AIIBBbOPV88\" }}\r\n          defaultCenter={this.props.center}\r\n          defaultZoom={this.props.zoom}\r\n        >\r\n          <AnyReactComponent lat={17.686815} lng={83.218483} text=\"SPOTMIES\" />\r\n        </GoogleMapReact>\r\n        <div\r\n          style={{\r\n            marginTop: \"30px\",\r\n            width: this.state.wWidth > 625 ? \"50%\" : \"85%\",\r\n          }}\r\n          className=\"contactAddress\"\r\n        >\r\n          <h2>Our Phones are waiting for your call!</h2>\r\n          <hr></hr>\r\n          <h3>Email:</h3>\r\n          <p>spotmies@gmail.com</p>\r\n          <p>modernsilpi@gmail.com</p>\r\n          <h3>Mobile no:</h3>\r\n          <p>9502831877</p>\r\n          <p>8019933883</p>\r\n          <h3>Address:</h3>\r\n          <p>\r\n            D.No: 58-38-10,<br></br> KRM Colony,<br></br> Visakhapatnam,\r\n            <br></br> Andhra Pradesh,<br></br> 530027.\r\n          </p>\r\n        </div>\r\n        <hr></hr>\r\n        <div style={{ paddingBottom: \"5px\" }}>\r\n          <Form\r\n            className=\"contactForm\"\r\n            style={{ width: this.state.wWidth > 625 ? \"50%\" : \"85%\" }}\r\n            onSubmit={this.submitForm}\r\n          >\r\n            <h2>Wanna say something?</h2>\r\n            <Form.Group controlId=\"exampleForm.ControlInput1\">\r\n              <Form.Label>Email address</Form.Label>\r\n              <Form.Control\r\n                type=\"email\"\r\n                placeholder=\"name@example.com\"\r\n                value={det.email}\r\n                name=\"email\"\r\n                onChange={this.handlec}\r\n                required\r\n              />\r\n            </Form.Group>\r\n            <Form.Group controlId=\"exampleForm.ControlInput1\">\r\n              <Form.Label>Name</Form.Label>\r\n              <Form.Control\r\n                type=\"text\"\r\n                placeholder=\"pallavi mella\"\r\n                name=\"name\"\r\n                value={det.name}\r\n                onChange={this.handlec}\r\n                required\r\n              />\r\n            </Form.Group>\r\n            <Form.Group controlId=\"exampleForm.ControlInput1\">\r\n              <Form.Label>Mobile no:</Form.Label>\r\n              <Form.Control\r\n                type=\"number\"\r\n                placeholder=\"9999999999\"\r\n                name=\"phone\"\r\n                value={det.phone}\r\n                onChange={this.handlec}\r\n                required\r\n              />\r\n            </Form.Group>\r\n\r\n            <Form.Group controlId=\"exampleForm.ControlTextarea1\">\r\n              <Form.Label>Subject</Form.Label>\r\n              <Form.Control\r\n                as=\"textarea\"\r\n                placeholder=\"ex:- want to approach spotmies\"\r\n                rows={1}\r\n                name=\"sub\"\r\n                value={det.sub}\r\n                onChange={this.handlec}\r\n              />\r\n            </Form.Group>\r\n            <Form.Group controlId=\"exampleForm.ControlTextarea1\">\r\n              <Form.Label>Message</Form.Label>\r\n              <Form.Control\r\n                as=\"textarea\"\r\n                rows={3}\r\n                placeholder=\"put what you want to message\"\r\n                name=\"message\"\r\n                value={det.message}\r\n                onChange={this.handlec}\r\n                required\r\n              />\r\n            </Form.Group>\r\n            {this.state.sbtn == false ? (\r\n              <Button primary type=\"submit\">\r\n                Submit\r\n              </Button>\r\n            ) : (\r\n              <Button loading primary>\r\n                Submit\r\n              </Button>\r\n            )}\r\n          </Form>\r\n        </div>\r\n        <div\r\n          className=\"feedBack \"\r\n          onClick={() => this.setState({ open: true })}\r\n        >\r\n          <MdFeedback color=\"black\" size=\"3rem\" className=\"feedBackIcon\" />\r\n        </div>\r\n        <FeedbackForm open={this.state.open} close={this.closeModal} />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default SimpleMap;\r\n","D:\\spotmies\\web\\firstapp\\src\\components\\views\\rentals\\bikerental.jsx",["326","327","328","329","330","331","332","333","334","335","336","337","338","339","340","341","342","343","344","345","346","347","348","349","350","351","352","353","354","355","356","357","358","359","360","361","362","363","364","365","366","367","368","369"],"D:\\spotmies\\web\\firstapp\\src\\components\\views\\editpost\\editpost2.jsx",["370","371","372","373","374","375","376","377","378","379","380"],"import React, { Component, useRef } from \"react\";\r\n\r\nimport {\r\n  Button,\r\n  Form,\r\n  Input,\r\n  TextArea,\r\n  Card,\r\n  Label,\r\n  Image,\r\n  Modal,\r\n  Menu,\r\n} from \"semantic-ui-react\";\r\n\r\nimport { InputGroup } from \"react-bootstrap\";\r\nimport DatePicker from \"react-datepicker\";\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\n\r\nimport imageCompression from \"browser-image-compression\";\r\n\r\nimport {\r\n  MdLaptopMac,\r\n  MdTv,\r\n  MdEventNote,\r\n  MdEvent,\r\n  MdDriveEta,\r\n  MdFace,\r\n} from \"react-icons/md\";\r\nimport { BiCodeBlock } from \"react-icons/bi\";\r\nimport { FaChalkboardTeacher, FaTools } from \"react-icons/fa\";\r\nimport { IoCameraSharp } from \"react-icons/io5\";\r\nimport firebase from \"../../../firebase\";\r\nimport \"firebase/storage\";\r\nimport { createHashHistory } from \"history\";\r\nimport { useState, useEffect } from \"react\";\r\nimport { toast } from \"react-toastify\";\r\n\r\nimport \"../../../post.css\";\r\n\r\nconst history = createHashHistory();\r\n\r\nconst db = firebase.firestore();\r\nconst storage = firebase.storage();\r\n\r\nvar imgarr = [];\r\nvar jobcate = 1;\r\nlet avoid = 0;\r\nlet avoid2 = 0;\r\n\r\nfunction useTimes() {\r\n  const [postdata, setdata] = useState([]);\r\n  const [posttime, setposttime] = useState([]);\r\n  const [madia, setmadia] = useState([]);\r\n  useEffect(() => {\r\n    //\r\n    firebase.auth().onAuthStateChanged(function (user) {\r\n      if (user) {\r\n        let arr = [];\r\n        let inj = [];\r\n        avoid = 0;\r\n        avoid2 = 0;\r\n        console.log(\"usetime\");\r\n        var personId;\r\n\r\n        personId = window.location.pathname;\r\n        personId = personId.replace(\"/mybookings/id/edit/\", \"\");\r\n        console.log(personId);\r\n        db.collection(\"users\")\r\n          .doc(firebase.auth().currentUser.uid)\r\n          .collection(\"adpost\")\r\n          .doc(personId)\r\n          .get()\r\n          .then((snap) => {\r\n            console.log(snap.data().posttime.toDate());\r\n            setdata(snap.data());\r\n            arr.push(String(snap.data().posttime.toDate()));\r\n            arr.push(snap.data().schedule.toDate());\r\n            setposttime(arr);\r\n            inj.push(snap.data().media);\r\n            setmadia(inj);\r\n            document.querySelector(\"#nameofserv\").value = snap.data().problem;\r\n            document.querySelector(\"#sdesc\").value = snap.data().description;\r\n            document.querySelector(\"#sprice\").value = snap.data().money;\r\n            snap.data().media.map((nap) => src.push(nap));\r\n          })\r\n          .then(() => {});\r\n      }\r\n    });\r\n    //\r\n  }, []);\r\n  return { postdata, posttime };\r\n}\r\n\r\nexport default function newpost2() {\r\n  return (\r\n    <div>\r\n      <Postnew />\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction Postnew() {\r\n  return (\r\n    <div style={{ paddingTop: \"20px\" }}>\r\n      <Card centered id=\"formcard\">\r\n        <Card.Content>\r\n          <Card.Header style={{ textAlign: \"center\" }}>New Post</Card.Header>\r\n        </Card.Content>\r\n        <Card.Content>\r\n          {/* <Postform data={src}/> */}\r\n          <Postform2 />\r\n        </Card.Content>\r\n      </Card>\r\n      <ModalExampleModal />\r\n    </div>\r\n  );\r\n}\r\nvar src = [];\r\n\r\nfunction Postform2() {\r\n  const { postdata, posttime } = useTimes();\r\n  console.log(postdata);\r\n  const [startDate, setState] = useState(\"\");\r\n  const [arrayvar, setarrayvar] = useState([]);\r\n  const [arrayvar2, setarrayvar2] = useState([]);\r\n  const [image, setimage] = useState([]);\r\n  const [progress, setprogress] = useState(0);\r\n  const photoUpload = useRef(null);\r\n\r\n  //console.log(postdata)\r\n\r\n  if (posttime[1] && avoid2 == 0) {\r\n    console.log(posttime[1]);\r\n    setState(posttime[1]);\r\n    setarrayvar2(postdata.media);\r\n    console.log(\"setstate\");\r\n    avoid2 = 1;\r\n  }\r\n  function handleChange(date) {\r\n    setState(date);\r\n    console.log(date);\r\n  }\r\n\r\n  const handleSubmit = (newar) => {\r\n    // event.preventDefault();\r\n    console.log(arrayvar);\r\n    let schedule = startDate;\r\n    let name = document.querySelector(\"#nameofserv\").value;\r\n    let desc = document.querySelector(\"#sdesc\").value;\r\n    // let cat=document.querySelector('#scate').value\r\n    let cat = jobcate;\r\n    let price = document.querySelector(\"#sprice\").value;\r\n    if (desc == NaN) desc = \"\";\r\n    if (cat == \"true\") {\r\n      //alert(\"please select category\");\r\n      toast.warning(\"please select category\");\r\n    } else {\r\n      cat = parseInt(cat);\r\n      price = parseInt(price);\r\n      console.log(name, desc, cat, price, imgarr, schedule);\r\n      const newpost = db\r\n        .collection(\"users\")\r\n        .doc(firebase.auth().currentUser.uid)\r\n        .collection(\"adpost\")\r\n        .doc(postdata.orderid);\r\n      var d = new Date();\r\n      console.log(d);\r\n      newpost\r\n        .update({\r\n          job: cat,\r\n          problem: name,\r\n          description: desc,\r\n          money: price,\r\n          media: newar,\r\n          request: \"nothing\",\r\n          utime: d,\r\n          schedule: schedule,\r\n        })\r\n        .then(() => {\r\n          return db.collection(\"allads\").doc(newpost.id).update({\r\n            job: cat,\r\n            problem: name,\r\n            description: desc,\r\n            money: price,\r\n            media: arrayvar,\r\n            utime: d,\r\n            schedule: schedule,\r\n          });\r\n        })\r\n        .then(() => {\r\n          toast.success(\"post added successfully\");\r\n          history.go(-1);\r\n          imgarr = [];\r\n        });\r\n    }\r\n  };\r\n\r\n  const handleChangeg = (e) => {\r\n    console.log(\"console handle change\");\r\n    const options = {\r\n      maxSizeMB: 0.15,\r\n      maxWidthOrHeight: 800,\r\n      useWebWorker: true,\r\n    };\r\n    let cfile;\r\n\r\n    for (var i = 0; i < e.target.files.length; i++) {\r\n      let k = Number(i);\r\n\r\n      imageCompression(e.target.files[k], options)\r\n        .then((x) => {\r\n          cfile = x;\r\n\r\n          setimage((nap) => [...nap, cfile]);\r\n          document.getElementById(\"upldbtn\").style.display = \"block\";\r\n        })\r\n        .catch(function (error) {\r\n          console.log(error.message);\r\n        });\r\n    }\r\n  };\r\n  useEffect(() => {\r\n    if (arrayvar.length > 0) {\r\n      if (arrayvar.length == image.length) {\r\n        let newar = arrayvar2.concat(arrayvar);\r\n        setarrayvar(newar);\r\n        handleSubmit(newar);\r\n      }\r\n    }\r\n  }, [arrayvar]);\r\n\r\n  const handleUpload = (e) => {\r\n    e.preventDefault();\r\n\r\n    if (image.length > 0) {\r\n      for (var i = 0; i < image.length; i++) {\r\n        let k = Number(i);\r\n        const uploadTask = storage\r\n          .ref(\r\n            `users/${firebase.auth().currentUser.uid}/adpost/${image[k].name}`\r\n          )\r\n          .put(image[k]);\r\n        uploadTask.on(\r\n          \"state_changed\",\r\n          (snapshot) => {\r\n            const progress = Math.round(\r\n              (snapshot.bytesTransferred / snapshot.totalBytes) * 100\r\n            );\r\n            setprogress(progress);\r\n          },\r\n          (error) => {\r\n            console.log(error);\r\n          },\r\n          () => {\r\n            storage\r\n              .ref(`users/${firebase.auth().currentUser.uid}/adpost/`)\r\n              .child(image[k].name)\r\n              .getDownloadURL()\r\n              .then((url) => {\r\n                console.log(url);\r\n                setarrayvar((nap) => [...nap, url]);\r\n              })\r\n              .catch((err) => console.log(err));\r\n          }\r\n        );\r\n      }\r\n    } else {\r\n      setarrayvar([]);\r\n      let newar = arrayvar2.concat(arrayvar);\r\n      setarrayvar(newar);\r\n      handleSubmit(newar);\r\n    }\r\n  };\r\n\r\n  const sekhararr = (e) => {\r\n    console.log(e.target.parentElement.parentElement.id);\r\n    var array = [...image]; // make a separate copy of the array\r\n    let index2 = Number(e.target.parentElement.parentElement.id);\r\n    console.log(e);\r\n    if (index2 !== -1) {\r\n      array.splice(index2, 1);\r\n      setimage(array);\r\n    }\r\n  };\r\n\r\n  const sekhararr2 = (e) => {\r\n    console.log(e.target.parentElement.parentElement.id);\r\n    var array = [...arrayvar2]; // make a separate copy of the array\r\n    let index2 = Number(e.target.parentElement.parentElement.id);\r\n    console.log(e);\r\n    if (index2 !== -1) {\r\n      array.splice(index2, 1);\r\n      setarrayvar2(array);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"postjobdiv\">\r\n      <Form className=\"postjobb\" onSubmit={handleUpload}>\r\n        <Form.Group widths=\"equal\">\r\n          <Form.Field\r\n            required\r\n            control={Input}\r\n            label=\"First name\"\r\n            placeholder=\"enter name of service\"\r\n            id=\"nameofserv\"\r\n            className=\"nameofser\"\r\n          />\r\n        </Form.Group>\r\n\r\n        <Form.Field\r\n          control={TextArea}\r\n          label=\"Description\"\r\n          id=\"sdesc\"\r\n          placeholder=\"Tell us more about your problem or any note here...\"\r\n        />\r\n        <Form.Field>\r\n          Enter Amount\r\n          <Input\r\n            labelPosition=\"right\"\r\n            type=\"number\"\r\n            id=\"sprice\"\r\n            placeholder=\"Amount\"\r\n          >\r\n            <Label basic>₹</Label>\r\n            <input />\r\n            <Label>.00</Label>\r\n          </Input>\r\n        </Form.Field>\r\n\r\n        <Form.Field>\r\n          <InputGroup className=\"mb-2\">\r\n            <InputGroup.Prepend className=\"nameofser\">\r\n              <InputGroup.Text>\r\n                {\" \"}\r\n                <MdEvent size=\"1.3em\" />\r\n              </InputGroup.Text>\r\n            </InputGroup.Prepend>\r\n            <DatePicker\r\n              className=\"datepicker\"\r\n              selected={startDate}\r\n              placeholderText=\"when you want service\"\r\n              minDate={new Date()}\r\n              name=\"startDate\"\r\n              showTimeSelect\r\n              timeFormat=\"HH:mm\"\r\n              todayButton=\"Today\"\r\n              timeIntervals={60}\r\n              timeCaption=\"time\"\r\n              // dateFormat=\"dd/MM/yyyy\"\r\n              dateFormat=\"MMMM d, yyyy h:mm aa\"\r\n              withPortal\r\n              required\r\n            />\r\n          </InputGroup>\r\n        </Form.Field>\r\n\r\n        <Form.Field>\r\n          <Input\r\n            icon=\"photo\"\r\n            iconPosition=\"Right\"\r\n            type=\"file\"\r\n            placeholder=\"Enter tags\"\r\n            //   onChange={upldimg}\r\n            ref={photoUpload}\r\n            accept=\".gif,.jpg,.jpeg,.png\"\r\n            onChange={handleChangeg}\r\n            style={{ display: \"block\" }}\r\n            className=\"photoUploads\"\r\n            multiple\r\n          />\r\n        </Form.Field>\r\n\r\n        <progress value={progress} max=\"100\" id=\"uploaderb\">\r\n          progress\r\n        </progress>\r\n\r\n        <div className=\"imgdiv\">\r\n          <div className=\"gallery\"></div>\r\n        </div>\r\n\r\n        <div>\r\n          <Image.Group size=\"small\">\r\n            {arrayvar2.map((nap, key) => (\r\n              <Image\r\n                fluid\r\n                key={key}\r\n                id={key}\r\n                label={{\r\n                  as: \"a\",\r\n                  corner: \"right\",\r\n                  icon: \"trash\",\r\n                  onClick: sekhararr2,\r\n                }}\r\n                src={nap}\r\n              />\r\n            ))}\r\n          </Image.Group>\r\n\r\n          <Image.Group size=\"small\">\r\n            {image.map((nap, key) => (\r\n              <Image\r\n                fluid\r\n                key={key}\r\n                id={key}\r\n                label={{\r\n                  as: \"a\",\r\n                  corner: \"right\",\r\n                  icon: \"trash\",\r\n                  onClick: sekhararr,\r\n                }}\r\n                src={URL.createObjectURL(nap)}\r\n              />\r\n            ))}\r\n          </Image.Group>\r\n        </div>\r\n\r\n        <Form.Field\r\n          control={Button}\r\n          style={{ textAlign: \"Center\" }}\r\n          type=\"submit\"\r\n          centered\r\n        >\r\n          Submit\r\n        </Form.Field>\r\n      </Form>\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction ModalExampleModal() {\r\n  const [open, setOpen] = React.useState(true);\r\n\r\n  function click(e) {\r\n    console.log(e.target.dataset.txt);\r\n    jobcate = e.target.dataset.txt;\r\n    setOpen(false);\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Modal\r\n        size=\"small\"\r\n        className=\"ModalEdit\"\r\n        style={{\r\n          marginLeft: \"auto\",\r\n          marginRight: \"auto\",\r\n          display: \"block\",\r\n          width: \"70%\",\r\n        }}\r\n        onOpen={() => setOpen(true)}\r\n        open={open}\r\n      >\r\n        <Modal.Header>Select Job Category</Modal.Header>\r\n        <Modal.Content></Modal.Content>\r\n        <Card centered id=\"jobcate\">\r\n          <Card.Content>\r\n            <Card.Header>Select Category here</Card.Header>\r\n          </Card.Content>\r\n          <Card.Content>\r\n            <Menu vertical centered style={{ width: \"auto\" }}>\r\n              <Menu.Item link data-txt=\"0\" onClick={click}>\r\n                <FaTools size=\"1.5rem\" />\r\n                &nbsp;&nbsp;&nbsp;&nbsp; Ac Service\r\n              </Menu.Item>\r\n              <Menu.Item link data-txt=\"1\" onClick={click}>\r\n                <MdLaptopMac size=\"1.5rem\" />\r\n                &nbsp;&nbsp;&nbsp;&nbsp; Computer/Laptop Service\r\n              </Menu.Item>\r\n              <Menu.Item link data-txt=\"2\" onClick={click}>\r\n                <MdTv size=\"1.5rem\" />\r\n                &nbsp;&nbsp;&nbsp;&nbsp; Tv Repair\r\n              </Menu.Item>\r\n              <Menu.Item link data-txt=\"3\" onClick={click}>\r\n                <BiCodeBlock size=\"1.5rem\" />\r\n                &nbsp;&nbsp;&nbsp;&nbsp; Development\r\n              </Menu.Item>\r\n              <Menu.Item link data-txt=\"4\" onClick={click}>\r\n                <FaChalkboardTeacher size=\"1.5rem\" />\r\n                &nbsp;&nbsp;&nbsp;&nbsp; Tutor\r\n              </Menu.Item>\r\n              <Menu.Item link data-txt=\"5\" onClick={click}>\r\n                <MdFace size=\"1.5rem\" />\r\n                &nbsp;&nbsp;&nbsp;&nbsp; Beuty\r\n              </Menu.Item>\r\n              <Menu.Item link data-txt=\"6\" onClick={click}>\r\n                <IoCameraSharp size=\"1.5rem\" />\r\n                &nbsp;&nbsp;&nbsp;&nbsp; Photographer\r\n              </Menu.Item>\r\n              <Menu.Item link data-txt=\"7\" onClick={click}>\r\n                <MdDriveEta size=\"1.5rem\" />\r\n                &nbsp;&nbsp;&nbsp;&nbsp; Driver\r\n              </Menu.Item>\r\n              <Menu.Item link data-txt=\"8\" onClick={click}>\r\n                <MdEventNote size=\"1.5rem\" />\r\n                &nbsp;&nbsp;&nbsp;&nbsp; Events\r\n              </Menu.Item>\r\n            </Menu>\r\n          </Card.Content>\r\n        </Card>\r\n      </Modal>\r\n    </>\r\n  );\r\n}\r\n","D:\\spotmies\\web\\firstapp\\src\\components\\views\\signup&profile\\profile.jsx",["381","382","383","384","385"],"D:\\spotmies\\web\\firstapp\\src\\components\\views\\privacyPolicy\\privacy.jsx",[],"D:\\spotmies\\web\\firstapp\\src\\components\\views\\newpost\\newpost2.jsx",["386","387","388","389","390","391"],"D:\\spotmies\\web\\firstapp\\src\\components\\reusable\\coming_soon_widget.jsx",[],"D:\\spotmies\\web\\firstapp\\src\\components\\views\\viewpost\\postview.jsx",["392","393","394","395","396","397","398","399","400","401","402","403","404","405","406","407","408","409","410","411","412"],"import React, { Component } from \"react\";\r\nimport firebase from \"../../../firebase\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport { Carousel } from \"react-bootstrap\";\r\nimport {\r\n  Card,\r\n  Icon,\r\n  Image,\r\n  Dropdown,\r\n  Label,\r\n  Step,\r\n  Button,\r\n  Rating,\r\n} from \"semantic-ui-react\";\r\nimport react, { useState, useEffect } from \"react\";\r\nimport { toast } from \"react-toastify\";\r\n\r\nimport {\r\n  MdDelete,\r\n  MdLocationOn,\r\n  MdAccessTime,\r\n  MdWatchLater,\r\n  MdCheckCircle,\r\n  MdAssignmentTurnedIn,\r\n  MdBuild,\r\n  MdThumbDown,\r\n  MdAccountCircle,\r\n  MdSmartphone,\r\n  MdPhone,\r\n  MdEmail,\r\n} from \"react-icons/md\";\r\nimport { AiFillEdit } from \"react-icons/ai\";\r\nimport { RiUserSettingsFill, RiTimeFill } from \"react-icons/ri\";\r\nimport { HiCurrencyRupee } from \"react-icons/hi\";\r\nimport { FaTools, FaAddressCard } from \"react-icons/fa\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport \"../../../assets/css/postView.css\";\r\nimport { categoryAssign } from \"../../../helpers/categories\";\r\nimport { gettbystamps } from \"../../../helpers/dateconv\";\r\n\r\nconst db = firebase.firestore();\r\n\r\nfunction useTimes() {\r\n  const [postdata, setdata] = useState([]);\r\n  const [posttime, setposttime] = useState([]);\r\n  useEffect(() => {\r\n    //\r\n    firebase.auth().onAuthStateChanged(function (user) {\r\n      if (user) {\r\n        let arr = [];\r\n\r\n        var personId;\r\n\r\n        personId = window.location.pathname;\r\n        personId = personId.replace(\"/mybookings/id/\", \"\");\r\n        db.collection(\"users\")\r\n          .doc(firebase.auth().currentUser.uid)\r\n          .collection(\"adpost\")\r\n          .doc(personId)\r\n          .onSnapshot((snap) => {\r\n            setdata(snap.data());\r\n            // arr.push(snap.data().posttime);\r\n            // arr.push(snap.data().schedule);\r\n            setposttime(arr);\r\n          });\r\n      }\r\n    });\r\n    //\r\n  }, []);\r\n  return { postdata, posttime };\r\n}\r\n\r\nconst Navbar3 = () => {\r\n  const history = useHistory();\r\n  const { postdata, posttime } = useTimes();\r\n\r\n  var media = [];\r\n  if (postdata.media) {\r\n    media = postdata.media;\r\n    console.log(\"times avail\");\r\n  } else console.log(\"time not\");\r\n  const click = (prop) => {\r\n    console.log(\"click\", prop);\r\n    history.push(`edit/${prop}`);\r\n  };\r\n  const delpost = (pro) => {\r\n    db.collection(\"users\")\r\n      .doc(firebase.auth().currentUser.uid)\r\n      .collection(\"adpost\")\r\n      .doc(pro)\r\n      .delete()\r\n      .then(() => {\r\n        // alert(\"ad deleted succefully\");\r\n        toast.success(\"ad deleted succefully\");\r\n      });\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <div>\r\n        <div style={{ paddingBottom: \"10px\" }}>\r\n          <Card\r\n            centered\r\n            color=\"blue\"\r\n            className=\"wholeCard\"\r\n            style={{\r\n              width: \"80%\",\r\n              marginBottom: \"50px\",\r\n              borderRadius: \"1rem\",\r\n            }}\r\n          >\r\n            <Card.Content>\r\n              <Card.Meta style={{ display: \"inline-flex\" }}>\r\n                <Icon name=\"time\" />{\" \"}\r\n                {gettbystamps(Number(postdata.posttime), \"fulldate\")}{\" \"}\r\n                &nbsp;@&nbsp;\r\n                <b> {gettbystamps(Number(postdata.posttime), \"time\")}</b>\r\n              </Card.Meta>\r\n              <Dropdown\r\n                item\r\n                icon=\"ellipsis horizontal\"\r\n                simple\r\n                style={{ float: \"right\" }}\r\n              >\r\n                <Dropdown.Menu>\r\n                  <Dropdown.Item onClick={(e) => click(postdata.orderid)}>\r\n                    <Icon name=\"edit\" />\r\n                    Edit post\r\n                  </Dropdown.Item>\r\n                  <Dropdown.Item onClick={(e) => delpost(postdata.orderid)}>\r\n                    <Icon name=\"trash\" /> Delete\r\n                  </Dropdown.Item>\r\n                </Dropdown.Menu>\r\n              </Dropdown>\r\n            </Card.Content>\r\n            <Card.Content>\r\n              <Carousel className=\"postImg\">\r\n                {media.map((nap) => (\r\n                  <Carousel.Item>\r\n                    <video\r\n                      centered\r\n                      className=\"postImg\"\r\n                      src={nap}\r\n                      poster={nap}\r\n                      autoPlay\r\n                      loop\r\n                      // style={{ borderRadius: \"1rem\" }}\r\n                    />\r\n                    <Carousel.Caption></Carousel.Caption>\r\n                  </Carousel.Item>\r\n                ))}\r\n              </Carousel>\r\n            </Card.Content>\r\n            <Card.Content>\r\n              <Card.Header textAlign=\"center\">\r\n                Title: <u>{postdata.problem}</u>\r\n              </Card.Header>\r\n            </Card.Content>\r\n\r\n            <div style={{ marginBottom: \"20px\" }}>\r\n              <Card.Group\r\n                className=\"cardHolder\"\r\n                style={{\r\n                  margin: \"0 auto\",\r\n                  width: \"fit-content\",\r\n                  justifyContent: \"center\",\r\n                }}\r\n              >\r\n                <Card\r\n                  className=\"postCard\"\r\n                  style={{ borderRadius: \"1rem\" }}\r\n                  color=\"blue\"\r\n                >\r\n                  <Card.Content>\r\n                    <Card.Meta>\r\n                      <Icon name=\"sticky note\" /> Description\r\n                    </Card.Meta>\r\n                    <Card.Description>\r\n                      <h3>{postdata.description}</h3>\r\n                    </Card.Description>\r\n                  </Card.Content>\r\n                </Card>\r\n\r\n                <Card\r\n                  className=\"postCard\"\r\n                  style={{ borderRadius: \"1rem\" }}\r\n                  color=\"green\"\r\n                >\r\n                  <Card.Content>\r\n                    <Card.Meta>\r\n                      <Icon name=\"rupee sign\" />\r\n                      Price\r\n                    </Card.Meta>\r\n                    {String(postdata.money) != \"NaN\" ? (\r\n                      <h2 style={{ textAlign: \"center\" }}>\r\n                        <Icon name=\"rupee sign\" />\r\n                        {postdata.money}\r\n                      </h2>\r\n                    ) : (\r\n                      <h2 style={{ textAlign: \"center\" }}>\r\n                        <Icon name=\"rupee sign\" />-\r\n                      </h2>\r\n                    )}\r\n                  </Card.Content>\r\n                  <Card.Content>\r\n                    {postdata.orderstate == 2 ? (\r\n                      <Label\r\n                        color=\"green\"\r\n                        attached=\"bottom right\"\r\n                        size=\"mini\"\r\n                        style={{\r\n                          marginRight: \"10px\",\r\n                          marginBottom: \"2%\",\r\n                          borderRadius: \"0.5rem\",\r\n                        }}\r\n                      >\r\n                        <MdCheckCircle /> Paid\r\n                      </Label>\r\n                    ) : (\r\n                      <Label\r\n                        color=\"blue\"\r\n                        attached=\"bottom right\"\r\n                        size=\"mini\"\r\n                        style={{\r\n                          marginRight: \"10px\",\r\n                          marginBottom: \"2%\",\r\n                          borderRadius: \"0.5rem\",\r\n                        }}\r\n                      >\r\n                        <MdWatchLater /> Not paid\r\n                      </Label>\r\n                    )}\r\n                  </Card.Content>\r\n                </Card>\r\n\r\n                <Card\r\n                  className=\"postCard\"\r\n                  style={{ borderRadius: \"1rem\", float: \"right\" }}\r\n                  color=\"orange\"\r\n                >\r\n                  <Card.Content>\r\n                    <Card.Meta>\r\n                      <Icon name=\"info circle\" /> Details\r\n                    </Card.Meta>\r\n                  </Card.Content>\r\n                  <Card.Content>\r\n                    <Card.Description>\r\n                      <h4>\r\n                        {\" \"}\r\n                        <MdLocationOn /> Location: {postdata.location}\r\n                      </h4>\r\n                      <h4>\r\n                        <RiUserSettingsFill /> category :\r\n                        {categoryAssign(postdata.job)}\r\n                      </h4>\r\n                      <h4>\r\n                        <RiTimeFill />\r\n                        posted time:\r\n                        {gettbystamps(\r\n                          Number(postdata.posttime),\r\n                          \"fulldate\"\r\n                        )}{\" \"}\r\n                        &nbsp;@&nbsp;\r\n                        <b>\r\n                          {\" \"}\r\n                          {gettbystamps(Number(postdata.posttime), \"time\")}\r\n                        </b>\r\n                      </h4>\r\n                    </Card.Description>\r\n                  </Card.Content>\r\n                </Card>\r\n              </Card.Group>\r\n            </div>\r\n\r\n            <Step.Group centered>\r\n              <Step>\r\n                <MdAssignmentTurnedIn size=\"2.8rem\" />\r\n                <Step.Content>\r\n                  <Step.Title> Adpost</Step.Title>\r\n                  <Step.Description>\r\n                    @ {gettbystamps(Number(postdata.posttime), \"fulldate\")}{\" \"}\r\n                    &nbsp;@&nbsp;\r\n                    <b> {gettbystamps(Number(postdata.posttime), \"time\")}</b>\r\n                  </Step.Description>\r\n                </Step.Content>\r\n              </Step>\r\n              {postdata.orderstate == 2 ? (\r\n                <Step>\r\n                  <MdBuild size=\"2.8rem\" />\r\n                  <Step.Content>\r\n                    <Step.Title> Service completed</Step.Title>\r\n                    <Step.Description>{postdata.servcmpld}</Step.Description>\r\n                  </Step.Content>\r\n                </Step>\r\n              ) : (\r\n                <Step>\r\n                  <MdBuild size=\"2.8rem\" />\r\n                  <Step.Content>\r\n                    <Step.Title> Service pending</Step.Title>\r\n                    <Step.Description>\r\n                      please confirm when service completed\r\n                    </Step.Description>\r\n                  </Step.Content>\r\n                </Step>\r\n              )}\r\n\r\n              {postdata.orderstate == 2 ? (\r\n                <Step completed>\r\n                  <Icon name=\"info\" />\r\n                  <Step.Content>\r\n                    <Step.Title>Order completed</Step.Title>\r\n                  </Step.Content>\r\n                </Step>\r\n              ) : (\r\n                <Step>\r\n                  <Icon name=\"info\" />\r\n                  <Step.Content>\r\n                    <Step.Title>Order pending</Step.Title>\r\n                  </Step.Content>\r\n                </Step>\r\n              )}\r\n            </Step.Group>\r\n            {postdata.orderstate != 2 ? (\r\n              <Cnfbtn id={postdata.orderid} />\r\n            ) : (\r\n              <span></span>\r\n            )}\r\n\r\n            {postdata.fback == 0 ? <Fback /> : <span></span>}\r\n            {postdata.partnerid ? (\r\n              <Partdetail id={postdata.partnerid} />\r\n            ) : (\r\n              <span></span>\r\n            )}\r\n\r\n            <Card.Content extra>\r\n              <a onClick={(e) => click(postdata.orderid)}>\r\n                <Icon name=\"edit\" />\r\n              </a>\r\n              &nbsp;\r\n              <a onClick={(e) => delpost(postdata.orderid)}>\r\n                <Icon name=\"trash\" />\r\n              </a>\r\n              {postdata.orderstate == 2 ? (\r\n                <Label\r\n                  color=\"green\"\r\n                  attached=\"bottom right\"\r\n                  style={{\r\n                    marginRight: \"10px\",\r\n                    marginBottom: \"5px\",\r\n                    borderRadius: \"0.5rem\",\r\n                  }}\r\n                >\r\n                  <MdCheckCircle /> Completed\r\n                </Label>\r\n              ) : (\r\n                <Label\r\n                  color=\"blue\"\r\n                  attached=\"bottom right\"\r\n                  style={{\r\n                    marginRight: \"10px\",\r\n                    marginBottom: \"5px\",\r\n                    borderRadius: \"0.5rem\",\r\n                  }}\r\n                >\r\n                  <MdWatchLater /> Pending\r\n                </Label>\r\n              )}\r\n            </Card.Content>\r\n          </Card>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Navbar3;\r\n\r\nclass Cnfbtn extends React.Component {\r\n  pending = (e) => {\r\n    console.log(e.target.parentElement.parentElement.id);\r\n    document.getElementById(\r\n      e.target.parentElement.parentElement.id\r\n    ).style.display = \"none\";\r\n  };\r\n  completed = (e) => {\r\n    console.log(this.props.id);\r\n    db.collection(\"users\")\r\n      .doc(firebase.auth().currentUser.uid)\r\n      .collection(\"adpost\")\r\n      .doc(this.props.id)\r\n      .update({\r\n        orderstate: 2,\r\n        fback: 0,\r\n      });\r\n  };\r\n  render() {\r\n    return (\r\n      <div id=\"cnfbutton\" className=\"cnfButton\">\r\n        <Button.Group\r\n          style={{\r\n            width: \"70%\",\r\n            display: \"flex\",\r\n            justifyContent: \"center\",\r\n            alignItems: \"center\",\r\n          }}\r\n        >\r\n          <Button onClick={this.pending}>\r\n            <MdThumbDown size=\"1.6rem\" /> Pending\r\n          </Button>\r\n          <Button.Or />\r\n          <Button color=\"blue\" onClick={this.completed}>\r\n            <MdCheckCircle size=\"1.6rem\" /> Completed\r\n          </Button>\r\n        </Button.Group>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nclass Fback extends React.Component {\r\n  state = {};\r\n\r\n  handleRate = (e, { rating, maxRating }) => {\r\n    this.setState({ rating, maxRating });\r\n    console.log(this.state.rating);\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div style={{ alignContent: \"center\", textAlign: \"center\" }}>\r\n        <h3>Please rate the service</h3>\r\n        <Rating\r\n          maxRating={5}\r\n          clearable\r\n          size=\"massive\"\r\n          style={{ width: \"30%\" }}\r\n          onRate={this.handleRate}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nfunction Partdetail(props) {\r\n  const [pdata, setpdata] = useState([]);\r\n  console.log(props.id);\r\n  useEffect(() => {\r\n    db.collection(\"partner\")\r\n      .doc(props.id)\r\n      .collection(\"ProfileInfo\")\r\n      .doc(props.id)\r\n      .get()\r\n      .then((snap) => {\r\n        setpdata(snap.data());\r\n      })\r\n      .then(() => {\r\n        console.log(pdata);\r\n      });\r\n  }, []);\r\n\r\n  var dhref = \"tel: +91 \" + pdata.phone;\r\n\r\n  return (\r\n    <div style={{ paddingBottom: \"50px\", paddingTop: \"40px\" }}>\r\n      <Card\r\n        centered\r\n        color=\"blue\"\r\n        style={{ borderRadius: \"1rem\", width: \"80%\" }}\r\n      >\r\n        <Card.Content>\r\n          <Card.Header style={{ textAlign: \"center\" }}>\r\n            <Card.Meta>\r\n              <MdAccountCircle size=\"2rem\" /> Technician Details\r\n            </Card.Meta>\r\n          </Card.Header>\r\n        </Card.Content>\r\n        <Card.Content>\r\n          <img\r\n            src={pdata.profilepic}\r\n            style={{ width: \"100%\", borderRadius: \"1rem\", height: \"100%\" }}\r\n          />\r\n        </Card.Content>\r\n        <Card.Content style={{ textAlign: \"center\" }}>\r\n          <Card.Header>\r\n            <h2>\r\n              <MdAccountCircle /> {pdata.name}\r\n            </h2>\r\n          </Card.Header>\r\n          <Card.Meta>\r\n            <span>\r\n              <small>\r\n                <MdSmartphone /> {pdata.phone}\r\n              </small>\r\n            </span>\r\n            <span>\r\n              <small>\r\n                <MdPhone /> {pdata.altNum}\r\n              </small>\r\n            </span>\r\n            <span>\r\n              <small>\r\n                <MdEmail /> {pdata.email}\r\n              </small>\r\n            </span>\r\n          </Card.Meta>\r\n          <Card.Description>{pdata.desc}</Card.Description>\r\n        </Card.Content>\r\n\r\n        <Card centered color=\"orange\" style={{ borderRadius: \"1rem\" }}>\r\n          <Card.Content>\r\n            <Card.Header>\r\n              <FaAddressCard /> Technician address\r\n            </Card.Header>\r\n          </Card.Content>\r\n          <Card.Content>\r\n            <Card.Description>{pdata.addrs}</Card.Description>\r\n          </Card.Content>\r\n        </Card>\r\n        <Card.Content extra>\r\n          <a href={dhref}>\r\n            <MdPhone size=\"1.3rem\" />\r\n            Call\r\n          </a>\r\n          <a style={{ float: \"right\" }}>\r\n            <Icon name=\"setting\" />\r\n            <Dropdown text=\"more\">\r\n              <Dropdown.Menu>\r\n                <Dropdown.Item text=\"Raise complaint\" />\r\n                <Dropdown.Item text=\"Report\" />\r\n              </Dropdown.Menu>\r\n            </Dropdown>\r\n          </a>\r\n        </Card.Content>\r\n      </Card>\r\n    </div>\r\n  );\r\n}\r\n",{"ruleId":"413","replacedBy":"414"},{"ruleId":"415","replacedBy":"416"},{"ruleId":"417","severity":1,"message":"418","line":10,"column":6,"nodeType":"419","endLine":10,"endColumn":8,"suggestions":"420"},{"ruleId":"421","severity":1,"message":"422","line":2,"column":8,"nodeType":"423","messageId":"424","endLine":2,"endColumn":17},{"ruleId":"421","severity":1,"message":"425","line":1,"column":8,"nodeType":"423","messageId":"424","endLine":1,"endColumn":15},{"ruleId":"421","severity":1,"message":"426","line":2,"column":8,"nodeType":"423","messageId":"424","endLine":2,"endColumn":16},{"ruleId":"421","severity":1,"message":"427","line":6,"column":8,"nodeType":"423","messageId":"424","endLine":6,"endColumn":13},{"ruleId":"421","severity":1,"message":"428","line":7,"column":8,"nodeType":"423","messageId":"424","endLine":7,"endColumn":12},{"ruleId":"421","severity":1,"message":"429","line":9,"column":8,"nodeType":"423","messageId":"424","endLine":9,"endColumn":11},{"ruleId":"421","severity":1,"message":"430","line":10,"column":8,"nodeType":"423","messageId":"424","endLine":10,"endColumn":12},{"ruleId":"431","severity":1,"message":"432","line":2,"column":33,"nodeType":"433","messageId":"434","endLine":2,"endColumn":35},{"ruleId":"431","severity":1,"message":"432","line":2,"column":69,"nodeType":"433","messageId":"434","endLine":2,"endColumn":71},{"ruleId":"421","severity":1,"message":"435","line":40,"column":7,"nodeType":"423","messageId":"424","endLine":40,"endColumn":11},{"ruleId":"431","severity":1,"message":"432","line":62,"column":14,"nodeType":"433","messageId":"434","endLine":62,"endColumn":16},{"ruleId":"431","severity":1,"message":"432","line":63,"column":19,"nodeType":"433","messageId":"434","endLine":63,"endColumn":21},{"ruleId":"436","severity":1,"message":"437","line":70,"column":7,"nodeType":"438","messageId":"439","endLine":70,"endColumn":13},{"ruleId":"436","severity":1,"message":"437","line":74,"column":7,"nodeType":"438","messageId":"439","endLine":74,"endColumn":13},{"ruleId":"436","severity":1,"message":"437","line":77,"column":7,"nodeType":"438","messageId":"439","endLine":77,"endColumn":13},{"ruleId":"440","severity":1,"message":"441","line":78,"column":5,"nodeType":"442","messageId":"434","endLine":80,"endColumn":13},{"ruleId":"436","severity":1,"message":"437","line":80,"column":7,"nodeType":"438","messageId":"439","endLine":80,"endColumn":13},{"ruleId":"436","severity":1,"message":"437","line":84,"column":7,"nodeType":"438","messageId":"439","endLine":84,"endColumn":13},{"ruleId":"436","severity":1,"message":"437","line":87,"column":7,"nodeType":"438","messageId":"439","endLine":87,"endColumn":13},{"ruleId":"436","severity":1,"message":"437","line":90,"column":7,"nodeType":"438","messageId":"439","endLine":90,"endColumn":13},{"ruleId":"436","severity":1,"message":"437","line":93,"column":7,"nodeType":"438","messageId":"439","endLine":93,"endColumn":13},{"ruleId":"436","severity":1,"message":"437","line":96,"column":7,"nodeType":"438","messageId":"439","endLine":96,"endColumn":13},{"ruleId":"421","severity":1,"message":"443","line":107,"column":5,"nodeType":"423","messageId":"424","endLine":107,"endColumn":10},{"ruleId":"444","severity":1,"message":"445","line":125,"column":85,"nodeType":"446","messageId":"447","endLine":125,"endColumn":86,"suggestions":"448"},{"ruleId":"417","severity":1,"message":"449","line":25,"column":13,"nodeType":"450","endLine":35,"endColumn":4},{"ruleId":"417","severity":1,"message":"451","line":35,"column":6,"nodeType":"419","endLine":35,"endColumn":18,"suggestions":"452"},{"ruleId":"431","severity":1,"message":"432","line":38,"column":15,"nodeType":"433","messageId":"434","endLine":38,"endColumn":17},{"ruleId":"417","severity":1,"message":"453","line":43,"column":6,"nodeType":"419","endLine":43,"endColumn":13,"suggestions":"454"},{"ruleId":"417","severity":1,"message":"455","line":45,"column":19,"nodeType":"423","endLine":45,"endColumn":30},{"ruleId":"431","severity":1,"message":"456","line":58,"column":15,"nodeType":"433","messageId":"434","endLine":58,"endColumn":17},{"ruleId":"431","severity":1,"message":"432","line":85,"column":23,"nodeType":"433","messageId":"434","endLine":85,"endColumn":25},{"ruleId":"431","severity":1,"message":"432","line":119,"column":18,"nodeType":"433","messageId":"434","endLine":119,"endColumn":20},{"ruleId":"431","severity":1,"message":"432","line":127,"column":33,"nodeType":"433","messageId":"434","endLine":127,"endColumn":35},{"ruleId":"431","severity":1,"message":"432","line":137,"column":33,"nodeType":"433","messageId":"434","endLine":137,"endColumn":35},{"ruleId":"431","severity":1,"message":"432","line":147,"column":33,"nodeType":"433","messageId":"434","endLine":147,"endColumn":35},{"ruleId":"431","severity":1,"message":"432","line":158,"column":18,"nodeType":"433","messageId":"434","endLine":158,"endColumn":20},{"ruleId":"431","severity":1,"message":"432","line":166,"column":33,"nodeType":"433","messageId":"434","endLine":166,"endColumn":35},{"ruleId":"431","severity":1,"message":"432","line":176,"column":33,"nodeType":"433","messageId":"434","endLine":176,"endColumn":35},{"ruleId":"431","severity":1,"message":"432","line":186,"column":33,"nodeType":"433","messageId":"434","endLine":186,"endColumn":35},{"ruleId":"431","severity":1,"message":"432","line":196,"column":33,"nodeType":"433","messageId":"434","endLine":196,"endColumn":35},{"ruleId":"431","severity":1,"message":"432","line":207,"column":18,"nodeType":"433","messageId":"434","endLine":207,"endColumn":20},{"ruleId":"431","severity":1,"message":"432","line":215,"column":33,"nodeType":"433","messageId":"434","endLine":215,"endColumn":35},{"ruleId":"431","severity":1,"message":"432","line":225,"column":33,"nodeType":"433","messageId":"434","endLine":225,"endColumn":35},{"ruleId":"431","severity":1,"message":"432","line":235,"column":33,"nodeType":"433","messageId":"434","endLine":235,"endColumn":35},{"ruleId":"431","severity":1,"message":"432","line":255,"column":18,"nodeType":"433","messageId":"434","endLine":255,"endColumn":20},{"ruleId":"431","severity":1,"message":"432","line":263,"column":33,"nodeType":"433","messageId":"434","endLine":263,"endColumn":35},{"ruleId":"431","severity":1,"message":"432","line":273,"column":33,"nodeType":"433","messageId":"434","endLine":273,"endColumn":35},{"ruleId":"431","severity":1,"message":"432","line":284,"column":18,"nodeType":"433","messageId":"434","endLine":284,"endColumn":20},{"ruleId":"431","severity":1,"message":"432","line":306,"column":18,"nodeType":"433","messageId":"434","endLine":306,"endColumn":20},{"ruleId":"421","severity":1,"message":"457","line":14,"column":11,"nodeType":"423","messageId":"424","endLine":14,"endColumn":19},{"ruleId":"458","severity":1,"message":"459","line":18,"column":10,"nodeType":"450","messageId":"460","endLine":30,"endColumn":11},{"ruleId":"461","severity":1,"message":"462","line":73,"column":19,"nodeType":"463","endLine":73,"endColumn":39},{"ruleId":"431","severity":1,"message":"432","line":97,"column":43,"nodeType":"433","messageId":"434","endLine":97,"endColumn":45},{"ruleId":"461","severity":1,"message":"462","line":127,"column":23,"nodeType":"463","endLine":137,"endColumn":25},{"ruleId":"431","severity":1,"message":"432","line":190,"column":29,"nodeType":"433","messageId":"434","endLine":190,"endColumn":31},{"ruleId":"421","severity":1,"message":"464","line":16,"column":8,"nodeType":"423","messageId":"424","endLine":16,"endColumn":29},{"ruleId":"421","severity":1,"message":"465","line":22,"column":10,"nodeType":"423","messageId":"424","endLine":22,"endColumn":19},{"ruleId":"421","severity":1,"message":"466","line":37,"column":5,"nodeType":"423","messageId":"424","endLine":37,"endColumn":12},{"ruleId":"421","severity":1,"message":"467","line":59,"column":10,"nodeType":"423","messageId":"424","endLine":59,"endColumn":18},{"ruleId":"421","severity":1,"message":"468","line":60,"column":20,"nodeType":"423","messageId":"424","endLine":60,"endColumn":31},{"ruleId":"421","severity":1,"message":"469","line":63,"column":10,"nodeType":"423","messageId":"424","endLine":63,"endColumn":14},{"ruleId":"431","severity":1,"message":"432","line":143,"column":31,"nodeType":"433","messageId":"434","endLine":143,"endColumn":33},{"ruleId":"417","severity":1,"message":"470","line":156,"column":6,"nodeType":"419","endLine":156,"endColumn":8,"suggestions":"471"},{"ruleId":"431","severity":1,"message":"432","line":166,"column":24,"nodeType":"433","messageId":"434","endLine":166,"endColumn":26},{"ruleId":"431","severity":1,"message":"432","line":166,"column":37,"nodeType":"433","messageId":"434","endLine":166,"endColumn":39},{"ruleId":"431","severity":1,"message":"432","line":166,"column":50,"nodeType":"433","messageId":"434","endLine":166,"endColumn":52},{"ruleId":"461","severity":1,"message":"462","line":171,"column":17,"nodeType":"463","endLine":171,"endColumn":42},{"ruleId":"431","severity":1,"message":"432","line":180,"column":38,"nodeType":"433","messageId":"434","endLine":180,"endColumn":40},{"ruleId":"431","severity":1,"message":"432","line":206,"column":19,"nodeType":"433","messageId":"434","endLine":206,"endColumn":21},{"ruleId":"431","severity":1,"message":"432","line":222,"column":23,"nodeType":"433","messageId":"434","endLine":222,"endColumn":25},{"ruleId":"472","severity":1,"message":"473","line":287,"column":13,"nodeType":"463","endLine":287,"endColumn":80},{"ruleId":"431","severity":1,"message":"432","line":301,"column":24,"nodeType":"433","messageId":"434","endLine":301,"endColumn":26},{"ruleId":"431","severity":1,"message":"432","line":306,"column":30,"nodeType":"433","messageId":"434","endLine":306,"endColumn":32},{"ruleId":"431","severity":1,"message":"432","line":306,"column":45,"nodeType":"433","messageId":"434","endLine":306,"endColumn":47},{"ruleId":"431","severity":1,"message":"432","line":306,"column":60,"nodeType":"433","messageId":"434","endLine":306,"endColumn":62},{"ruleId":"461","severity":1,"message":"462","line":312,"column":23,"nodeType":"463","endLine":312,"endColumn":48},{"ruleId":"431","severity":1,"message":"432","line":375,"column":30,"nodeType":"433","messageId":"434","endLine":375,"endColumn":32},{"ruleId":"431","severity":1,"message":"432","line":375,"column":45,"nodeType":"433","messageId":"434","endLine":375,"endColumn":47},{"ruleId":"431","severity":1,"message":"432","line":375,"column":60,"nodeType":"433","messageId":"434","endLine":375,"endColumn":62},{"ruleId":"461","severity":1,"message":"462","line":382,"column":23,"nodeType":"463","endLine":382,"endColumn":48},{"ruleId":"431","severity":1,"message":"432","line":391,"column":19,"nodeType":"433","messageId":"434","endLine":391,"endColumn":21},{"ruleId":"431","severity":1,"message":"432","line":407,"column":23,"nodeType":"433","messageId":"434","endLine":407,"endColumn":25},{"ruleId":"472","severity":1,"message":"473","line":493,"column":13,"nodeType":"463","endLine":493,"endColumn":80},{"ruleId":"421","severity":1,"message":"464","line":15,"column":8,"nodeType":"423","messageId":"424","endLine":15,"endColumn":29},{"ruleId":"431","severity":1,"message":"432","line":74,"column":21,"nodeType":"433","messageId":"434","endLine":74,"endColumn":23},{"ruleId":"431","severity":1,"message":"432","line":97,"column":21,"nodeType":"433","messageId":"434","endLine":97,"endColumn":23},{"ruleId":"431","severity":1,"message":"432","line":124,"column":23,"nodeType":"433","messageId":"434","endLine":124,"endColumn":25},{"ruleId":"421","severity":1,"message":"474","line":136,"column":10,"nodeType":"423","messageId":"424","endLine":136,"endColumn":17},{"ruleId":"421","severity":1,"message":"475","line":137,"column":23,"nodeType":"423","messageId":"424","endLine":137,"endColumn":37},{"ruleId":"431","severity":1,"message":"432","line":170,"column":28,"nodeType":"433","messageId":"434","endLine":170,"endColumn":30},{"ruleId":"431","severity":1,"message":"432","line":170,"column":43,"nodeType":"433","messageId":"434","endLine":170,"endColumn":45},{"ruleId":"431","severity":1,"message":"432","line":170,"column":58,"nodeType":"433","messageId":"434","endLine":170,"endColumn":60},{"ruleId":"461","severity":1,"message":"462","line":175,"column":19,"nodeType":"463","endLine":175,"endColumn":44},{"ruleId":"431","severity":1,"message":"432","line":209,"column":19,"nodeType":"433","messageId":"434","endLine":209,"endColumn":21},{"ruleId":"431","severity":1,"message":"432","line":220,"column":19,"nodeType":"433","messageId":"434","endLine":220,"endColumn":21},{"ruleId":"431","severity":1,"message":"432","line":220,"column":34,"nodeType":"433","messageId":"434","endLine":220,"endColumn":36},{"ruleId":"431","severity":1,"message":"432","line":287,"column":19,"nodeType":"433","messageId":"434","endLine":287,"endColumn":21},{"ruleId":"472","severity":1,"message":"473","line":328,"column":13,"nodeType":"463","endLine":328,"endColumn":80},{"ruleId":"431","severity":1,"message":"432","line":340,"column":24,"nodeType":"433","messageId":"434","endLine":340,"endColumn":26},{"ruleId":"431","severity":1,"message":"432","line":346,"column":32,"nodeType":"433","messageId":"434","endLine":346,"endColumn":34},{"ruleId":"431","severity":1,"message":"432","line":346,"column":47,"nodeType":"433","messageId":"434","endLine":346,"endColumn":49},{"ruleId":"431","severity":1,"message":"432","line":346,"column":62,"nodeType":"433","messageId":"434","endLine":346,"endColumn":64},{"ruleId":"431","severity":1,"message":"432","line":348,"column":35,"nodeType":"433","messageId":"434","endLine":348,"endColumn":37},{"ruleId":"461","severity":1,"message":"462","line":353,"column":23,"nodeType":"463","endLine":353,"endColumn":48},{"ruleId":"431","severity":1,"message":"432","line":416,"column":32,"nodeType":"433","messageId":"434","endLine":416,"endColumn":34},{"ruleId":"431","severity":1,"message":"432","line":416,"column":47,"nodeType":"433","messageId":"434","endLine":416,"endColumn":49},{"ruleId":"431","severity":1,"message":"432","line":416,"column":62,"nodeType":"433","messageId":"434","endLine":416,"endColumn":64},{"ruleId":"431","severity":1,"message":"432","line":418,"column":35,"nodeType":"433","messageId":"434","endLine":418,"endColumn":37},{"ruleId":"461","severity":1,"message":"462","line":423,"column":23,"nodeType":"463","endLine":423,"endColumn":48},{"ruleId":"431","severity":1,"message":"432","line":432,"column":19,"nodeType":"433","messageId":"434","endLine":432,"endColumn":21},{"ruleId":"431","severity":1,"message":"432","line":443,"column":19,"nodeType":"433","messageId":"434","endLine":443,"endColumn":21},{"ruleId":"431","severity":1,"message":"432","line":443,"column":34,"nodeType":"433","messageId":"434","endLine":443,"endColumn":36},{"ruleId":"431","severity":1,"message":"432","line":518,"column":19,"nodeType":"433","messageId":"434","endLine":518,"endColumn":21},{"ruleId":"472","severity":1,"message":"473","line":560,"column":13,"nodeType":"463","endLine":560,"endColumn":80},{"ruleId":"421","severity":1,"message":"476","line":63,"column":9,"nodeType":"423","messageId":"424","endLine":63,"endColumn":14},{"ruleId":"421","severity":1,"message":"477","line":68,"column":9,"nodeType":"423","messageId":"424","endLine":68,"endColumn":13},{"ruleId":"421","severity":1,"message":"478","line":72,"column":9,"nodeType":"423","messageId":"424","endLine":72,"endColumn":16},{"ruleId":"431","severity":1,"message":"432","line":84,"column":26,"nodeType":"433","messageId":"434","endLine":84,"endColumn":28},{"ruleId":"431","severity":1,"message":"456","line":197,"column":38,"nodeType":"433","messageId":"434","endLine":197,"endColumn":40},{"ruleId":"431","severity":1,"message":"432","line":221,"column":31,"nodeType":"433","messageId":"434","endLine":221,"endColumn":33},{"ruleId":"421","severity":1,"message":"479","line":2,"column":10,"nodeType":"423","messageId":"424","endLine":2,"endColumn":14},{"ruleId":"421","severity":1,"message":"480","line":9,"column":10,"nodeType":"423","messageId":"424","endLine":9,"endColumn":19},{"ruleId":"431","severity":1,"message":"432","line":143,"column":17,"nodeType":"433","messageId":"434","endLine":143,"endColumn":19},{"ruleId":"417","severity":1,"message":"481","line":40,"column":6,"nodeType":"419","endLine":40,"endColumn":8,"suggestions":"482"},{"ruleId":"461","severity":1,"message":"462","line":59,"column":11,"nodeType":"463","endLine":62,"endColumn":13},{"ruleId":"472","severity":1,"message":"473","line":105,"column":11,"nodeType":"463","endLine":105,"endColumn":41},{"ruleId":"421","severity":1,"message":"483","line":1,"column":17,"nodeType":"423","messageId":"424","endLine":1,"endColumn":26},{"ruleId":"421","severity":1,"message":"484","line":66,"column":13,"nodeType":"423","messageId":"424","endLine":66,"endColumn":21},{"ruleId":"421","severity":1,"message":"485","line":98,"column":10,"nodeType":"423","messageId":"424","endLine":98,"endColumn":17},{"ruleId":"421","severity":1,"message":"486","line":107,"column":10,"nodeType":"423","messageId":"424","endLine":107,"endColumn":17},{"ruleId":"431","severity":1,"message":"432","line":134,"column":23,"nodeType":"433","messageId":"434","endLine":134,"endColumn":25},{"ruleId":"431","severity":1,"message":"432","line":227,"column":74,"nodeType":"433","messageId":"434","endLine":227,"endColumn":76},{"ruleId":"431","severity":1,"message":"432","line":241,"column":42,"nodeType":"433","messageId":"434","endLine":241,"endColumn":44},{"ruleId":"431","severity":1,"message":"432","line":344,"column":70,"nodeType":"433","messageId":"434","endLine":344,"endColumn":72},{"ruleId":"431","severity":1,"message":"432","line":357,"column":38,"nodeType":"433","messageId":"434","endLine":357,"endColumn":40},{"ruleId":"421","severity":1,"message":"487","line":405,"column":10,"nodeType":"423","messageId":"424","endLine":405,"endColumn":15},{"ruleId":"421","severity":1,"message":"486","line":408,"column":10,"nodeType":"423","messageId":"424","endLine":408,"endColumn":17},{"ruleId":"417","severity":1,"message":"449","line":421,"column":13,"nodeType":"450","endLine":428,"endColumn":4},{"ruleId":"417","severity":1,"message":"449","line":440,"column":13,"nodeType":"450","endLine":446,"endColumn":4},{"ruleId":"417","severity":1,"message":"488","line":446,"column":6,"nodeType":"419","endLine":446,"endColumn":17,"suggestions":"489"},{"ruleId":"431","severity":1,"message":"456","line":449,"column":17,"nodeType":"433","messageId":"434","endLine":449,"endColumn":19},{"ruleId":"431","severity":1,"message":"456","line":461,"column":15,"nodeType":"433","messageId":"434","endLine":461,"endColumn":17},{"ruleId":"431","severity":1,"message":"432","line":528,"column":16,"nodeType":"433","messageId":"434","endLine":528,"endColumn":18},{"ruleId":"417","severity":1,"message":"490","line":533,"column":6,"nodeType":"419","endLine":533,"endColumn":14,"suggestions":"491"},{"ruleId":"421","severity":1,"message":"457","line":542,"column":11,"nodeType":"423","messageId":"424","endLine":542,"endColumn":19},{"ruleId":"417","severity":1,"message":"492","line":573,"column":6,"nodeType":"419","endLine":573,"endColumn":14,"suggestions":"493"},{"ruleId":"458","severity":1,"message":"494","line":587,"column":15,"nodeType":"450","messageId":"460","endLine":590,"endColumn":10},{"ruleId":"421","severity":1,"message":"495","line":596,"column":18,"nodeType":"423","messageId":"424","endLine":596,"endColumn":29},{"ruleId":"431","severity":1,"message":"432","line":621,"column":35,"nodeType":"433","messageId":"434","endLine":621,"endColumn":37},{"ruleId":"431","severity":1,"message":"432","line":642,"column":29,"nodeType":"433","messageId":"434","endLine":642,"endColumn":31},{"ruleId":"431","severity":1,"message":"456","line":644,"column":17,"nodeType":"433","messageId":"434","endLine":644,"endColumn":19},{"ruleId":"431","severity":1,"message":"432","line":732,"column":18,"nodeType":"433","messageId":"434","endLine":732,"endColumn":20},{"ruleId":"431","severity":1,"message":"432","line":760,"column":48,"nodeType":"433","messageId":"434","endLine":760,"endColumn":50},{"ruleId":"431","severity":1,"message":"432","line":767,"column":38,"nodeType":"433","messageId":"434","endLine":767,"endColumn":40},{"ruleId":"431","severity":1,"message":"432","line":771,"column":35,"nodeType":"433","messageId":"434","endLine":771,"endColumn":37},{"ruleId":"431","severity":1,"message":"432","line":774,"column":42,"nodeType":"433","messageId":"434","endLine":774,"endColumn":44},{"ruleId":"431","severity":1,"message":"432","line":781,"column":44,"nodeType":"433","messageId":"434","endLine":781,"endColumn":46},{"ruleId":"431","severity":1,"message":"432","line":788,"column":38,"nodeType":"433","messageId":"434","endLine":788,"endColumn":40},{"ruleId":"431","severity":1,"message":"432","line":790,"column":49,"nodeType":"433","messageId":"434","endLine":790,"endColumn":51},{"ruleId":"431","severity":1,"message":"432","line":803,"column":65,"nodeType":"433","messageId":"434","endLine":803,"endColumn":67},{"ruleId":"431","severity":1,"message":"432","line":997,"column":18,"nodeType":"433","messageId":"434","endLine":997,"endColumn":20},{"ruleId":"431","severity":1,"message":"432","line":1024,"column":48,"nodeType":"433","messageId":"434","endLine":1024,"endColumn":50},{"ruleId":"431","severity":1,"message":"432","line":1031,"column":38,"nodeType":"433","messageId":"434","endLine":1031,"endColumn":40},{"ruleId":"431","severity":1,"message":"432","line":1035,"column":35,"nodeType":"433","messageId":"434","endLine":1035,"endColumn":37},{"ruleId":"431","severity":1,"message":"432","line":1038,"column":42,"nodeType":"433","messageId":"434","endLine":1038,"endColumn":44},{"ruleId":"431","severity":1,"message":"432","line":1045,"column":44,"nodeType":"433","messageId":"434","endLine":1045,"endColumn":46},{"ruleId":"431","severity":1,"message":"432","line":1052,"column":38,"nodeType":"433","messageId":"434","endLine":1052,"endColumn":40},{"ruleId":"431","severity":1,"message":"432","line":1054,"column":49,"nodeType":"433","messageId":"434","endLine":1054,"endColumn":51},{"ruleId":"431","severity":1,"message":"432","line":1066,"column":65,"nodeType":"433","messageId":"434","endLine":1066,"endColumn":67},{"ruleId":"431","severity":1,"message":"432","line":1186,"column":22,"nodeType":"433","messageId":"434","endLine":1186,"endColumn":24},{"ruleId":"431","severity":1,"message":"456","line":1190,"column":34,"nodeType":"433","messageId":"434","endLine":1190,"endColumn":36},{"ruleId":"431","severity":1,"message":"432","line":1193,"column":21,"nodeType":"433","messageId":"434","endLine":1193,"endColumn":23},{"ruleId":"431","severity":1,"message":"456","line":1253,"column":15,"nodeType":"433","messageId":"434","endLine":1253,"endColumn":17},{"ruleId":"417","severity":1,"message":"496","line":1308,"column":5,"nodeType":"419","endLine":1308,"endColumn":17,"suggestions":"497"},{"ruleId":"431","severity":1,"message":"432","line":78,"column":23,"nodeType":"433","messageId":"434","endLine":78,"endColumn":25},{"ruleId":"431","severity":1,"message":"432","line":213,"column":30,"nodeType":"433","messageId":"434","endLine":213,"endColumn":32},{"ruleId":"421","severity":1,"message":"498","line":66,"column":10,"nodeType":"423","messageId":"424","endLine":66,"endColumn":16},{"ruleId":"431","severity":1,"message":"432","line":74,"column":14,"nodeType":"433","messageId":"434","endLine":74,"endColumn":16},{"ruleId":"421","severity":1,"message":"499","line":147,"column":12,"nodeType":"423","messageId":"424","endLine":147,"endColumn":18},{"ruleId":"421","severity":1,"message":"486","line":241,"column":10,"nodeType":"423","messageId":"424","endLine":241,"endColumn":17},{"ruleId":"431","severity":1,"message":"432","line":349,"column":27,"nodeType":"433","messageId":"434","endLine":349,"endColumn":29},{"ruleId":"472","severity":1,"message":"473","line":371,"column":25,"nodeType":"463","endLine":371,"endColumn":28},{"ruleId":"472","severity":1,"message":"473","line":377,"column":25,"nodeType":"463","endLine":377,"endColumn":28},{"ruleId":"472","severity":1,"message":"473","line":384,"column":25,"nodeType":"463","endLine":384,"endColumn":28},{"ruleId":"472","severity":1,"message":"473","line":391,"column":25,"nodeType":"463","endLine":391,"endColumn":28},{"ruleId":"472","severity":1,"message":"473","line":440,"column":25,"nodeType":"463","endLine":440,"endColumn":28},{"ruleId":"472","severity":1,"message":"473","line":446,"column":25,"nodeType":"463","endLine":446,"endColumn":28},{"ruleId":"472","severity":1,"message":"473","line":453,"column":25,"nodeType":"463","endLine":453,"endColumn":28},{"ruleId":"472","severity":1,"message":"473","line":460,"column":25,"nodeType":"463","endLine":460,"endColumn":28},{"ruleId":"472","severity":1,"message":"473","line":509,"column":25,"nodeType":"463","endLine":509,"endColumn":28},{"ruleId":"472","severity":1,"message":"473","line":515,"column":25,"nodeType":"463","endLine":515,"endColumn":28},{"ruleId":"472","severity":1,"message":"473","line":522,"column":25,"nodeType":"463","endLine":522,"endColumn":28},{"ruleId":"472","severity":1,"message":"473","line":529,"column":25,"nodeType":"463","endLine":529,"endColumn":28},{"ruleId":"472","severity":1,"message":"473","line":578,"column":25,"nodeType":"463","endLine":578,"endColumn":28},{"ruleId":"472","severity":1,"message":"473","line":584,"column":25,"nodeType":"463","endLine":584,"endColumn":28},{"ruleId":"472","severity":1,"message":"473","line":591,"column":25,"nodeType":"463","endLine":591,"endColumn":28},{"ruleId":"472","severity":1,"message":"473","line":598,"column":25,"nodeType":"463","endLine":598,"endColumn":28},{"ruleId":"472","severity":1,"message":"473","line":647,"column":25,"nodeType":"463","endLine":647,"endColumn":28},{"ruleId":"472","severity":1,"message":"473","line":653,"column":25,"nodeType":"463","endLine":653,"endColumn":28},{"ruleId":"472","severity":1,"message":"473","line":660,"column":25,"nodeType":"463","endLine":660,"endColumn":28},{"ruleId":"472","severity":1,"message":"473","line":667,"column":25,"nodeType":"463","endLine":667,"endColumn":28},{"ruleId":"472","severity":1,"message":"473","line":716,"column":25,"nodeType":"463","endLine":716,"endColumn":28},{"ruleId":"472","severity":1,"message":"473","line":722,"column":25,"nodeType":"463","endLine":722,"endColumn":28},{"ruleId":"472","severity":1,"message":"473","line":729,"column":25,"nodeType":"463","endLine":729,"endColumn":28},{"ruleId":"472","severity":1,"message":"473","line":736,"column":25,"nodeType":"463","endLine":736,"endColumn":28},{"ruleId":"472","severity":1,"message":"473","line":785,"column":25,"nodeType":"463","endLine":785,"endColumn":28},{"ruleId":"472","severity":1,"message":"473","line":792,"column":25,"nodeType":"463","endLine":792,"endColumn":28},{"ruleId":"472","severity":1,"message":"473","line":799,"column":25,"nodeType":"463","endLine":799,"endColumn":28},{"ruleId":"472","severity":1,"message":"473","line":806,"column":25,"nodeType":"463","endLine":806,"endColumn":28},{"ruleId":"472","severity":1,"message":"473","line":857,"column":27,"nodeType":"463","endLine":857,"endColumn":30},{"ruleId":"472","severity":1,"message":"473","line":863,"column":27,"nodeType":"463","endLine":863,"endColumn":30},{"ruleId":"472","severity":1,"message":"473","line":870,"column":27,"nodeType":"463","endLine":870,"endColumn":30},{"ruleId":"472","severity":1,"message":"473","line":877,"column":27,"nodeType":"463","endLine":877,"endColumn":30},{"ruleId":"472","severity":1,"message":"473","line":939,"column":33,"nodeType":"463","endLine":939,"endColumn":36},{"ruleId":"472","severity":1,"message":"473","line":946,"column":33,"nodeType":"463","endLine":946,"endColumn":36},{"ruleId":"472","severity":1,"message":"473","line":954,"column":33,"nodeType":"463","endLine":954,"endColumn":36},{"ruleId":"472","severity":1,"message":"473","line":961,"column":33,"nodeType":"463","endLine":961,"endColumn":36},{"ruleId":"431","severity":1,"message":"432","line":967,"column":45,"nodeType":"433","messageId":"434","endLine":967,"endColumn":47},{"ruleId":"472","severity":1,"message":"473","line":994,"column":33,"nodeType":"463","endLine":994,"endColumn":36},{"ruleId":"472","severity":1,"message":"473","line":1001,"column":33,"nodeType":"463","endLine":1001,"endColumn":36},{"ruleId":"421","severity":1,"message":"483","line":1,"column":17,"nodeType":"423","messageId":"424","endLine":1,"endColumn":26},{"ruleId":"421","severity":1,"message":"500","line":53,"column":10,"nodeType":"423","messageId":"424","endLine":53,"endColumn":15},{"ruleId":"421","severity":1,"message":"501","line":60,"column":9,"nodeType":"423","messageId":"424","endLine":60,"endColumn":14},{"ruleId":"431","severity":1,"message":"432","line":132,"column":29,"nodeType":"433","messageId":"434","endLine":132,"endColumn":31},{"ruleId":"421","severity":1,"message":"502","line":139,"column":12,"nodeType":"423","messageId":"424","endLine":139,"endColumn":24},{"ruleId":"503","severity":1,"message":"504","line":153,"column":9,"nodeType":"433","messageId":"505","endLine":153,"endColumn":20},{"ruleId":"431","severity":1,"message":"432","line":153,"column":14,"nodeType":"433","messageId":"434","endLine":153,"endColumn":16},{"ruleId":"431","severity":1,"message":"432","line":154,"column":13,"nodeType":"433","messageId":"434","endLine":154,"endColumn":15},{"ruleId":"458","severity":1,"message":"494","line":211,"column":15,"nodeType":"450","messageId":"460","endLine":216,"endColumn":10},{"ruleId":"431","severity":1,"message":"432","line":224,"column":27,"nodeType":"433","messageId":"434","endLine":224,"endColumn":29},{"ruleId":"417","severity":1,"message":"506","line":230,"column":6,"nodeType":"419","endLine":230,"endColumn":16,"suggestions":"507"},{"ruleId":"431","severity":1,"message":"432","line":43,"column":33,"nodeType":"433","messageId":"434","endLine":43,"endColumn":35},{"ruleId":"461","severity":1,"message":"462","line":167,"column":15,"nodeType":"463","endLine":167,"endColumn":71},{"ruleId":"472","severity":1,"message":"473","line":196,"column":15,"nodeType":"463","endLine":196,"endColumn":18},{"ruleId":"472","severity":1,"message":"473","line":211,"column":15,"nodeType":"463","endLine":211,"endColumn":71},{"ruleId":"431","severity":1,"message":"432","line":320,"column":11,"nodeType":"433","messageId":"434","endLine":320,"endColumn":13},{"ruleId":"431","severity":1,"message":"432","line":112,"column":35,"nodeType":"433","messageId":"434","endLine":112,"endColumn":37},{"ruleId":"503","severity":1,"message":"504","line":127,"column":9,"nodeType":"433","messageId":"505","endLine":127,"endColumn":20},{"ruleId":"431","severity":1,"message":"432","line":127,"column":14,"nodeType":"433","messageId":"434","endLine":127,"endColumn":16},{"ruleId":"431","severity":1,"message":"432","line":128,"column":13,"nodeType":"433","messageId":"434","endLine":128,"endColumn":15},{"ruleId":"458","severity":1,"message":"508","line":198,"column":15,"nodeType":"450","messageId":"460","endLine":205,"endColumn":10},{"ruleId":"431","severity":1,"message":"432","line":274,"column":14,"nodeType":"433","messageId":"434","endLine":274,"endColumn":16},{"ruleId":"421","severity":1,"message":"483","line":1,"column":17,"nodeType":"423","messageId":"424","endLine":1,"endColumn":26},{"ruleId":"421","severity":1,"message":"509","line":8,"column":3,"nodeType":"423","messageId":"424","endLine":8,"endColumn":8},{"ruleId":"421","severity":1,"message":"510","line":15,"column":8,"nodeType":"423","messageId":"424","endLine":15,"endColumn":13},{"ruleId":"421","severity":1,"message":"511","line":19,"column":3,"nodeType":"423","messageId":"424","endLine":19,"endColumn":11},{"ruleId":"421","severity":1,"message":"512","line":21,"column":3,"nodeType":"423","messageId":"424","endLine":21,"endColumn":15},{"ruleId":"421","severity":1,"message":"513","line":32,"column":10,"nodeType":"423","messageId":"424","endLine":32,"endColumn":20},{"ruleId":"421","severity":1,"message":"514","line":34,"column":10,"nodeType":"423","messageId":"424","endLine":34,"endColumn":25},{"ruleId":"421","severity":1,"message":"515","line":35,"column":10,"nodeType":"423","messageId":"424","endLine":35,"endColumn":17},{"ruleId":"421","severity":1,"message":"516","line":75,"column":21,"nodeType":"423","messageId":"424","endLine":75,"endColumn":29},{"ruleId":"431","severity":1,"message":"456","line":194,"column":45,"nodeType":"433","messageId":"434","endLine":194,"endColumn":47},{"ruleId":"431","severity":1,"message":"432","line":206,"column":42,"nodeType":"433","messageId":"434","endLine":206,"endColumn":44},{"ruleId":"431","severity":1,"message":"432","line":287,"column":36,"nodeType":"433","messageId":"434","endLine":287,"endColumn":38},{"ruleId":"431","severity":1,"message":"432","line":307,"column":36,"nodeType":"433","messageId":"434","endLine":307,"endColumn":38},{"ruleId":"431","severity":1,"message":"456","line":323,"column":34,"nodeType":"433","messageId":"434","endLine":323,"endColumn":36},{"ruleId":"431","severity":1,"message":"432","line":329,"column":29,"nodeType":"433","messageId":"434","endLine":329,"endColumn":31},{"ruleId":"472","severity":1,"message":"473","line":337,"column":15,"nodeType":"463","endLine":337,"endColumn":59},{"ruleId":"472","severity":1,"message":"473","line":341,"column":15,"nodeType":"463","endLine":341,"endColumn":61},{"ruleId":"431","severity":1,"message":"432","line":344,"column":36,"nodeType":"433","messageId":"434","endLine":344,"endColumn":38},{"ruleId":"417","severity":1,"message":"481","line":460,"column":6,"nodeType":"419","endLine":460,"endColumn":8,"suggestions":"517"},{"ruleId":"461","severity":1,"message":"462","line":479,"column":11,"nodeType":"463","endLine":482,"endColumn":13},{"ruleId":"472","severity":1,"message":"473","line":525,"column":11,"nodeType":"463","endLine":525,"endColumn":41},"no-native-reassign",["518"],"no-negated-in-lhs",["519"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'history'. Either include it or remove the dependency array.","ArrayExpression",["520"],"no-unused-vars","'firestore' is defined but never used.","Identifier","unusedVar","'takepic' is defined but never used.","'location' is defined but never used.","'about' is defined but never used.","'what' is defined but never used.","'reg' is defined but never used.","'meet' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'year' is assigned a value but never used.","no-unreachable","Unreachable code.","BreakStatement","unreachableCode","no-duplicate-case","Duplicate case label.","SwitchCase","'count' is assigned a value but never used.","no-useless-escape","Unnecessary escape character: \\/.","Literal","unnecessaryEscape",["521","522"],"Effect callbacks are synchronous to prevent race conditions. Put the async function inside:\n\nuseEffect(() => {\n  async function fetchData() {\n    // You can await here\n    const response = await MyAPI.getData(someId);\n    // ...\n  }\n  fetchData();\n}, [someId]); // Or [] if effect doesn't need props or state\n\nLearn more about data fetching with Hooks: https://reactjs.org/link/hooks-data-fetching","ArrowFunctionExpression","React Hook useEffect has a missing dependency: 'fQuestions.length'. Either include it or remove the dependency array.",["523"],"React Hook useEffect has a missing dependency: 'onClose'. Either include it or remove the dependency array.",["524"],"React Hook useCallback does nothing when called with only one argument. Did you forget to pass an array of dependencies?","Expected '!==' and instead saw '!='.","'upldtask' is assigned a value but never used.","no-loop-func","Function declared in a loop contains unsafe references to variable(s) 'surl'.","unsafeRefs","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'ReactReadMoreReadLess' is defined but never used.","'feedBack1' is defined but never used.","'newpost' is assigned a value but never used.","'sheight1' is assigned a value but never used.","'setUsertext' is assigned a value but never used.","'lock' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'swidths1'. Either include it or remove the dependency array.",["525"],"jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","'height1' is assigned a value but never used.","'setTextcontent' is assigned a value but never used.","'click' is assigned a value but never used.","'edit' is assigned a value but never used.","'delpost' is assigned a value but never used.","'Link' is defined but never used.","'constants' is defined but never used.","React Hook useEffect has missing dependencies: 'pdata' and 'props.id'. Either include them or remove the dependency array.",["526"],"'Component' is defined but never used.","'tempChat' is assigned a value but never used.","'settrue' is defined but never used.","'heights' is assigned a value but never used.","'mflag' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'chat'. Either include it or remove the dependency array.",["527"],"React Hook useEffect has a missing dependency: 'uitf'. Either include it or remove the dependency array.",["528"],"React Hook useEffect has missing dependencies: 'chid' and 'click2'. Either include them or remove the dependency array.",["529"],"Function declared in a loop contains unsafe references to variable(s) 'cfile', 'cfile'.","'uploadmedia' is defined but never used.","React Hook useCallback has a missing dependency: 'props'. Either include it or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useCallback call and refer to those specific props inside useCallback.",["530"],"'checkt' is assigned a value but never used.","'satish' is defined but never used.","'madia' is assigned a value but never used.","'avoid' is assigned a value but never used.","'handleChange' is defined but never used.","use-isnan","Use the isNaN function to compare with NaN.","comparisonWithNaN","React Hook useEffect has missing dependencies: 'arrayvar2', 'handleSubmit', and 'image.length'. Either include them or remove the dependency array.",["531"],"Function declared in a loop contains unsafe references to variable(s) 'cfile', 'cfile', 'cfile'.","'Image' is defined but never used.","'react' is defined but never used.","'MdDelete' is defined but never used.","'MdAccessTime' is defined but never used.","'AiFillEdit' is defined but never used.","'HiCurrencyRupee' is defined but never used.","'FaTools' is defined but never used.","'posttime' is assigned a value but never used.",["532"],"no-global-assign","no-unsafe-negation",{"desc":"533","fix":"534"},{"messageId":"535","fix":"536","desc":"537"},{"messageId":"538","fix":"539","desc":"540"},{"desc":"541","fix":"542"},{"desc":"543","fix":"544"},{"desc":"545","fix":"546"},{"desc":"547","fix":"548"},{"desc":"549","fix":"550"},{"desc":"551","fix":"552"},{"desc":"553","fix":"554"},{"desc":"555","fix":"556"},{"desc":"557","fix":"558"},{"desc":"547","fix":"559"},"Update the dependencies array to be: [history]",{"range":"560","text":"561"},"removeEscape",{"range":"562","text":"563"},"Remove the `\\`. This maintains the current functionality.","escapeBackslash",{"range":"564","text":"565"},"Replace the `\\` with `\\\\` to include the actual backslash character.","Update the dependencies array to be: [fQuestions.length, props.open]",{"range":"566","text":"567"},"Update the dependencies array to be: [count, onClose]",{"range":"568","text":"569"},"Update the dependencies array to be: [swidths1]",{"range":"570","text":"571"},"Update the dependencies array to be: [pdata, props.id]",{"range":"572","text":"573"},"Update the dependencies array to be: [chat, chat.body]",{"range":"574","text":"575"},"Update the dependencies array to be: [uitf, upload]",{"range":"576","text":"577"},"Update the dependencies array to be: [chid, click2, image2]",{"range":"578","text":"579"},"Update the dependencies array to be: [props]",{"range":"580","text":"581"},"Update the dependencies array to be: [arrayvar, arrayvar2, handleSubmit, image.length]",{"range":"582","text":"583"},{"range":"584","text":"573"},[275,277],"[history]",[3135,3136],"",[3135,3135],"\\",[970,982],"[fQuestions.length, props.open]",[1108,1115],"[count, onClose]",[5692,5694],"[swidths1]",[969,971],"[pdata, props.id]",[15231,15242],"[chat, chat.body]",[17212,17220],"[uitf, upload]",[18288,18296],"[chid, click2, image2]",[41445,41457],"[props]",[6220,6230],"[arrayvar, arrayvar2, handleSubmit, image.length]",[14426,14428]]